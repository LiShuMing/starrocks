Python 3.10.6
[1mApache Maven 3.6.3[m
Maven home: /usr/share/maven
Java version: 11.0.18, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64
Default locale: en_US, platform encoding: ANSI_X3.4-1968
OS name: "linux", version: "5.15.0-46-generic", arch: "amd64", family: "unix"
Get params:
    BUILD_BE            -- 1
    BE_CMAKE_TYPE       -- 
    BUILD_FE            -- 0
    BUILD_SPARK_DPP     -- 0
    CLEAN               -- 1
    RUN_UT              -- 0
    WITH_GCOV           -- OFF
    WITH_BENCH          -- OFF
    USE_STAROS          -- OFF
    USE_AVX2            -- ON
    USE_AVX512          -- OFF
    PARALLEL            -- 27
    ENABLE_QUERY_DEBUG_TRACE -- OFF
    WITH_BLOCK_CACHE    -- OFF
    USE_JEMALLOC        -- ON

Build generated code
rm -rf /root/starrocks/gensrc/build/
make -C script
make[1]: Entering directory '/root/starrocks/gensrc/script'
python /root/starrocks/gensrc/script/../../build-support/gen_build_version.py --cpp /root/starrocks/gensrc/script/../build//gen_cpp --java /root/starrocks/gensrc/script/../../fe/fe-core/target/generated-sources/build
python /root/starrocks/gensrc/script/gen_functions.py --cpp /root/starrocks/gensrc/script/../build//gen_cpp  --java /root/starrocks/gensrc/script/../../fe/fe-core/target/generated-sources/build
make[1]: Leaving directory '/root/starrocks/gensrc/script'
make -C proto
make[1]: Entering directory '/root/starrocks/gensrc/proto'
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/persistent_index.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/olap_file.proto
olap_file.proto:44:1: warning: Import segment.proto is unused.
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/snapshot.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/lake_service.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/tablet_schema.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/doris_internal_service.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/binlog.proto
binlog.proto:19:1: warning: Import olap_file.proto is unused.
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/data.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/lake_types.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/status.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/types.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/internal_service.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/segment.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/orc_proto.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/descriptors.proto
/var/local/thirdparty/installed/bin/protoc --proto_path=/root/starrocks/gensrc/proto --cpp_out=/root/starrocks/gensrc/proto/../build//gen_cpp /root/starrocks/gensrc/proto/olap_common.proto
make[1]: Leaving directory '/root/starrocks/gensrc/proto'
make -C thrift
make[1]: Entering directory '/root/starrocks/gensrc/thrift'
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/MVMaintenance.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/FrontendService.thrift
[WARNING:/root/starrocks/gensrc/thrift/FrontendService.thrift:698] The "byte" type is a compatibility alias for "i8". Use "i8" to emphasize the signedness of this type.

[WARNING:/root/starrocks/gensrc/thrift/FrontendService.thrift:1247] No field key specified for request, resulting protocol may have conflicts or not be backwards compatible!

[WARNING:/root/starrocks/gensrc/thrift/FrontendService.thrift:1250] No field key specified for params, resulting protocol may have conflicts or not be backwards compatible!

[WARNING:/root/starrocks/gensrc/thrift/FrontendService.thrift:1247] No field key specified for request, resulting protocol may have conflicts or not be backwards compatible!

[WARNING:/root/starrocks/gensrc/thrift/FrontendService.thrift:1250] No field key specified for params, resulting protocol may have conflicts or not be backwards compatible!

/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Planner.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/StatusCode.thrift
patch -p0 -d /root/starrocks/gensrc/thrift/../build//gen_cpp < StatusCode_types.diff 2>&1 1>/dev/null
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/StarrocksExternalService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Normalization.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/RuntimeProfile.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/RuntimeFilter.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/parquet.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/FileBrokerService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Metrics.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/CloudConfiguration.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/BackendService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/PlanNodes.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Data.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Status.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Opcodes.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/WorkGroup.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/ResourceUsage.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Descriptors.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Types.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Exprs.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/DataSinks.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/Partitions.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/AgentService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/InternalService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/MasterService.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/QueryPlanExtra.thrift
/var/local/thirdparty/installed/bin/thrift -I /root/starrocks/gensrc/thrift -I /root/starrocks/gensrc/thrift/../build//thrift/ --allow-64bit-consts --gen cpp -out /root/starrocks/gensrc/thrift/../build//gen_cpp /root/starrocks/gensrc/thrift/HeartbeatService.thrift
make[1]: Leaving directory '/root/starrocks/gensrc/thrift'
cmake version 3.22.1

CMake suite maintained and supported by Kitware (kitware.com/cmake).
Build Backend: Release
-- The CXX compiler identification is Clang 14.0.0
-- The C compiler identification is Clang 14.0.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /bin/clang++-14 - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /bin/clang-14 - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Build type is RELEASE
-- Build target arch is x86_64
-- make test: OFF
-- defined PIC_LIB_PATH
-- build gensrc if necessary
make: Entering directory '/root/starrocks/gensrc'
make -C script
make[1]: Entering directory '/root/starrocks/gensrc/script'
python /root/starrocks/gensrc/script/../../build-support/gen_build_version.py --cpp /root/starrocks/gensrc/script/../build//gen_cpp --java /root/starrocks/gensrc/script/../../fe/fe-core/target/generated-sources/build
gen_build_version.py /root/starrocks/gensrc/script/../build//gen_cpp/version.cpp: old fingerprint = 5090cf0635e2c109e2cfd1dc85e67a98, new fingerprint = 5090cf0635e2c109e2cfd1dc85e67a98
gen_build_version.py /root/starrocks/gensrc/script/../../fe/fe-core/target/generated-sources/build/com/starrocks/common/Version.java: old fingerprint = a013dcec9b32cb55e011cede2d345216, new fingerprint = a013dcec9b32cb55e011cede2d345216
make[1]: Leaving directory '/root/starrocks/gensrc/script'
make -C proto
make[1]: Entering directory '/root/starrocks/gensrc/proto'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/root/starrocks/gensrc/proto'
make -C thrift
make[1]: Entering directory '/root/starrocks/gensrc/thrift'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/root/starrocks/gensrc/thrift'
make: Leaving directory '/root/starrocks/gensrc'
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Found Boost: /var/local/thirdparty/installed/include (found suitable version "1.80.0", minimum required is "1.80.0") found components: thread regex program_options filesystem context chrono atomic 
-- /var/local/thirdparty/installed/lib/libboost_thread.a/var/local/thirdparty/installed/lib/libboost_regex.a/var/local/thirdparty/installed/lib/libboost_program_options.a/var/local/thirdparty/installed/lib/libboost_filesystem.a/var/local/thirdparty/installed/lib/libboost_context.a/var/local/thirdparty/installed/lib/libboost_chrono.a/var/local/thirdparty/installed/lib/libboost_atomic.a
-- Using OpenSSL Root Dir: /var/local/thirdparty/installed/
-- Found AWS SDK for C++, Version: 1.9.179, Install Root:/var/local/thirdparty/installed, Platform Prefix:, Platform Dependent Libraries: pthread;crypto;ssl;z;curl
-- Components specified for AWSSDK: core;s3;s3-crt;transfer;identity-management;sts, application will be depending on libs: aws-cpp-sdk-s3-crt;aws-cpp-sdk-transfer;aws-cpp-sdk-identity-management;aws-cpp-sdk-cognito-identity;aws-cpp-sdk-sts;aws-cpp-sdk-s3;aws-cpp-sdk-core;aws-crt-cpp;aws-c-auth;aws-c-cal;aws-c-common;aws-c-compression;aws-c-event-stream;aws-c-http;aws-c-io;aws-c-mqtt;aws-c-s3;aws-checksums;pthread;crypto;ssl;z;curl
-- Try finding aws-cpp-sdk-core
-- Found LibCrypto: /root/starrocks/thirdparty/installed/lib/libcrypto.a  
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Include Dir: /root/starrocks/thirdparty/installed/include
-- LibCrypto Shared Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- LibCrypto Static Lib:  /root/starrocks/thirdparty/installed/lib/libcrypto.a
-- Found aws-cpp-sdk-core
-- Try finding aws-cpp-sdk-s3
-- Found aws-cpp-sdk-s3
-- Try finding aws-cpp-sdk-sts
-- Found aws-cpp-sdk-sts
-- Try finding aws-cpp-sdk-cognito-identity
-- Found aws-cpp-sdk-cognito-identity
-- Try finding aws-cpp-sdk-identity-management
-- Found aws-cpp-sdk-identity-management
-- Try finding aws-cpp-sdk-transfer
-- Found aws-cpp-sdk-transfer
-- Try finding aws-cpp-sdk-s3-crt
-- Found aws-cpp-sdk-s3-crt
-- Looking for sched_getcpu
-- Looking for sched_getcpu - found
-- Compiler Flags:   -Wall -Wno-sign-compare -Wno-unknown-pragmas -pthread -Wno-register -Wno-strict-aliasing -fno-omit-frame-pointer -std=gnu++17 -D__STDC_FORMAT_MACROS -Wno-deprecated -Wno-vla -Wno-comment -Wno-unused-parameter -Wno-documentation -Wno-weak-vtables -Wno-reserved-identifier -Wno-suggest-destructor-override -Wno-documentation-unknown-command -Wno-old-style-cast -Wno-c++20-designator -Wno-mismatched-tags -Wno-bitwise-instead-of-logical -DBOOST_DATE_TIME_POSIX_TIME_STD_CONFIG -DBOOST_SYSTEM_NO_DEPRECATED -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -Werror=return-type -Werror=switch --gcc-toolchain=/bin/.. -msse4.2 -mavx2  -Wno-attributes -DS2_USE_GFLAGS -DS2_USE_GLOG -faligned-new  -g -Wno-unused-local-typedefs -O3 -gdwarf-4 -DNDEBUG
use jemalloc
++++ <STARROCKS_HOME> is set. formats/orc/apache-orc is compiled in StarRocks env ++++
-- Build type: RELEASE
-- compiler Clang version 14.0.0
-- Performing Test ORC_CXX_HAS_INITIALIZER_LIST
-- Performing Test ORC_CXX_HAS_INITIALIZER_LIST - Success
-- Performing Test ORC_CXX_HAS_NOEXCEPT
-- Performing Test ORC_CXX_HAS_NOEXCEPT - Success
-- Performing Test ORC_CXX_HAS_NULLPTR
-- Performing Test ORC_CXX_HAS_NULLPTR - Success
-- Performing Test ORC_CXX_HAS_OVERRIDE
-- Performing Test ORC_CXX_HAS_OVERRIDE - Success
-- Performing Test ORC_CXX_HAS_UNIQUE_PTR
-- Performing Test ORC_CXX_HAS_UNIQUE_PTR - Success
-- Performing Test ORC_CXX_HAS_CSTDINT
-- Performing Test ORC_CXX_HAS_CSTDINT - Success
-- Performing Test ORC_CXX_HAS_THREAD_LOCAL
-- Performing Test ORC_CXX_HAS_THREAD_LOCAL - Success
-- SNAPPY_HOME: /var/local/thirdparty/installed
-- Found the Snappy header: /var/local/thirdparty/installed/include/snappy.h
-- Found the Snappy library: /var/local/thirdparty/installed/lib/libsnappy.a
-- ZLIB_HOME: /var/local/thirdparty/installed
-- Found the ZLIB header: /var/local/thirdparty/installed/include/zlib.h
-- Found the ZLIB library: /var/local/thirdparty/installed/lib/libz.a
-- Found the ZLIB static library: /var/local/thirdparty/installed/lib/libz.a
-- ZSTD_HOME: /var/local/thirdparty/installed
-- Found the zstd header: /var/local/thirdparty/installed/include/zstd/zstd.h
-- Found the zstd library: /var/local/thirdparty/installed/lib
-- LZ4_HOME: /var/local/thirdparty/installed
-- Found the LZ4 header: /var/local/thirdparty/installed/include/lz4/lz4.h
-- Found the LZ4 library: /var/local/thirdparty/installed/lib
-- PROTOBUF_HOME: /var/local/thirdparty/installed
-- Found the Protobuf headers: /var/local/thirdparty/installed/include
-- Found the Protobuf library: /var/local/thirdparty/installed/lib/libprotobuf.a
-- Found the Protoc library: /var/local/thirdparty/installed/lib/libprotoc.a
-- Found the Protoc executable: /var/local/thirdparty/installed/bin/protoc
-- Found the Protobuf static library: /var/local/thirdparty/installed/lib/libprotobuf.a
-- Found the Protoc static library: /var/local/thirdparty/installed/lib/libprotoc.a
-- Performing Test HAS_PREAD
-- Performing Test HAS_PREAD - Success
-- Performing Test HAS_STRPTIME
-- Performing Test HAS_STRPTIME - Success
-- Performing Test HAS_STOLL
-- Performing Test HAS_STOLL - Success
-- Performing Test HAS_BUILTIN_OVERFLOW_CHECK
-- Performing Test HAS_BUILTIN_OVERFLOW_CHECK - Success
-- Performing Test INT64_IS_LL
-- Performing Test INT64_IS_LL - Failed
-- Performing Test HAS_DIAGNOSTIC_PUSH
-- Performing Test HAS_DIAGNOSTIC_PUSH - Success
-- Performing Test HAS_STD_ISNAN
-- Performing Test HAS_STD_ISNAN - Success
-- Performing Test HAS_STD_MUTEX
-- Performing Test HAS_STD_MUTEX - Success
-- Performing Test NEEDS_REDUNDANT_MOVE
-- Performing Test NEEDS_REDUNDANT_MOVE - Failed
-- Performing Test HAS_DOUBLE_TO_STRING
-- Performing Test HAS_DOUBLE_TO_STRING - Success
-- Performing Test HAS_INT64_TO_STRING
-- Performing Test HAS_INT64_TO_STRING - Success
-- Performing Test HAS_CONSTEXPR
-- Performing Test HAS_CONSTEXPR - Success
-- Performing Test HAS_PRE_1970
-- Performing Test HAS_PRE_1970 - Success
-- Performing Test HAS_POST_2038
-- Performing Test HAS_POST_2038 - Success
-- Performing Test NEEDS_Z_PREFIX
-- Performing Test NEEDS_Z_PREFIX - Failed
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    STARROCKS_HOME


-- Build files have been written to: /root/starrocks/be/build_Release
[  0%] Generating orc_proto.pb.h, orc_proto.pb.cc
[  1%] Generating bit_packing_gen.inc
[  1%] Generating /root/starrocks/gensrc/build/geo/wkt_yacc.y.cpp, /root/starrocks/gensrc/build/geo/wkt_yacc.y.hpp
[  2%] Generating /root/starrocks/gensrc/build/geo/wkt_lex.l.cpp, /root/starrocks/gensrc/build/geo/wkt_lex.l.h
[  2%] Building CXX object CMakeFiles/build_version.dir/build_version.cc.o
[  2%] Building CXX object src/common/CMakeFiles/Common.dir/daemon.cpp.o
[  2%] Building CXX object src/connector/CMakeFiles/Connector.dir/connector.cpp.o
[  2%] Building CXX object src/agent/CMakeFiles/Agent.dir/agent_server.cpp.o
[  2%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fd_cache.cpp.o
[  2%] Building CXX object src/column/CMakeFiles/Column.dir/array_column.cpp.o
[  3%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/array_converter.cpp.o
[  5%] Building CXX object src/storage/rowset/CMakeFiles/Rowset.dir/unique_rowset_id_generator.cpp.o
[  5%] Building CXX object src/serde/CMakeFiles/Serde.dir/column_array_serde.cpp.o
[  5%] Building CXX object src/http/CMakeFiles/Webserver.dir/download_action.cpp.o
[  5%] Building CXX object src/io/CMakeFiles/IO.dir/array_input_stream.cpp.o
[  5%] Building CXX object src/testutil/CMakeFiles/TestUtil.dir/desc_tbl_builder.cc.o
[  5%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/bits.cc.o
[  5%] Building CXX object src/service/service_be/CMakeFiles/ServiceBE.dir/backend_service.cpp.o
[  5%] Building CXX object src/script/CMakeFiles/Script.dir/script.cpp.o
[  5%] Building CXX object src/service/CMakeFiles/Service.dir/backend_options.cpp.o
[  5%] Building CXX object src/service/service_cn/CMakeFiles/ServiceCN.dir/compute_service.cpp.o
[  5%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_factory.cpp.o
[  5%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/broker_mgr.cpp.o
[  5%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/thrift_types_customize_impl.cpp.o
[  5%] Building CXX object src/types/CMakeFiles/Types.dir/array_type_info.cpp.o
[  6%] Building CXX object src/common/CMakeFiles/Common.dir/status.cpp.o
[  7%] Building CXX object src/storage/CMakeFiles/Storage.dir/aggregate_type.cpp.o
[  7%] Built target build_version
[  7%] Building CXX object src/exec/CMakeFiles/Exec.dir/data_sink.cpp.o
[  7%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/buffer_control_block.cpp.o
[  7%] Building CXX object src/serde/CMakeFiles/Serde.dir/protobuf_serde.cpp.o
[  7%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/io/InputStream.cc.o
[  7%] Building CXX object src/geo/CMakeFiles/Geo.dir/geo_common.cpp.o
[  7%] Building CXX object src/geo/CMakeFiles/Geo.dir/geo_types.cpp.o
[  8%] Building C object src/gutil/CMakeFiles/Gutil.dir/dynamic_annotations.c.o
[  8%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/hash/city.cc.o
[  8%] Building CXX object src/storage/CMakeFiles/Storage.dir/base_tablet.cpp.o
/root/starrocks/be/src/fs/fd_cache.cpp:35:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    void* value = reinterpret_cast<void*>(static_cast<uintptr_t>(fd));
                  ^
[  9%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs.cpp.o
[  9%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/AgentService_constants.cpp.o
[  9%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/hash/hash.cc.o
[  9%] Building CXX object src/io/CMakeFiles/IO.dir/compressed_input_stream.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/InputStream.cc:77:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SeekableInputStream::~SeekableInputStream() {
                     ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/InputStream.cc:81:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SeekableArrayInputStream::~SeekableArrayInputStream() {
                          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/InputStream.cc:162:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SeekableFileInputStream::~SeekableFileInputStream() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/InputStream.cc:168:16: warning: use std::make_unique instead [modernize-make-unique]
        buffer.reset(new DataBuffer<char>(pool, blockSize));
              ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~               ~
               = std::make_unique<DataBuffer<char>>
[  9%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/io/OutputStream.cc.o
[  9%] Building CXX object src/service/CMakeFiles/Service.dir/backend_base.cpp.o
[  9%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/hash/jenkins.cc.o
[  9%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/int128.cc.o
[  9%] Building CXX object src/types/CMakeFiles/Types.dir/bitmap_value.cpp.o
[  9%] Building CXX object src/storage/rowset/CMakeFiles/Rowset.dir/rowset.cpp.o
[  9%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_approx.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/OutputStream.cc:27:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PositionRecorder::~PositionRecorder() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/OutputStream.cc:34:16: warning: use std::make_unique instead [modernize-make-unique]
    dataBuffer.reset(new DataBuffer<char>(pool));
              ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~    ~
               = std::make_unique<DataBuffer<char>>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/io/OutputStream.cc:38:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BufferedOutputStream::~BufferedOutputStream() {
                      ^
[  9%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/ExpressionTree.cc.o
[  9%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/once.cc.o
[  9%] Building CXX object src/geo/CMakeFiles/Geo.dir/wkt_parse.cpp.o
[  9%] Building CXX object src/service/service_cn/CMakeFiles/ServiceCN.dir/http_service.cpp.o
/root/starrocks/gensrc/build/gen_cpp/AgentService_constants.cpp:13:24: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
AgentServiceConstants::AgentServiceConstants() {
                       ^                       ~
                                               = default;
[  9%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/array_reader.cpp.o
[  9%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp.o
[  9%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/ref_counted.cc.o
[  9%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/Literal.cc.o
[ 10%] Building CXX object src/io/CMakeFiles/IO.dir/fd_output_stream.cpp.o
/root/starrocks/be/src/gutil/ref_counted.cc:21:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RefCountedBase::~RefCountedBase() {
                ^
/root/starrocks/be/src/gutil/ref_counted.cc:57:27: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
RefCountedThreadSafeBase::RefCountedThreadSafeBase() {
                          ^
/root/starrocks/be/src/gutil/ref_counted.cc:63:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RefCountedThreadSafeBase::~RefCountedThreadSafeBase() {
                          ^
[ 10%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/spinlock_internal.cc.o
[ 10%] Building CXX object src/geo/CMakeFiles/Geo.dir/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/sargs/Literal.cc:306:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(mValue.Buffer, mSize);
           ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/sargs/Literal.cc:316:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return Decimal(mValue.DecimalVal, mScale);
           ^
[ 10%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/PredicateLeaf.cc.o
[ 10%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/stringprintf.cc.o
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:242:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [modernize-deprecated-headers]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:243:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:244:10: warning: inclusion of deprecated C++ header 'errno.h'; consider using 'cerrno' instead [modernize-deprecated-headers]
#include <errno.h>
         ^~~~~~~~~
         <cerrno>
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:245:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:728:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:980:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1016:23: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
                             ^
                             true
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1277:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1350:20: warning: use nullptr [modernize-use-nullptr]
                                b->yy_ch_buf = NULL;
                                               ^~~~
                                               nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1418:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1450:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1558:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1576:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1608:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1651:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1657:48: warning: use nullptr [modernize-use-nullptr]
                YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
                                                             ^
                                                             nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1673:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1700:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1730:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1731:20: warning: use nullptr [modernize-use-nullptr]
        if (new_buffer == NULL)
                          ^~~~
                          nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1761:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1766:29: warning: use nullptr [modernize-use-nullptr]
        YY_CURRENT_BUFFER_LVALUE = NULL;
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1782:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1837:10: warning: use nullptr [modernize-use-nullptr]
                return NULL;
                       ^~~~
                       nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1846:21: warning: use nullptr [modernize-use-nullptr]
        b->yy_input_file = NULL;
                           ^~~~
                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1915:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1945:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1954:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1967:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1980:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1989:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:1998:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2008:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2018:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2028:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2043:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2060:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2066:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2072:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2078:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2086:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2092:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2104:27: warning: use nullptr [modernize-use-nullptr]
    if (ptr_yy_globals == NULL){
                          ^~~~
                          nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2109:71: warning: use nullptr [modernize-use-nullptr]
    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), NULL );
                                                                      ^~~~
                                                                      nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2111:28: warning: use nullptr [modernize-use-nullptr]
    if (*ptr_yy_globals == NULL){
                           ^~~~
                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2135:27: warning: use nullptr [modernize-use-nullptr]
    if (ptr_yy_globals == NULL){
                          ^~~~
                          nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2142:28: warning: use nullptr [modernize-use-nullptr]
    if (*ptr_yy_globals == NULL){
                           ^~~~
                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2158:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2163:28: warning: use nullptr [modernize-use-nullptr]
    yyg->yy_buffer_stack = NULL;
                           ^~~~
                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2166:23: warning: use nullptr [modernize-use-nullptr]
    yyg->yy_c_buf_p = NULL;
                      ^~~~
                      nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2172:28: warning: use nullptr [modernize-use-nullptr]
    yyg->yy_start_stack =  NULL;
                           ^~~~
                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2179:12: warning: use nullptr [modernize-use-nullptr]
    yyin = NULL;
           ^~~~
           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2180:13: warning: use nullptr [modernize-use-nullptr]
    yyout = NULL;
            ^~~~
            nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2192:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    ^~~~~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2197:30: warning: use nullptr [modernize-use-nullptr]
                YY_CURRENT_BUFFER_LVALUE = NULL;
                                           ^~~~
                                           nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2203:25: warning: use nullptr [modernize-use-nullptr]
        yyg->yy_buffer_stack = NULL;
                               ^~~~
                               nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2207:31: warning: use nullptr [modernize-use-nullptr]
        yyg->yy_start_stack = NULL;
                              ^~~~
                              nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2215:17: warning: use nullptr [modernize-use-nullptr]
    yyscanner = NULL;
                ^~~~
                nullptr
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2248:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2255:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/geo/wkt_lex.l.cpp:2270:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
        ^~~~~~~~~~~~~~~
        auto
[ 10%] Building CXX object src/geo/CMakeFiles/Geo.dir/root/starrocks/gensrc/build/geo/wkt_yacc.y.cpp.o
[ 10%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/binary_converter.cpp.o
[ 10%] Building CXX object src/io/CMakeFiles/IO.dir/fd_input_stream.cpp.o
[ 10%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/ascii_ctype.cc.o
[ 11%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/charset.cc.o
[ 11%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/escaping.cc.o
/root/starrocks/gensrc/build/geo/wkt_yacc.y.cpp:1012:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        union yyalloc *yyptr =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/geo/wkt_yacc.y.cpp:1337:7: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
  if (0)
      ^
      false
[ 11%] Linking CXX static library ../../../output/tmp/RELEASE/libGeo.a
[ 11%] Built target Geo
[ 11%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/join.cc.o
[ 11%] Building CXX object src/types/CMakeFiles/Types.dir/date_value.cpp.o
[ 11%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/memutil.cc.o
[ 11%] Building CXX object src/io/CMakeFiles/IO.dir/seekable_input_stream.cpp.o
[ 11%] Building CXX object src/io/CMakeFiles/IO.dir/readable.cpp.o
[ 11%] Building CXX object src/testutil/CMakeFiles/TestUtil.dir/function_utils.cpp.o
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:26:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTStorageFormatValues, _kTStorageFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:26:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTStorageFormatValues, _kTStorageFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:29:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:39:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:41:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:57:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTTabletTypeValues, _kTTabletTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:57:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTTabletTypeValues, _kTTabletTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:60:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:70:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:72:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:84:203: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAgentServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTAgentServiceVersionValues, _kTAgentServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                          ^~~~
                                                                                                                                                                                                          nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:84:209: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAgentServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTAgentServiceVersionValues, _kTAgentServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                ^~~~
                                                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:87:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAgentServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:97:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAgentServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:99:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:123:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletMetaType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTTabletMetaTypeValues, _kTTabletMetaTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:123:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletMetaType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTTabletMetaTypeValues, _kTTabletMetaTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:126:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletMetaType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:136:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletMetaType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:138:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:150:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTopicType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTTopicTypeValues, _kTTopicTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:150:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTopicType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTTopicTypeValues, _kTTopicTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:153:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTopicType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:163:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTopicType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:165:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:172:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletSchema::~TTabletSchema() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:533:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBinlogConfig::~TBinlogConfig() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:693:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCreateTabletReq::~TCreateTabletReq() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1149:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDropTabletReq::~TDropTabletReq() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1288:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAlterTabletReq::~TAlterTabletReq() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1426:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAlterTabletReqV2::~TAlterTabletReqV2() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1700:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAlterMaterializedViewParam::~TAlterMaterializedViewParam() noexcept {
                             ^                                       ~
                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1839:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TClusterInfo::~TClusterInfo() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:1954:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPushReq::~TPushReq() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:2452:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCloneReq::~TCloneReq() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:2791:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStorageMediumMigrateReq::~TStorageMediumMigrateReq() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:2931:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCancelDeleteDataReq::~TCancelDeleteDataReq() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:3092:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCheckConsistencyReq::~TCheckConsistencyReq() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:3253:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUploadReq::~TUploadReq() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:3530:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDownloadReq::~TDownloadReq() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:3807:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSnapshotRequest::~TSnapshotRequest() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4163:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TReleaseSnapshotRequest::~TReleaseSnapshotRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4255:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TClearRemoteFileReq::~TClearRemoteFileReq() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4394:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionVersionInfo::~TPartitionVersionInfo() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4557:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMoveDirReq::~TMoveDirReq() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4741:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDropAutoIncrementMapReq::~TDropAutoIncrementMapReq() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:4833:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPublishVersionRequest::~TPublishVersionRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5037:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TClearAlterTaskRequest::~TClearAlterTaskRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5152:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TClearTransactionTaskRequest::~TClearTransactionTaskRequest() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5287:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRecoverTabletReq::~TRecoverTabletReq() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5447:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletMetaInfo::~TTabletMetaInfo() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5675:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUpdateTabletMetaInfoReq::~TUpdateTabletMetaInfoReq() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5789:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPluginMetaInfo::~TPluginMetaInfo() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:5951:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAgentTaskRequest::~TAgentTaskRequest() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:6626:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAgentResult::~TAgentResult() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:6787:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTopicItem::~TTopicItem() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:6948:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTopicUpdate::~TTopicUpdate() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:7129:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAgentPublishRequest::~TAgentPublishRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:7266:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMiniLoadEtlTaskRequest::~TMiniLoadEtlTaskRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:7383:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMiniLoadEtlStatusRequest::~TMiniLoadEtlStatusRequest() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:7500:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMiniLoadEtlStatusResult::~TMiniLoadEtlStatusResult() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/AgentService_types.cpp:7734:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDeleteEtlFilesRequest::~TDeleteEtlFilesRequest() noexcept {
                        ^                                  ~
                                                           = default;
[ 11%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/BackendService_constants.cpp.o
[ 11%] Building CXX object src/column/CMakeFiles/Column.dir/adaptive_nullable_column.cpp.o
[ 11%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/SargsApplier.cc.o
[ 11%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/client_cache.cpp.o
/root/starrocks/be/src/gutil/strings/escaping.cc:250:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(unescaped.get(), len);
           ^
/root/starrocks/be/src/gutil/strings/escaping.cc:618:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(dest.get(), len);
           ^
/root/starrocks/be/src/gutil/strings/escaping.cc:626:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(dest.get(), len);
           ^
/root/starrocks/be/src/gutil/strings/escaping.cc:634:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(dest.get(), len);
           ^
/root/starrocks/be/src/gutil/strings/escaping.cc:642:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(dest.get(), len);
           ^
[ 11%] Building CXX object src/io/CMakeFiles/IO.dir/s3_input_stream.cpp.o
[ 11%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/numbers.cc.o
[ 12%] Building CXX object src/connector/CMakeFiles/Connector.dir/hive_connector.cpp.o
[ 12%] Building CXX object src/connector/CMakeFiles/Connector.dir/es_connector.cpp.o
/root/starrocks/be/src/gutil/strings/numbers.cc:452:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(buf);
           ^
/root/starrocks/be/src/gutil/strings/numbers.cc:460:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(buf);
           ^
/root/starrocks/be/src/gutil/strings/numbers.cc:1320:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(p, local + sizeof(local));
           ^
/root/starrocks/be/src/gutil/strings/numbers.cc:1346:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(p, local + sizeof(local));
           ^
/root/starrocks/be/src/gutil/strings/numbers.cc:1374:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(p, local + sizeof(local));
           ^
/root/starrocks/be/src/gutil/strings/numbers.cc:1400:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(p, local + sizeof(local));
           ^
/root/starrocks/be/src/types/date_value.cpp:89:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return uint24_t((uint32_t)(y << 9) | (m << 5) | (d));
           ^
[ 12%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/split.cc.o
[ 13%] Building CXX object src/types/CMakeFiles/Types.dir/hll.cpp.o
[ 13%] Linking CXX static library ../../../output/tmp/RELEASE/libTestUtil.a
[ 13%] Built target TestUtil
[ 13%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_headers.cpp.o
[ 13%] Building CXX object src/service/CMakeFiles/Service.dir/internal_service.cpp.o
/root/starrocks/gensrc/build/gen_cpp/BackendService_constants.cpp:13:26: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
BackendServiceConstants::BackendServiceConstants() {
                         ^                         ~
                                                   = default;
[ 13%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp.o
[ 13%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/SearchArgument.cc.o
/root/starrocks/be/src/gutil/strings/split.cc:479:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return string(begin, (*source)++);
               ^
/root/starrocks/be/src/gutil/strings/split.cc:481:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return string(begin);
               ^
/root/starrocks/be/src/gutil/strings/split.cc:774:5: warning: deleted member function should be public [modernize-use-equals-delete]
    ClosingSymbolLookup(const ClosingSymbolLookup&) = delete;
    ^
/root/starrocks/be/src/gutil/strings/split.cc:775:32: warning: deleted member function should be public [modernize-use-equals-delete]
    const ClosingSymbolLookup& operator=(const ClosingSymbolLookup&) = delete;
                               ^
[ 13%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/strip.cc.o
[ 13%] Building CXX object src/io/CMakeFiles/IO.dir/s3_output_stream.cpp.o
[ 13%] Building CXX object src/io/CMakeFiles/IO.dir/cache_input_stream.cpp.o
[ 13%] Linking CXX static library ../../../output/tmp/RELEASE/libSerde.a
[ 13%] Built target Serde
[ 13%] Building CXX object src/service/service_cn/CMakeFiles/ServiceCN.dir/starrocks_cn.cpp.o
[ 13%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/boolean_converter.cpp.o
[ 13%] Building CXX object src/types/CMakeFiles/Types.dir/logical_type.cpp.o
[ 13%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/strcat.cc.o
[ 13%] Building CXX object src/storage/CMakeFiles/Storage.dir/decimal12.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/sargs/SearchArgument.cc:46:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SearchArgument::~SearchArgument() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/sargs/SearchArgument.cc:71:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SearchArgumentBuilder::~SearchArgumentBuilder() {
                       ^
[ 13%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/sargs/TruthValue.cc.o
[ 13%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/local_pass_through_buffer.cpp.o
[ 13%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/wrap/orc-proto-wrapper.cc.o
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:12:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_exec_plan_fragment_args::~BackendService_exec_plan_fragment_args() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:72:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_exec_plan_fragment_pargs::~BackendService_exec_plan_fragment_pargs() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:91:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_exec_plan_fragment_result::~BackendService_exec_plan_fragment_result() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:153:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_exec_plan_fragment_presult::~BackendService_exec_plan_fragment_presult() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:199:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_cancel_plan_fragment_args::~BackendService_cancel_plan_fragment_args() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:259:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_cancel_plan_fragment_pargs::~BackendService_cancel_plan_fragment_pargs() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:278:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_cancel_plan_fragment_result::~BackendService_cancel_plan_fragment_result() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:340:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_cancel_plan_fragment_presult::~BackendService_cancel_plan_fragment_presult() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:386:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_transmit_data_args::~BackendService_transmit_data_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:446:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_transmit_data_pargs::~BackendService_transmit_data_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:465:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_transmit_data_result::~BackendService_transmit_data_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:527:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_transmit_data_presult::~BackendService_transmit_data_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:573:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_fetch_data_args::~BackendService_fetch_data_args() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:633:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_fetch_data_pargs::~BackendService_fetch_data_pargs() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:652:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_fetch_data_result::~BackendService_fetch_data_result() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:714:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_fetch_data_presult::~BackendService_fetch_data_presult() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:760:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_tasks_args::~BackendService_submit_tasks_args() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:840:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_tasks_pargs::~BackendService_submit_tasks_pargs() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:867:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_tasks_result::~BackendService_submit_tasks_result() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:929:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_tasks_presult::~BackendService_submit_tasks_presult() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:975:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_make_snapshot_args::~BackendService_make_snapshot_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1035:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_make_snapshot_pargs::~BackendService_make_snapshot_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1054:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_make_snapshot_result::~BackendService_make_snapshot_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1116:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_make_snapshot_presult::~BackendService_make_snapshot_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1162:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_release_snapshot_args::~BackendService_release_snapshot_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1222:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_release_snapshot_pargs::~BackendService_release_snapshot_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1241:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_release_snapshot_result::~BackendService_release_snapshot_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1303:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_release_snapshot_presult::~BackendService_release_snapshot_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1349:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_publish_cluster_state_args::~BackendService_publish_cluster_state_args() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1409:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_publish_cluster_state_pargs::~BackendService_publish_cluster_state_pargs() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1428:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_publish_cluster_state_result::~BackendService_publish_cluster_state_result() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1490:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_publish_cluster_state_presult::~BackendService_publish_cluster_state_presult() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1536:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_etl_task_args::~BackendService_submit_etl_task_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1596:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_etl_task_pargs::~BackendService_submit_etl_task_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1615:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_etl_task_result::~BackendService_submit_etl_task_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1677:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_etl_task_presult::~BackendService_submit_etl_task_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1723:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_etl_status_args::~BackendService_get_etl_status_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1783:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_etl_status_pargs::~BackendService_get_etl_status_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1802:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_etl_status_result::~BackendService_get_etl_status_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1864:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_etl_status_presult::~BackendService_get_etl_status_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1910:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_delete_etl_files_args::~BackendService_delete_etl_files_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1970:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_delete_etl_files_pargs::~BackendService_delete_etl_files_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:1989:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_delete_etl_files_result::~BackendService_delete_etl_files_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2051:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_delete_etl_files_presult::~BackendService_delete_etl_files_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2097:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_export_task_args::~BackendService_submit_export_task_args() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2157:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_export_task_pargs::~BackendService_submit_export_task_pargs() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2176:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_export_task_result::~BackendService_submit_export_task_result() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2238:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_export_task_presult::~BackendService_submit_export_task_presult() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2284:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_export_status_args::~BackendService_get_export_status_args() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2344:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_export_status_pargs::~BackendService_get_export_status_pargs() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2363:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_export_status_result::~BackendService_get_export_status_result() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2425:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_export_status_presult::~BackendService_get_export_status_presult() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2471:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_erase_export_task_args::~BackendService_erase_export_task_args() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2531:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_erase_export_task_pargs::~BackendService_erase_export_task_pargs() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2550:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_erase_export_task_result::~BackendService_erase_export_task_result() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2612:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_erase_export_task_presult::~BackendService_erase_export_task_presult() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2658:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_tablet_stat_args::~BackendService_get_tablet_stat_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2701:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_tablet_stat_pargs::~BackendService_get_tablet_stat_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2716:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_tablet_stat_result::~BackendService_get_tablet_stat_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2778:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_tablet_stat_presult::~BackendService_get_tablet_stat_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2824:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_routine_load_task_args::~BackendService_submit_routine_load_task_args() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2904:48: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_routine_load_task_pargs::~BackendService_submit_routine_load_task_pargs() noexcept {
                                               ^                                                         ~
                                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2931:49: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_routine_load_task_result::~BackendService_submit_routine_load_task_result() noexcept {
                                                ^                                                          ~
                                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:2993:50: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_submit_routine_load_task_presult::~BackendService_submit_routine_load_task_presult() noexcept {
                                                 ^                                                           ~
                                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3039:49: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_finish_stream_load_channel_args::~BackendService_finish_stream_load_channel_args() noexcept {
                                                ^                                                          ~
                                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3099:50: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_finish_stream_load_channel_pargs::~BackendService_finish_stream_load_channel_pargs() noexcept {
                                                 ^                                                           ~
                                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3118:51: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_finish_stream_load_channel_result::~BackendService_finish_stream_load_channel_result() noexcept {
                                                  ^                                                            ~
                                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3180:52: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_finish_stream_load_channel_presult::~BackendService_finish_stream_load_channel_presult() noexcept {
                                                   ^                                                             ~
                                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3226:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_open_scanner_args::~BackendService_open_scanner_args() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3286:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_open_scanner_pargs::~BackendService_open_scanner_pargs() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3305:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_open_scanner_result::~BackendService_open_scanner_result() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3367:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_open_scanner_presult::~BackendService_open_scanner_presult() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3413:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_next_args::~BackendService_get_next_args() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3473:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_next_pargs::~BackendService_get_next_pargs() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3492:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_next_result::~BackendService_get_next_result() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3554:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_get_next_presult::~BackendService_get_next_presult() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3600:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_close_scanner_args::~BackendService_close_scanner_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3660:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_close_scanner_pargs::~BackendService_close_scanner_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3679:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_close_scanner_result::~BackendService_close_scanner_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:3741:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BackendService_close_scanner_presult::~BackendService_close_scanner_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:4966:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:4967:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:4972:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:4981:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:4990:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5003:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5013:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5020:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5021:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5026:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5035:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5044:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5057:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5067:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5074:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5075:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5080:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5089:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5098:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5111:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5121:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5128:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5129:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5134:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5143:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5152:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5165:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5175:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5182:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5183:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5188:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5197:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5206:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5219:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5229:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5236:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5237:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5242:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5251:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5260:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5273:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5283:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5290:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5291:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5296:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5305:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5314:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5327:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5337:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5344:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5345:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5350:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5359:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5368:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5381:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5391:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5398:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5399:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5404:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5413:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5422:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5435:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5445:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5452:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5453:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5458:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5467:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5476:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5489:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5499:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5506:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5507:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5512:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5521:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5530:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5543:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5553:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5560:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5561:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5566:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5575:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5584:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5597:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5607:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5614:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5615:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5620:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5629:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5638:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5651:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5661:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5668:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5669:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5674:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5683:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5692:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5705:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5715:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5722:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5723:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5728:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5737:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5746:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5759:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5769:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5776:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5777:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5782:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5791:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5800:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5813:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5823:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5830:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5831:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5836:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5845:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5854:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5867:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5877:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5884:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5885:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5890:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5899:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5908:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5921:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5931:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5938:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5939:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5944:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5953:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5962:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5975:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5985:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5992:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5993:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:5998:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:6007:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:6016:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:6029:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/BackendService.cpp:6039:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
[ 13%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp.o
/root/starrocks/be/src/gutil/strings/strcat.cc:54:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(a.data(), a.size());
           ^
[ 13%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/stringpiece.cc.o
[ 13%] Building CXX object src/service/service_be/CMakeFiles/ServiceBE.dir/http_service.cpp.o
/root/starrocks/be/src/io/cache_input_stream.cpp:29:73: warning: the parameter 'stream' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
CacheInputStream::CacheInputStream(std::shared_ptr<SeekableInputStream> stream, const std::string& filename,
                                                                        ^
                                   const                               &
/root/starrocks/be/src/io/cache_input_stream.cpp:29:81: warning: pass by value and use std::move [modernize-pass-by-value]
CacheInputStream::CacheInputStream(std::shared_ptr<SeekableInputStream> stream, const std::string& filename,
                                                                                ^~~~~~~~~~~~~~~~~~
                                                                                std::string 
[ 13%] Building CXX object src/service/service_be/CMakeFiles/ServiceBE.dir/internal_service.cpp.o
[ 13%] Building CXX object src/column/CMakeFiles/Column.dir/chunk.cpp.o
[ 13%] Building CXX object src/storage/CMakeFiles/Storage.dir/decimal_type_info.cpp.o
[ 13%] Building CXX object src/io/CMakeFiles/IO.dir/shared_buffered_input_stream.cpp.o
[ 13%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/converter.cpp.o
[ 13%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/substitute.cc.o
[ 14%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strings/util.cc.o
[ 15%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Adaptor.cc.o
[ 15%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_posix.cpp.o
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:17:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExportTaskRequest::~TExportTaskRequest() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:109:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletStat::~TTabletStat() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:270:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletStatResult::~TTabletStatResult() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:386:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKafkaLoadInfo::~TKafkaLoadInfo() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:619:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPulsarLoadInfo::~TPulsarLoadInfo() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:895:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRoutineLoadTask::~TRoutineLoadTask() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:1306:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKafkaMetaProxyRequest::~TKafkaMetaProxyRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:1400:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKafkaMetaProxyResult::~TKafkaMetaProxyResult() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:1514:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TProxyRequest::~TProxyRequest() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:1608:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TProxyResult::~TProxyResult() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/BackendService_types.cpp:1725:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamLoadChannel::~TStreamLoadChannel() noexcept {
                    ^                              ~
                                                   = default;
[ 15%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp.o
[ 15%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/BloomFilter.cc.o
[ 15%] Building CXX object src/connector/CMakeFiles/Connector.dir/jdbc_connector.cpp.o
[ 15%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/strtoint.cc.o
[ 15%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/sysinfo.cc.o
[ 15%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_method.cpp.o
/root/starrocks/be/src/io/shared_buffered_input_stream.cpp:21:54: warning: pass by value and use std::move [modernize-pass-by-value]
SharedBufferedInputStream::SharedBufferedInputStream(std::shared_ptr<SeekableInputStream> stream,
                                                     ^
/root/starrocks/be/src/io/shared_buffered_input_stream.cpp:22:54: warning: pass by value and use std::move [modernize-pass-by-value]
                                                     const std::string& filename, size_t file_size)
                                                     ^~~~~~~~~~~~~~~~~~
                                                     std::string 
/root/starrocks/be/src/io/shared_buffered_input_stream.cpp:23:19: warning: parameter 'stream' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : _stream(stream), _filename(filename), _file_size(file_size) {}
                  ^
                  std::move( )
[ 15%] Linking CXX static library ../../../output/tmp/RELEASE/libIO.a
[ 15%] Built target IO
[ 16%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_request.cpp.o
[ 16%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_broker.cpp.o
[ 16%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/threading/thread_collision_warner.cc.o
/root/starrocks/be/src/agent/agent_server.cpp:283:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
AgentServer::Impl::~Impl() {}
                   ^       ~~
                           = default;
/root/starrocks/be/src/agent/agent_server.cpp:395:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::CREATE, all_tasks, run_create_tablet_task, CreateTabletAgentTaskRequest,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:399:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::DROP, all_tasks, run_drop_tablet_task, DropTabletAgentTaskRequest, drop_tablet_req,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:409:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::CLEAR_TRANSACTION_TASK, all_tasks, run_clear_transaction_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:413:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::CLONE, all_tasks, run_clone_task, CloneAgentTaskRequest, clone_req, _exec_env);
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:416:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::STORAGE_MEDIUM_MIGRATE, all_tasks, run_storage_medium_migrate_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:420:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::CHECK_CONSISTENCY, all_tasks, run_check_consistency_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:424:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::UPLOAD, all_tasks, run_upload_task, UploadAgentTaskRequest, upload_req, _exec_env);
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:427:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::DOWNLOAD, all_tasks, run_download_task, DownloadAgentTaskRequest, download_req,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:431:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::MAKE_SNAPSHOT, all_tasks, run_make_snapshot_task, SnapshotAgentTaskRequest,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:435:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::RELEASE_SNAPSHOT, all_tasks, run_release_snapshot_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:439:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::MOVE, all_tasks, run_move_dir_task, MoveDirAgentTaskRequest, move_dir_req,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:443:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::UPDATE_TABLET_META_INFO, all_tasks, run_update_meta_info_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:447:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::DROP_AUTO_INCREMENT_MAP, all_tasks, run_drop_auto_increment_map_task,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
/root/starrocks/be/src/agent/agent_server.cpp:456:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            HANDLE_TASK(TTaskType::ALTER, all_tasks, run_alter_tablet_task, AlterTabletAgentTaskRequest,
            ^
/root/starrocks/be/src/agent/agent_server.cpp:383:21: note: expanded from macro 'HANDLE_TASK'
                    std::bind(do_func, std::make_shared<AGENT_REQ>(*task, task->request, time(nullptr)), env));    \
                    ^
[ 16%] Building CXX object src/agent/CMakeFiles/Agent.dir/client_cache.cpp.o
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:40:222: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerOperationStatusCode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTBrokerOperationStatusCodeValues, _kTBrokerOperationStatusCodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:40:228: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerOperationStatusCode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTBrokerOperationStatusCodeValues, _kTBrokerOperationStatusCodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                   ^~~~
                                                                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:43:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerOperationStatusCode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:53:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerOperationStatusCode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:55:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:67:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTBrokerVersionValues, _kTBrokerVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:67:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTBrokerVersionValues, _kTBrokerVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:70:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:80:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:82:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:94:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerOpenMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTBrokerOpenModeValues, _kTBrokerOpenModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:94:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TBrokerOpenMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTBrokerOpenModeValues, _kTBrokerOpenModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:97:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerOpenMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:107:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TBrokerOpenMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:109:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:116:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerOperationStatus::~TBrokerOperationStatus() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:235:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerFileStatus::~TBrokerFileStatus() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:396:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerFD::~TBrokerFD() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:511:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerListResponse::~TBrokerListResponse() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:648:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerOpenReaderResponse::~TBrokerOpenReaderResponse() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:787:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerReadResponse::~TBrokerReadResponse() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:904:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerOpenWriterResponse::~TBrokerOpenWriterResponse() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1021:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerCheckPathExistResponse::~TBrokerCheckPathExistResponse() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1136:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerListPathRequest::~TBrokerListPathRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1348:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerDeletePathRequest::~TBrokerDeletePathRequest() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1512:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerRenamePathRequest::~TBrokerRenamePathRequest() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1699:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerCheckPathExistRequest::~TBrokerCheckPathExistRequest() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:1863:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerOpenReaderRequest::~TBrokerOpenReaderRequest() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2073:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerPReadRequest::~TBrokerPReadRequest() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2236:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerSeekRequest::~TBrokerSeekRequest() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2376:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerCloseReaderRequest::~TBrokerCloseReaderRequest() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2493:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerOpenWriterRequest::~TBrokerOpenWriterRequest() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2705:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerPWriteRequest::~TBrokerPWriteRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2868:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerCloseWriterRequest::~TBrokerCloseWriterRequest() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FileBrokerService_types.cpp:2985:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerPingBrokerRequest::~TBrokerPingBrokerRequest() noexcept {
                          ^                                    ~
                                                               = default;
[ 16%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp.o
[ 16%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/csv_reader.cpp.o
[ 16%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/utf/rune.cpp.o
[ 16%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/cpu.cc.o
[ 16%] Building C object src/script/CMakeFiles/Script.dir/__/thirdparty/wren/wren.c.o
[ 16%] Building CXX object src/types/CMakeFiles/Types.dir/map_type_info.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/BloomFilter.cc:131:13: warning: use std::make_unique instead [modernize-make-unique]
    mBitSet.reset(new BitSet(mNumBits));
           ~^~~~~ ~~~~~~~~~~~        ~
            = std::make_unique<BitSet>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/BloomFilter.cc:185:17: warning: use std::make_unique instead [modernize-make-unique]
        mBitSet.reset(new BitSet(bitset, mNumBits));
               ~^~~~~ ~~~~~~~~~~~                ~
                = std::make_unique<BitSet>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/BloomFilter.cc:197:17: warning: use std::make_unique instead [modernize-make-unique]
        mBitSet.reset(new BitSet(longs.data(), mNumBits));
               ~^~~~~ ~~~~~~~~~~~                      ~
                = std::make_unique<BitSet>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/BloomFilter.cc:292:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BloomFilter::~BloomFilter() {
             ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/BloomFilter.cc:316:9: warning: use std::make_unique instead [modernize-make-unique]
    ret.reset(new BloomFilterImpl(bloomFilter));
       ~^~~~~ ~~~~~~~~~~~~~~~~~~~~           ~
        = std::make_unique<BloomFilterImpl>
[ 16%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/ByteRLE.cc.o
[ 16%] Building CXX object src/gutil/CMakeFiles/Gutil.dir/atomicops-internals-x86.cc.o
[ 16%] Building CXX object src/storage/CMakeFiles/Storage.dir/delete_handler.cpp.o
[ 16%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/ColumnPrinter.cc.o
[ 16%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_channel.cpp.o
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:12:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_open_scanner_args::~TStarrocksExternalService_open_scanner_args() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:72:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_open_scanner_pargs::~TStarrocksExternalService_open_scanner_pargs() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:91:48: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_open_scanner_result::~TStarrocksExternalService_open_scanner_result() noexcept {
                                               ^                                                         ~
                                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:153:49: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_open_scanner_presult::~TStarrocksExternalService_open_scanner_presult() noexcept {
                                                ^                                                          ~
                                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:199:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_get_next_args::~TStarrocksExternalService_get_next_args() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:259:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_get_next_pargs::~TStarrocksExternalService_get_next_pargs() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:278:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_get_next_result::~TStarrocksExternalService_get_next_result() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:340:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_get_next_presult::~TStarrocksExternalService_get_next_presult() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:386:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_close_scanner_args::~TStarrocksExternalService_close_scanner_args() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:446:48: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_close_scanner_pargs::~TStarrocksExternalService_close_scanner_pargs() noexcept {
                                               ^                                                         ~
                                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:465:49: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_close_scanner_result::~TStarrocksExternalService_close_scanner_result() noexcept {
                                                ^                                                          ~
                                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:527:50: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStarrocksExternalService_close_scanner_presult::~TStarrocksExternalService_close_scanner_presult() noexcept {
                                                 ^                                                           ~
                                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:767:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:768:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:773:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:782:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:791:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:804:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:814:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:821:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:822:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:827:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:836:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:845:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:858:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:868:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:875:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:876:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:881:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:890:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:899:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:912:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TStarrocksExternalService.cpp:922:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
[ 16%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp.o
[ 16%] Linking CXX static library ../../../output/tmp/RELEASE/libGutil.a
[ 16%] Built target Gutil
[ 16%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_avg.cpp.o
[ 17%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/data_stream_mgr.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ByteRLE.cc:34:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ByteRleEncoder::~ByteRleEncoder() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ByteRLE.cc:253:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BooleanRleEncoderImpl::~BooleanRleEncoderImpl() {
                       ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ByteRLE.cc:297:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ByteRleDecoder::~ByteRleDecoder() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ByteRLE.cc:378:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ByteRleDecoderImpl::~ByteRleDecoderImpl() {
                    ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ByteRLE.cc:518:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BooleanRleDecoderImpl::~BooleanRleDecoderImpl() {
                       ^
[ 17%] Building CXX object src/exec/CMakeFiles/Exec.dir/empty_set_node.cpp.o
[ 17%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/date_converter.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnPrinter.cc:209:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnPrinter::~ColumnPrinter() {
               ^
[ 17%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/ColumnReader.cc.o
[ 17%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/datetime_converter.cpp.o
/root/starrocks/be/src/types/map_type_info.cpp:27:26: warning: pass by value and use std::move [modernize-pass-by-value]
    explicit MapTypeInfo(const TypeInfoPtr& key_type, const TypeInfoPtr& value_type)
                         ^~~~~~~~~~~~~~~~~~
                         TypeInfoPtr 
/root/starrocks/be/src/types/map_type_info.cpp:27:55: warning: pass by value and use std::move [modernize-pass-by-value]
    explicit MapTypeInfo(const TypeInfoPtr& key_type, const TypeInfoPtr& value_type)
                                                      ^~~~~~~~~~~~~~~~~~
                                                      TypeInfoPtr 
[ 17%] Building CXX object src/types/CMakeFiles/Types.dir/struct_type_info.cpp.o
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:17:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanOpenParams::~TScanOpenParams() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:424:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanColumnDesc::~TScanColumnDesc() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:542:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanOpenResult::~TScanOpenResult() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:701:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanNextBatchParams::~TScanNextBatchParams() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:817:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanBatchResult::~TScanBatchResult() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:956:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanCloseParams::~TScanCloseParams() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_types.cpp:1050:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanCloseResult::~TScanCloseResult() noexcept {
                  ^                            ~
                                               = default;
[ 18%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_constants.cpp.o
[ 18%] Linking CXX static library ../../../output/tmp/RELEASE/libScript.a
[ 18%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_status.cpp.o
[ 18%] Built target Script
[ 18%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/decimalv2_converter.cpp.o
[ 18%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_parser.cpp.o
/root/starrocks/gensrc/build/gen_cpp/StarrocksExternalService_constants.cpp:13:36: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
StarrocksExternalServiceConstants::StarrocksExternalServiceConstants() {
                                   ^                                   ~
                                                                       = default;
[ 18%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/QueryPlanExtra_types.cpp.o
[ 18%] Building CXX object src/http/CMakeFiles/Webserver.dir/web_page_handler.cpp.o
[ 19%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/decimalv3_converter.cpp.o
/root/starrocks/be/src/storage/rowset/rowset.cpp:280:77: warning: the parameter 'fs' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
Status Rowset::_remove_delta_column_group_files(std::shared_ptr<FileSystem> fs) {
                                                                            ^
                                                const                      &
[ 19%] Building CXX object src/storage/rowset/CMakeFiles/Rowset.dir/rowset_factory.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:51:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StripeStreams::~StripeStreams() {
               ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:76:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnReader::~ColumnReader() {
              ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:169:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BooleanColumnReader::~BooleanColumnReader() {
                     ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:214:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ByteColumnReader::~ByteColumnReader() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:260:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
IntegerColumnReader::~IntegerColumnReader() {
                     ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:316:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimestampColumnReader::~TimestampColumnReader() {
                       ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:535:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DoubleColumnReader::~DoubleColumnReader() {
                    ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:755:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringDictionaryColumnReader::~StringDictionaryColumnReader() {
                              ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:869:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringDirectColumnReader::~StringDirectColumnReader() {
                          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1169:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ListColumnReader::~ListColumnReader() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1288:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MapColumnReader::~MapColumnReader() {
                 ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1608:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Decimal64ColumnReader::~Decimal64ColumnReader() {
                       ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1707:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Decimal128ColumnReader::~Decimal128ColumnReader() {
                        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1762:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Decimal64ColumnReaderV2::~Decimal64ColumnReaderV2() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnReader.cc:1837:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DecimalHive11ColumnReader::~DecimalHive11ColumnReader() {
                           ^
[ 19%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/ColumnWriter.cc.o
[ 19%] Building CXX object src/agent/CMakeFiles/Agent.dir/heartbeat_server.cpp.o
[ 19%] Building CXX object src/agent/CMakeFiles/Agent.dir/task_worker_pool.cpp.o
[ 19%] Building CXX object src/agent/CMakeFiles/Agent.dir/utils.cpp.o
[ 19%] Building CXX object src/types/CMakeFiles/Types.dir/timestamp_value.cpp.o
[ 20%] Building CXX object src/exec/CMakeFiles/Exec.dir/exec_node.cpp.o
/root/starrocks/gensrc/build/gen_cpp/QueryPlanExtra_types.cpp:17:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletVersionInfo::~TTabletVersionInfo() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/QueryPlanExtra_types.cpp:178:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TQueryPlanInfo::~TQueryPlanInfo() noexcept {
                ^                          ~
                                           = default;
[ 20%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/QueryPlanExtra_constants.cpp.o
[ 20%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp.o
[ 20%] Building CXX object src/storage/CMakeFiles/Storage.dir/del_vector.cpp.o
[ 20%] Building CXX object src/column/CMakeFiles/Column.dir/chunk_extra_data.cpp.o
[ 20%] Building CXX object src/column/CMakeFiles/Column.dir/column.cpp.o
[ 20%] Linking CXX static library ../../../output/tmp/RELEASE/libTypes.a
[ 20%] Building CXX object src/http/CMakeFiles/Webserver.dir/monitor_action.cpp.o
[ 20%] Built target Types
[ 20%] Building CXX object src/http/CMakeFiles/Webserver.dir/default_path_handlers.cpp.o
/root/starrocks/be/src/connector/hive_connector.cpp:428:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    FSOptions fsOptions =
    ^~~~~~~~~
    auto
[ 20%] Building CXX object src/http/CMakeFiles/Webserver.dir/utils.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:29:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StreamsFactory::~StreamsFactory() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:58:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RowIndexPositionRecorder::~RowIndexPositionRecorder() {
                          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:95:20: warning: use std::make_unique instead [modernize-make-unique]
        rowIndex = std::unique_ptr<proto::RowIndex>(new proto::RowIndex());
                   ^~~~~~~~~~~~~~~                  ~~~~~~~~~~~~~~~~~~~~~
                   std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:96:25: warning: use std::make_unique instead [modernize-make-unique]
        rowIndexEntry = std::unique_ptr<proto::RowIndexEntry>(new proto::RowIndexEntry());
                        ^~~~~~~~~~~~~~~                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
                        std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:97:28: warning: use std::make_unique instead [modernize-make-unique]
        rowIndexPosition = std::unique_ptr<RowIndexPositionRecorder>(new RowIndexPositionRecorder(*rowIndexEntry));
                           ^~~~~~~~~~~~~~~                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              ~
                           std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:103:25: warning: use std::make_unique instead [modernize-make-unique]
            bloomFilter.reset(new BloomFilterImpl(options.getRowIndexStride(), options.getBloomFilterFPP()));
                       ~^~~~~ ~~~~~~~~~~~~~~~~~~~~                                                        ~
                        = std::make_unique<BloomFilterImpl>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:104:30: warning: use std::make_unique instead [modernize-make-unique]
            bloomFilterIndex.reset(new proto::BloomFilterIndex());
                            ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             = std::make_unique<proto::BloomFilterIndex>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:110:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnWriter::~ColumnWriter() {
              ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:719:16: warning: use std::make_unique instead [modernize-make-unique]
    dataStream.reset(new AppendOnlyBufferedStream(factory.createStream(proto::Stream_Kind_DATA)));
              ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                             ~
               = std::make_unique<AppendOnlyBufferedStream>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:1178:22: warning: use std::make_unique instead [modernize-make-unique]
    directDataStream.reset(new AppendOnlyBufferedStream(streamsFactory.createStream(proto::Stream_Kind_DATA)));
                    ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                    ~
                     = std::make_unique<AppendOnlyBufferedStream>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:1186:16: warning: use std::make_unique instead [modernize-make-unique]
    dictStream.reset(new AppendOnlyBufferedStream(streamsFactory.createStream(proto::Stream_Kind_DICTIONARY_DATA)));
              ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                               ~
               = std::make_unique<AppendOnlyBufferedStream>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:1755:17: warning: use std::make_unique instead [modernize-make-unique]
    valueStream.reset(new AppendOnlyBufferedStream(factory.createStream(proto::Stream_Kind_DATA)));
               ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                             ~
                = std::make_unique<AppendOnlyBufferedStream>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:2082:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ListColumnWriter::~ListColumnWriter() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/ColumnWriter.cc:2285:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MapColumnWriter::~MapColumnWriter() {
                 ^
[ 20%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Common.cc.o
[ 20%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/float_converter.cpp.o
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:12:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_listPath_args::~TFileBrokerService_listPath_args() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:72:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_listPath_pargs::~TFileBrokerService_listPath_pargs() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:91:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_listPath_result::~TFileBrokerService_listPath_result() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:153:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_listPath_presult::~TFileBrokerService_listPath_presult() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:199:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_deletePath_args::~TFileBrokerService_deletePath_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:259:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_deletePath_pargs::~TFileBrokerService_deletePath_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:278:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_deletePath_result::~TFileBrokerService_deletePath_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:340:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_deletePath_presult::~TFileBrokerService_deletePath_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:386:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_renamePath_args::~TFileBrokerService_renamePath_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:446:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_renamePath_pargs::~TFileBrokerService_renamePath_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:465:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_renamePath_result::~TFileBrokerService_renamePath_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:527:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_renamePath_presult::~TFileBrokerService_renamePath_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:573:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_checkPathExist_args::~TFileBrokerService_checkPathExist_args() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:633:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_checkPathExist_pargs::~TFileBrokerService_checkPathExist_pargs() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:652:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_checkPathExist_result::~TFileBrokerService_checkPathExist_result() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:714:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_checkPathExist_presult::~TFileBrokerService_checkPathExist_presult() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:760:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openReader_args::~TFileBrokerService_openReader_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:820:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openReader_pargs::~TFileBrokerService_openReader_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:839:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openReader_result::~TFileBrokerService_openReader_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:901:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openReader_presult::~TFileBrokerService_openReader_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:947:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pread_args::~TFileBrokerService_pread_args() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1007:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pread_pargs::~TFileBrokerService_pread_pargs() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1026:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pread_result::~TFileBrokerService_pread_result() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1088:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pread_presult::~TFileBrokerService_pread_presult() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1134:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_seek_args::~TFileBrokerService_seek_args() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1194:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_seek_pargs::~TFileBrokerService_seek_pargs() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1213:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_seek_result::~TFileBrokerService_seek_result() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1275:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_seek_presult::~TFileBrokerService_seek_presult() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1321:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeReader_args::~TFileBrokerService_closeReader_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1381:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeReader_pargs::~TFileBrokerService_closeReader_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1400:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeReader_result::~TFileBrokerService_closeReader_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1462:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeReader_presult::~TFileBrokerService_closeReader_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1508:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openWriter_args::~TFileBrokerService_openWriter_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1568:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openWriter_pargs::~TFileBrokerService_openWriter_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1587:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openWriter_result::~TFileBrokerService_openWriter_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1649:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_openWriter_presult::~TFileBrokerService_openWriter_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1695:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pwrite_args::~TFileBrokerService_pwrite_args() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1755:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pwrite_pargs::~TFileBrokerService_pwrite_pargs() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1774:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pwrite_result::~TFileBrokerService_pwrite_result() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1836:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_pwrite_presult::~TFileBrokerService_pwrite_presult() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1882:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeWriter_args::~TFileBrokerService_closeWriter_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1942:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeWriter_pargs::~TFileBrokerService_closeWriter_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:1961:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeWriter_result::~TFileBrokerService_closeWriter_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2023:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_closeWriter_presult::~TFileBrokerService_closeWriter_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2069:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_ping_args::~TFileBrokerService_ping_args() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2129:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_ping_pargs::~TFileBrokerService_ping_pargs() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2148:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_ping_result::~TFileBrokerService_ping_result() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2210:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileBrokerService_ping_presult::~TFileBrokerService_ping_presult() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2972:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2973:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2978:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2987:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:2996:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3009:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3019:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3026:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3027:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3032:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3041:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3050:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3063:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3073:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3080:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3081:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3086:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3095:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3104:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3117:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3127:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3134:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3135:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3140:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3149:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3158:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3171:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3181:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3188:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3189:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3194:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3203:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3212:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3225:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3235:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3242:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3243:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3248:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3257:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3266:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3279:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3289:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3296:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3297:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3302:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3311:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3320:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3333:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3343:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3350:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3351:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3356:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3365:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3374:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3387:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3397:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3404:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3405:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3410:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3419:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3428:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3441:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3451:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3458:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3459:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3464:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3473:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3482:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3495:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3505:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3512:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3513:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3518:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3527:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3536:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3549:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3559:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3566:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3567:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3572:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3581:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3590:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3603:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/TFileBrokerService.cpp:3613:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
[ 20%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/json_converter.cpp.o
/root/starrocks/gensrc/build/gen_cpp/QueryPlanExtra_constants.cpp:13:26: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
QueryPlanExtraConstants::QueryPlanExtraConstants() {
                         ^                         ~
                                                   = default;
[ 20%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/HeartbeatService_constants.cpp.o
[ 20%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Compression.cc.o
[ 20%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Exceptions.cc.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:31:20: warning: use '= default' to define a trivial copy constructor [modernize-use-equals-default]
NotImplementedYet::NotImplementedYet(const NotImplementedYet& error) : logic_error(error) {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:35:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
NotImplementedYet::~NotImplementedYet() ORC_NOEXCEPT {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:47:13: warning: use '= default' to define a trivial copy constructor [modernize-use-equals-default]
ParseError::ParseError(const ParseError& error) : runtime_error(error) {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:51:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ParseError::~ParseError() ORC_NOEXCEPT {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:63:18: warning: use '= default' to define a trivial copy constructor [modernize-use-equals-default]
InvalidArgument::InvalidArgument(const InvalidArgument& error) : runtime_error(error) {
                 ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Exceptions.cc:67:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
InvalidArgument::~InvalidArgument() ORC_NOEXCEPT {
                 ^
[ 20%] Building CXX object src/udf/CMakeFiles/Udf.dir/java/utils.cpp.o
[ 20%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_memory.cpp.o
[ 20%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_s3.cpp.o
[ 20%] Building CXX object src/storage/CMakeFiles/Storage.dir/delta_column_group.cpp.o
[ 20%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Compression.cc:949:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~SnappyCompressionStream() override {
    ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Compression.cc:1077:16: warning: use std::make_unique instead [modernize-make-unique]
        return std::unique_ptr<BufferedOutputStream>(
               ^~~~~~~~~~~~~~~
               std::make_unique
[ 20%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Int128.cc.o
/root/starrocks/be/src/column/chunk_extra_data.cpp:78:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _columns.size(); ++i) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & _column : _columns)
/root/starrocks/be/src/column/chunk_extra_data.cpp:86:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _columns.size(); ++i) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & _column : _columns)
/root/starrocks/be/src/column/chunk_extra_data.cpp:94:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _columns.size(); ++i) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & _column : _columns)
[ 20%] Building CXX object src/storage/CMakeFiles/Storage.dir/key_coder.cpp.o
[ 20%] Building CXX object src/column/CMakeFiles/Column.dir/column_helper.cpp.o
/root/starrocks/be/src/http/web_page_handler.cpp:67:49: warning: prefer a lambda to std::bind [modernize-avoid-bind]
    TemplatePageHandlerCallback root_callback = std::bind<void>(std::mem_fn(&WebPageHandler::root_handler), this,
                                                ^
[ 21%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/LzoDecompressor.cc.o
[ 21%] Building CXX object src/column/CMakeFiles/Column.dir/column_viewer.cpp.o
[ 21%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/sender_queue.cpp.o
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:12:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
HeartbeatService_heartbeat_args::~HeartbeatService_heartbeat_args() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:72:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
HeartbeatService_heartbeat_pargs::~HeartbeatService_heartbeat_pargs() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:91:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
HeartbeatService_heartbeat_result::~HeartbeatService_heartbeat_result() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:153:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
HeartbeatService_heartbeat_presult::~HeartbeatService_heartbeat_presult() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:277:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:278:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:283:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:292:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:301:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:314:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService.cpp:324:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
[ 21%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp.o
[ 21%] Building CXX object src/exec/CMakeFiles/Exec.dir/exchange_node.cpp.o
[ 21%] Building CXX object src/udf/CMakeFiles/Udf.dir/java/java_udf.cpp.o
[ 21%] Building CXX object src/service/service_be/CMakeFiles/ServiceBE.dir/lake_service.cpp.o
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:28:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWorkGroupType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTWorkGroupTypeValues, _kTWorkGroupTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:28:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWorkGroupType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTWorkGroupTypeValues, _kTWorkGroupTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:31:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWorkGroupType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:41:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWorkGroupType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:43:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:59:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWorkGroupOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTWorkGroupOpTypeValues, _kTWorkGroupOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:59:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWorkGroupOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTWorkGroupOpTypeValues, _kTWorkGroupOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:62:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWorkGroupOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:72:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWorkGroupOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:74:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:81:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TWorkGroup::~TWorkGroup() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_types.cpp:419:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TWorkGroupOp::~TWorkGroupOp() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/LzoDecompressor.cc:70:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MalformedInputException::~MalformedInputException() noexcept {
                         ^
[ 21%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/ResourceUsage_types.cpp.o
[ 21%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/MemoryPool.cc.o
[ 21%] Building CXX object src/common/CMakeFiles/Common.dir/statusor.cpp.o
/root/starrocks/be/src/http/utils.cpp:108:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("text/html; charset=utf-8");
               ^
/root/starrocks/be/src/http/utils.cpp:110:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("application/javascript; charset=utf-8");
               ^
/root/starrocks/be/src/http/utils.cpp:112:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("text/css; charset=utf-8");
               ^
/root/starrocks/be/src/http/utils.cpp:114:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("text/plain; charset=utf-8");
               ^
/root/starrocks/be/src/http/utils.cpp:116:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("image/png");
               ^
/root/starrocks/be/src/http/utils.cpp:118:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string("image/x-icon");
               ^
[ 21%] Building CXX object src/service/service_be/CMakeFiles/ServiceBE.dir/starrocks_be.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/MemoryPool.cc:45:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MemoryPool::~MemoryPool() {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/MemoryPool.cc:65:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MemoryPoolImpl::~MemoryPoolImpl() {
                ^
[ 21%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Murmur3.cc.o
/root/starrocks/gensrc/build/gen_cpp/ResourceUsage_types.cpp:17:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResourceUsage::~TResourceUsage() noexcept {
                ^                          ~
                                           = default;
[ 21%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/WorkGroup_constants.cpp.o
[ 21%] Building CXX object src/common/CMakeFiles/Common.dir/logconfig.cpp.o
[ 21%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/OrcFile.cc.o
[ 21%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/numeric_converter.cpp.o
[ 21%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/nullable_converter.cpp.o
[ 21%] Building CXX object src/exec/CMakeFiles/Exec.dir/scan_node.cpp.o
[ 21%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/HeartbeatService_types.cpp.o
/root/starrocks/gensrc/build/gen_cpp/WorkGroup_constants.cpp:13:21: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
WorkGroupConstants::WorkGroupConstants() {
                    ^                    ~
                                         = default;
[ 21%] Building CXX object src/connector/CMakeFiles/Connector.dir/lake_connector.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/OrcFile.cc:109:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
OutputStream::~OutputStream(){
              ^
[ 21%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Reader.cc.o
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService_types.cpp:17:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMasterInfo::~TMasterInfo() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService_types.cpp:290:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBackendInfo::~TBackendInfo() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/HeartbeatService_types.cpp:540:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THeartbeatResult::~THeartbeatResult() noexcept {
                  ^                            ~
                                               = default;
[ 22%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/InternalService_constants.cpp.o
[ 22%] Building CXX object src/storage/rowset/CMakeFiles/Rowset.dir/rowset_meta_manager.cpp.o
[ 22%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp.o
[ 22%] Building CXX object src/storage/CMakeFiles/Storage.dir/memtable_flush_executor.cpp.o
[ 22%] Building CXX object src/http/CMakeFiles/Webserver.dir/ev_http_server.cpp.o
[ 22%] Building CXX object src/formats/CMakeFiles/Formats.dir/csv/default_value_converter.cpp.o
/root/starrocks/gensrc/build/gen_cpp/InternalService_constants.cpp:13:27: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
InternalServiceConstants::InternalServiceConstants() {
                          ^                          ~
                                                     = default;
[ 22%] Building CXX object src/formats/CMakeFiles/Formats.dir/json/nullable_column.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:219:5: warning: use auto when declaring iterators [modernize-use-auto]
    std::map<std::string, uint64_t>::const_iterator ite = nameIdMap.find(fieldName);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:297:22: warning: use std::make_unique instead [modernize-make-unique]
        sargsApplier.reset(new SargsApplier(*contents->schema, sargs.get(), footer->rowindexstride(),
                    ~^~~~~ ~~~~~~~~~~~~~~~~~
                     = std::make_unique<SargsApplier>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:792:28: warning: use std::make_unique instead [modernize-make-unique]
        contents->metadata.reset(new proto::Metadata());
                          ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~
                           = std::make_unique<proto::Metadata>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1326:53: warning: use std::make_unique instead [modernize-make-unique]
    std::unique_ptr<proto::PostScript> postscript = std::unique_ptr<proto::PostScript>(new proto::PostScript());
                                                    ^~~~~~~~~~~~~~~                    ~~~~~~~~~~~~~~~~~~~~~~~
                                                    std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1392:45: warning: use std::make_unique instead [modernize-make-unique]
    std::unique_ptr<proto::Footer> footer = std::unique_ptr<proto::Footer>(new proto::Footer());
                                            ^~~~~~~~~~~~~~~                ~~~~~~~~~~~~~~~~~~~
                                            std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1415:30: warning: use std::make_unique instead [modernize-make-unique]
        contents->postscript.reset(new proto::PostScript(tail.postscript()));
                            ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~                 ~
                             = std::make_unique<proto::PostScript>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1416:26: warning: use std::make_unique instead [modernize-make-unique]
        contents->footer.reset(new proto::Footer(tail.footer()));
                        ~^~~~~ ~~~~~~~~~~~~~~~~~~             ~
                         = std::make_unique<proto::Footer>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1516:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RowReader::~RowReader() {
           ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1524:9: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Reader::~Reader() {
        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Reader.cc:1528:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
InputStream::~InputStream(){
             ^
[ 22%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/RLEv1.cc.o
[ 22%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/hdfs/fs_hdfs.cpp.o
[ 22%] Building CXX object src/formats/CMakeFiles/Formats.dir/json/numeric_column.cpp.o
[ 22%] Building CXX object src/common/CMakeFiles/Common.dir/configbase.cpp.o
[ 22%] Building CXX object src/formats/CMakeFiles/Formats.dir/json/binary_column.cpp.o
[ 22%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/RLEV2Util.cc.o
[ 22%] Building CXX object src/tools/CMakeFiles/Tools.dir/meta_tool.cpp.o
[ 23%] Building CXX object src/column/CMakeFiles/Column.dir/const_column.cpp.o
[ 23%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/data_stream_sender.cpp.o
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:22:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTFunctionVersionValues, _kTFunctionVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:22:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTFunctionVersionValues, _kTFunctionVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:25:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:35:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:37:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:53:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TQueryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTQueryTypeValues, _kTQueryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:53:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TQueryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTQueryTypeValues, _kTQueryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:56:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TQueryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:66:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TQueryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:68:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:90:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadJobType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTLoadJobTypeValues, _kTLoadJobTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:90:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadJobType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTLoadJobTypeValues, _kTLoadJobTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:93:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadJobType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:103:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadJobType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:105:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:121:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TErrorHubType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTErrorHubTypeValues, _kTErrorHubTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:121:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TErrorHubType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTErrorHubTypeValues, _kTErrorHubTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:124:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TErrorHubType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:134:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TErrorHubType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:136:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:152:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPipelineProfileLevel_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTPipelineProfileLevelValues, _kTPipelineProfileLevelNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:152:212: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPipelineProfileLevel_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTPipelineProfileLevelValues, _kTPipelineProfileLevelNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                   ^~~~
                                                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:155:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPipelineProfileLevel_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:165:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPipelineProfileLevel_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:167:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:181:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSpillMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTSpillModeValues, _kTSpillModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:181:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSpillMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTSpillModeValues, _kTSpillModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:184:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSpillMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:194:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSpillMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:196:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:210:224: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletInternalParallelMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTTabletInternalParallelModeValues, _kTTabletInternalParallelModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                               ^~~~
                                                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:210:230: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTabletInternalParallelMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTTabletInternalParallelModeValues, _kTTabletInternalParallelModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                     ^~~~
                                                                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:213:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletInternalParallelMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:223:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTabletInternalParallelMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:225:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:237:209: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _InternalServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kInternalServiceVersionValues, _kInternalServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                ^~~~
                                                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:237:215: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _InternalServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kInternalServiceVersionValues, _kInternalServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                      ^~~~
                                                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:240:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _InternalServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:250:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _InternalServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:252:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:259:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMysqlErrorHubInfo::~TMysqlErrorHubInfo() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:466:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerErrorHubInfo::~TBrokerErrorHubInfo() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:628:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadErrorHubInfo::~TLoadErrorHubInfo() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:769:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TQueryOptions::~TQueryOptions() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:1735:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanRangeParams::~TScanRangeParams() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:1852:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlanFragmentExecParams::~TPlanFragmentExecParams() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:2482:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TQueryGlobals::~TQueryGlobals() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:2643:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAdaptiveDopParam::~TAdaptiveDopParam() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:2759:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExecPlanFragmentParams::~TExecPlanFragmentParams() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:3364:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExecPlanFragmentResult::~TExecPlanFragmentResult() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:3458:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExecBatchPlanFragmentsParams::~TExecBatchPlanFragmentsParams() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:3594:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCancelPlanFragmentParams::~TCancelPlanFragmentParams() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:3713:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCancelPlanFragmentResult::~TCancelPlanFragmentResult() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:3807:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTransmitDataParams::~TTransmitDataParams() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:4058:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTransmitDataResult::~TTransmitDataResult() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:4218:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFetchDataParams::~TFetchDataParams() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:4335:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFetchDataResult::~TFetchDataResult() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:4498:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCondition::~TCondition() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/InternalService_types.cpp:4681:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExportStatusResult::~TExportStatusResult() noexcept {
                     ^                               ~
                                                     = default;
[ 23%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp.o
[ 23%] Building CXX object src/storage/rowset/CMakeFiles/Rowset.dir/rowset_writer.cpp.o
[ 23%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/RleDecoderV2.cc.o
[ 23%] Building CXX object src/common/CMakeFiles/Common.dir/s3_uri.cpp.o
[ 23%] Building CXX object src/util/CMakeFiles/Util.dir/bthreads/executor.cpp.o
[ 23%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_minmaxany.cpp.o
[ 23%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/RleEncoderV2.cc.o
[ 23%] Building CXX object src/common/CMakeFiles/Common.dir/tracer.cpp.o
[ 23%] Building CXX object src/util/CMakeFiles/Util.dir/arrow/row_batch.cpp.o
[ 23%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/RLE.cc.o
[ 24%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Statistics.cc.o
[ 24%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/hdfs/hdfs_fs_cache.cpp.o
[ 24%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:12:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDbNames_args::~FrontendService_getDbNames_args() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:72:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDbNames_pargs::~FrontendService_getDbNames_pargs() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:91:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDbNames_result::~FrontendService_getDbNames_result() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:153:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDbNames_presult::~FrontendService_getDbNames_presult() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:199:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableNames_args::~FrontendService_getTableNames_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:259:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableNames_pargs::~FrontendService_getTableNames_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:278:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableNames_result::~FrontendService_getTableNames_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:340:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableNames_presult::~FrontendService_getTableNames_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:386:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesInfo_args::~FrontendService_getTablesInfo_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:446:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesInfo_pargs::~FrontendService_getTablesInfo_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:465:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesInfo_result::~FrontendService_getTablesInfo_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:527:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesInfo_presult::~FrontendService_getTablesInfo_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:573:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesConfig_args::~FrontendService_getTablesConfig_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:633:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesConfig_pargs::~FrontendService_getTablesConfig_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:652:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesConfig_result::~FrontendService_getTablesConfig_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:714:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablesConfig_presult::~FrontendService_getTablesConfig_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:760:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getUserPrivs_args::~FrontendService_getUserPrivs_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:820:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getUserPrivs_pargs::~FrontendService_getUserPrivs_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:839:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getUserPrivs_result::~FrontendService_getUserPrivs_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:901:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getUserPrivs_presult::~FrontendService_getUserPrivs_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:947:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDBPrivs_args::~FrontendService_getDBPrivs_args() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1007:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDBPrivs_pargs::~FrontendService_getDBPrivs_pargs() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1026:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDBPrivs_result::~FrontendService_getDBPrivs_result() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1088:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getDBPrivs_presult::~FrontendService_getDBPrivs_presult() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1134:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablePrivs_args::~FrontendService_getTablePrivs_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1194:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablePrivs_pargs::~FrontendService_getTablePrivs_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1213:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablePrivs_result::~FrontendService_getTablePrivs_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1275:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTablePrivs_presult::~FrontendService_getTablePrivs_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1321:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getLoads_args::~FrontendService_getLoads_args() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1381:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getLoads_pargs::~FrontendService_getLoads_pargs() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1400:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getLoads_result::~FrontendService_getLoads_result() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1462:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getLoads_presult::~FrontendService_getLoads_presult() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1508:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_describeTable_args::~FrontendService_describeTable_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1568:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_describeTable_pargs::~FrontendService_describeTable_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1587:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_describeTable_result::~FrontendService_describeTable_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1649:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_describeTable_presult::~FrontendService_describeTable_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1695:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_showVariables_args::~FrontendService_showVariables_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1755:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_showVariables_pargs::~FrontendService_showVariables_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1774:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_showVariables_result::~FrontendService_showVariables_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1836:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_showVariables_presult::~FrontendService_showVariables_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1882:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_reportExecStatus_args::~FrontendService_reportExecStatus_args() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1942:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_reportExecStatus_pargs::~FrontendService_reportExecStatus_pargs() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:1961:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_reportExecStatus_result::~FrontendService_reportExecStatus_result() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2023:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_reportExecStatus_presult::~FrontendService_reportExecStatus_presult() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2069:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_batchReportExecStatus_args::~FrontendService_batchReportExecStatus_args() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2129:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_batchReportExecStatus_pargs::~FrontendService_batchReportExecStatus_pargs() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2148:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_batchReportExecStatus_result::~FrontendService_batchReportExecStatus_result() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2210:48: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_batchReportExecStatus_presult::~FrontendService_batchReportExecStatus_presult() noexcept {
                                               ^                                                         ~
                                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2256:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_finishTask_args::~FrontendService_finishTask_args() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2316:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_finishTask_pargs::~FrontendService_finishTask_pargs() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2335:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_finishTask_result::~FrontendService_finishTask_result() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2397:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_finishTask_presult::~FrontendService_finishTask_presult() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2443:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_report_args::~FrontendService_report_args() noexcept {
                             ^                                       ~
                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2503:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_report_pargs::~FrontendService_report_pargs() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2522:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_report_result::~FrontendService_report_result() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2584:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_report_presult::~FrontendService_report_presult() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2630:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_fetchResource_args::~FrontendService_fetchResource_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2673:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_fetchResource_pargs::~FrontendService_fetchResource_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2688:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_fetchResource_result::~FrontendService_fetchResource_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2750:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_fetchResource_presult::~FrontendService_fetchResource_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2796:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_isMethodSupported_args::~FrontendService_isMethodSupported_args() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2856:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_isMethodSupported_pargs::~FrontendService_isMethodSupported_pargs() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2875:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_isMethodSupported_result::~FrontendService_isMethodSupported_result() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2937:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_isMethodSupported_presult::~FrontendService_isMethodSupported_presult() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:2983:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_forward_args::~FrontendService_forward_args() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3043:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_forward_pargs::~FrontendService_forward_pargs() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3062:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_forward_result::~FrontendService_forward_result() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3124:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_forward_presult::~FrontendService_forward_presult() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3170:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listTableStatus_args::~FrontendService_listTableStatus_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3230:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listTableStatus_pargs::~FrontendService_listTableStatus_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3249:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listTableStatus_result::~FrontendService_listTableStatus_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3311:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listTableStatus_presult::~FrontendService_listTableStatus_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3357:50: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listMaterializedViewStatus_args::~FrontendService_listMaterializedViewStatus_args() noexcept {
                                                 ^                                                           ~
                                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3417:51: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listMaterializedViewStatus_pargs::~FrontendService_listMaterializedViewStatus_pargs() noexcept {
                                                  ^                                                            ~
                                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3436:52: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listMaterializedViewStatus_result::~FrontendService_listMaterializedViewStatus_result() noexcept {
                                                   ^                                                             ~
                                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3498:53: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_listMaterializedViewStatus_presult::~FrontendService_listMaterializedViewStatus_presult() noexcept {
                                                    ^                                                              ~
                                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3544:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTasks_args::~FrontendService_getTasks_args() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3604:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTasks_pargs::~FrontendService_getTasks_pargs() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3623:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTasks_result::~FrontendService_getTasks_result() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3685:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTasks_presult::~FrontendService_getTasks_presult() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3731:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTaskRuns_args::~FrontendService_getTaskRuns_args() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3791:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTaskRuns_pargs::~FrontendService_getTaskRuns_pargs() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3810:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTaskRuns_result::~FrontendService_getTaskRuns_result() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3872:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTaskRuns_presult::~FrontendService_getTaskRuns_presult() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3918:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateExportTaskStatus_args::~FrontendService_updateExportTaskStatus_args() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3978:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateExportTaskStatus_pargs::~FrontendService_updateExportTaskStatus_pargs() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:3997:48: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateExportTaskStatus_result::~FrontendService_updateExportTaskStatus_result() noexcept {
                                               ^                                                         ~
                                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4059:49: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateExportTaskStatus_presult::~FrontendService_updateExportTaskStatus_presult() noexcept {
                                                ^                                                          ~
                                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4105:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnBegin_args::~FrontendService_loadTxnBegin_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4165:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnBegin_pargs::~FrontendService_loadTxnBegin_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4184:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnBegin_result::~FrontendService_loadTxnBegin_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4246:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnBegin_presult::~FrontendService_loadTxnBegin_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4292:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnCommit_args::~FrontendService_loadTxnCommit_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4352:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnCommit_pargs::~FrontendService_loadTxnCommit_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4371:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnCommit_result::~FrontendService_loadTxnCommit_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4433:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnCommit_presult::~FrontendService_loadTxnCommit_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4479:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnRollback_args::~FrontendService_loadTxnRollback_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4539:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnRollback_pargs::~FrontendService_loadTxnRollback_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4558:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnRollback_result::~FrontendService_loadTxnRollback_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4620:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnRollback_presult::~FrontendService_loadTxnRollback_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4666:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnPrepare_args::~FrontendService_loadTxnPrepare_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4726:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnPrepare_pargs::~FrontendService_loadTxnPrepare_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4745:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnPrepare_result::~FrontendService_loadTxnPrepare_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4807:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_loadTxnPrepare_presult::~FrontendService_loadTxnPrepare_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4853:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_streamLoadPut_args::~FrontendService_streamLoadPut_args() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4913:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_streamLoadPut_pargs::~FrontendService_streamLoadPut_pargs() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4932:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_streamLoadPut_result::~FrontendService_streamLoadPut_result() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:4994:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_streamLoadPut_presult::~FrontendService_streamLoadPut_presult() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5040:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_snapshotLoaderReport_args::~FrontendService_snapshotLoaderReport_args() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5100:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_snapshotLoaderReport_pargs::~FrontendService_snapshotLoaderReport_pargs() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5119:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_snapshotLoaderReport_result::~FrontendService_snapshotLoaderReport_result() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5181:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_snapshotLoaderReport_presult::~FrontendService_snapshotLoaderReport_presult() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5227:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_refreshTable_args::~FrontendService_refreshTable_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5287:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_refreshTable_pargs::~FrontendService_refreshTable_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5306:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_refreshTable_result::~FrontendService_refreshTable_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5368:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_refreshTable_presult::~FrontendService_refreshTable_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5414:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableMeta_args::~FrontendService_getTableMeta_args() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5474:37: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableMeta_pargs::~FrontendService_getTableMeta_pargs() noexcept {
                                    ^                                              ~
                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5493:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableMeta_result::~FrontendService_getTableMeta_result() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5555:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTableMeta_presult::~FrontendService_getTableMeta_presult() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5601:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_beginRemoteTxn_args::~FrontendService_beginRemoteTxn_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5661:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_beginRemoteTxn_pargs::~FrontendService_beginRemoteTxn_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5680:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_beginRemoteTxn_result::~FrontendService_beginRemoteTxn_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5742:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_beginRemoteTxn_presult::~FrontendService_beginRemoteTxn_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5788:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_commitRemoteTxn_args::~FrontendService_commitRemoteTxn_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5848:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_commitRemoteTxn_pargs::~FrontendService_commitRemoteTxn_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5867:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_commitRemoteTxn_result::~FrontendService_commitRemoteTxn_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5929:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_commitRemoteTxn_presult::~FrontendService_commitRemoteTxn_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:5975:38: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_abortRemoteTxn_args::~FrontendService_abortRemoteTxn_args() noexcept {
                                     ^                                               ~
                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6035:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_abortRemoteTxn_pargs::~FrontendService_abortRemoteTxn_pargs() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6054:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_abortRemoteTxn_result::~FrontendService_abortRemoteTxn_result() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6116:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_abortRemoteTxn_presult::~FrontendService_abortRemoteTxn_presult() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6162:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_setConfig_args::~FrontendService_setConfig_args() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6222:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_setConfig_pargs::~FrontendService_setConfig_pargs() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6241:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_setConfig_result::~FrontendService_setConfig_result() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6303:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_setConfig_presult::~FrontendService_setConfig_presult() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6349:39: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_createPartition_args::~FrontendService_createPartition_args() noexcept {
                                      ^                                                ~
                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6409:40: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_createPartition_pargs::~FrontendService_createPartition_pargs() noexcept {
                                       ^                                                 ~
                                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6428:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_createPartition_result::~FrontendService_createPartition_result() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6490:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_createPartition_presult::~FrontendService_createPartition_presult() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6536:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateResourceUsage_args::~FrontendService_updateResourceUsage_args() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6596:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateResourceUsage_pargs::~FrontendService_updateResourceUsage_pargs() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6615:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateResourceUsage_result::~FrontendService_updateResourceUsage_result() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6677:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_updateResourceUsage_presult::~FrontendService_updateResourceUsage_presult() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6723:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_mvReport_args::~FrontendService_mvReport_args() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6783:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_mvReport_pargs::~FrontendService_mvReport_pargs() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6802:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_mvReport_result::~FrontendService_mvReport_result() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6864:35: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_mvReport_presult::~FrontendService_mvReport_presult() noexcept {
                                  ^                                            ~
                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6910:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_allocAutoIncrementId_args::~FrontendService_allocAutoIncrementId_args() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6970:45: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_allocAutoIncrementId_pargs::~FrontendService_allocAutoIncrementId_pargs() noexcept {
                                            ^                                                      ~
                                                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:6989:46: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_allocAutoIncrementId_result::~FrontendService_allocAutoIncrementId_result() noexcept {
                                             ^                                                       ~
                                                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:7051:47: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_allocAutoIncrementId_presult::~FrontendService_allocAutoIncrementId_presult() noexcept {
                                              ^                                                        ~
                                                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:7097:41: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTabletSchedule_args::~FrontendService_getTabletSchedule_args() noexcept {
                                        ^                                                  ~
                                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:7157:42: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTabletSchedule_pargs::~FrontendService_getTabletSchedule_pargs() noexcept {
                                         ^                                                   ~
                                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:7176:43: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTabletSchedule_result::~FrontendService_getTabletSchedule_result() noexcept {
                                          ^                                                    ~
                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:7238:44: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FrontendService_getTabletSchedule_presult::~FrontendService_getTabletSchedule_presult() noexcept {
                                           ^                                                     ~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9565:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9566:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9571:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9580:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9589:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9602:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9612:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9619:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9620:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9625:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9634:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9643:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9656:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9666:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9673:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9674:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9679:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9688:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9697:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9710:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9720:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9727:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9728:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9733:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9742:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9751:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9764:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9774:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9781:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9782:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9787:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9796:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9805:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9818:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9828:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9835:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9836:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9841:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9850:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9859:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9872:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9882:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9889:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9890:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9895:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9904:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9913:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9926:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9936:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9943:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9944:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9949:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9958:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9967:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9980:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9990:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9997:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:9998:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10003:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10012:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10021:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10034:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10044:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10051:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10052:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10057:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10066:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10075:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10088:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10098:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10105:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10106:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10111:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10120:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10129:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10142:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10152:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10159:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10160:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10165:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10174:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10183:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10196:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10206:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10213:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10214:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10219:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10228:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10237:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10250:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10260:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10267:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10268:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10273:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10282:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10291:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10304:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10314:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10321:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10322:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10327:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10336:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10345:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10358:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10368:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10375:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10376:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10381:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10390:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10399:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10412:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10422:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10429:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10430:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10435:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10444:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10453:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10466:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10476:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10483:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10484:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10489:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10498:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10507:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10520:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10530:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10537:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10538:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10543:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10552:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10561:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10574:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10584:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10591:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10592:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10597:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10606:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10615:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10628:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10638:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10645:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10646:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10651:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10660:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10669:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10682:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10692:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10699:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10700:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10705:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10714:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10723:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10736:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10746:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10753:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10754:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10759:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10768:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10777:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10790:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10800:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10807:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10808:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10813:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10822:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10831:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10844:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10854:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10861:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10862:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10867:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10876:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10885:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10898:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10908:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10915:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10916:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10921:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10930:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10939:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10952:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10962:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10969:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10970:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10975:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10984:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:10993:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11006:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11016:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11023:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11024:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11029:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11038:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11047:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11060:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11070:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11077:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11078:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11083:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11092:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11101:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11114:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11124:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11131:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11132:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11137:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11146:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11155:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11168:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11178:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11185:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11186:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11191:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11200:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11209:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11222:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11232:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11239:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11240:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11245:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11254:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11263:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11276:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11286:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11293:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11294:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11299:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11308:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11317:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11330:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11340:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11347:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11348:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11353:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11362:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11371:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11384:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11394:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11401:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11402:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11407:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11416:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11425:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11438:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11448:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11455:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11456:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11461:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11470:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11479:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11492:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11502:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11509:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11510:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11515:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11524:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11533:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11546:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11556:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11563:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11564:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11569:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11578:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11587:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11600:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11610:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11617:15: warning: use nullptr [modernize-use-nullptr]
  void* ctx = NULL;
              ^~~~
              nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11618:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11623:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11632:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11641:38: warning: use nullptr [modernize-use-nullptr]
    if (this->eventHandler_.get() != NULL) {
                                     ^~~~
                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11654:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService.cpp:11664:36: warning: use nullptr [modernize-use-nullptr]
  if (this->eventHandler_.get() != NULL) {
                                   ^~~~
                                   nullptr
[ 24%] Building CXX object src/http/CMakeFiles/Webserver.dir/http_client.cpp.o
[ 24%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/FrontendService_constants.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/RLE.cc:25:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RleEncoder::~RleEncoder() {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/RLE.cc:29:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RleDecoder::~RleDecoder() {
            ^
[ 25%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/health_action.cpp.o
[ 25%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/orc_chunk_reader.cpp.o
[ 25%] Building CXX object src/storage/CMakeFiles/Storage.dir/segment_flush_executor.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:70:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Statistics::~Statistics() {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:74:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StripeStatistics::~StripeStatistics() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:78:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StripeStatisticsImpl::~StripeStatisticsImpl() {
                      ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:85:17: warning: use std::make_unique instead [modernize-make-unique]
    columnStats.reset(new StatisticsImpl(stripeStats, statContext));
               ~^~~~~ ~~~~~~~~~~~~~~~~~~~                        ~
                = std::make_unique<StatisticsImpl>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:95:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnStatistics::~ColumnStatistics() {
                  ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:99:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BinaryColumnStatistics::~BinaryColumnStatistics() {
                        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:103:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BooleanColumnStatistics::~BooleanColumnStatistics() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:107:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DateColumnStatistics::~DateColumnStatistics() {
                      ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:111:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DecimalColumnStatistics::~DecimalColumnStatistics() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:115:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DoubleColumnStatistics::~DoubleColumnStatistics() {
                        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:119:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
IntegerColumnStatistics::~IntegerColumnStatistics() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:123:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringColumnStatistics::~StringColumnStatistics() {
                        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:127:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimestampColumnStatistics::~TimestampColumnStatistics() {
                           ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:131:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MutableColumnStatistics::~MutableColumnStatistics() {
                         ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:135:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnStatisticsImpl::~ColumnStatisticsImpl() {
                      ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:139:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BinaryColumnStatisticsImpl::~BinaryColumnStatisticsImpl() {
                            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:143:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BooleanColumnStatisticsImpl::~BooleanColumnStatisticsImpl() {
                             ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:147:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DateColumnStatisticsImpl::~DateColumnStatisticsImpl() {
                          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:151:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DecimalColumnStatisticsImpl::~DecimalColumnStatisticsImpl() {
                             ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:155:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DoubleColumnStatisticsImpl::~DoubleColumnStatisticsImpl() {
                            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:159:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
IntegerColumnStatisticsImpl::~IntegerColumnStatisticsImpl() {
                             ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:163:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringColumnStatisticsImpl::~StringColumnStatisticsImpl() {
                            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Statistics.cc:167:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimestampColumnStatisticsImpl::~TimestampColumnStatisticsImpl() {
                               ^
[ 25%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/StripeStream.cc.o
[ 26%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/orc_input_stream.cpp.o
[ 26%] Building CXX object src/column/CMakeFiles/Column.dir/datum.cpp.o
/root/starrocks/gensrc/build/gen_cpp/FrontendService_constants.cpp:13:27: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
FrontendServiceConstants::FrontendServiceConstants() {
                          ^                          ~
                                                     = default;
[ 26%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp.o
[ 27%] Linking CXX static library ../../../../output/tmp/RELEASE/libServiceCN.a
[ 27%] Built target ServiceCN
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/datum_convert.cpp.o
[ 27%] Building CXX object src/common/CMakeFiles/Common.dir/minidump.cpp.o
/root/starrocks/be/src/service/service_be/lake_service.cpp:41:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
LakeServiceImpl::~LakeServiceImpl() {}
                 ^                  ~~
                                    = default;
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/datum_tuple.cpp.o
[ 27%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/checksum_action.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/StripeStream.cc:63:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StripeStreamsImpl::~StripeStreamsImpl() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/StripeStream.cc:67:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StreamInformation::~StreamInformation() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/StripeStream.cc:71:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StripeInformation::~StripeInformation() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/StripeStream.cc:75:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StreamInformationImpl::~StreamInformationImpl() {
                       ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/StripeStream.cc:170:22: warning: use std::make_unique instead [modernize-make-unique]
        stripeFooter.reset(new proto::StripeFooter());
                    ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~
                     = std::make_unique<proto::StripeFooter>
[ 27%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Timezone.cc.o
[ 27%] Linking CXX static library ../../../output/tmp/RELEASE/libCommon.a
[ 27%] Built target Common
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/field.cpp.o
[ 27%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Data_constants.cpp.o
[ 27%] Building CXX object src/agent/CMakeFiles/Agent.dir/publish_version.cpp.o
/root/starrocks/be/src/fs/hdfs/hdfs_fs_cache.cpp:41:96: warning: the parameter 'hdfs_client' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
static Status create_hdfs_fs_handle(const std::string& namenode, std::shared_ptr<HdfsFsClient> hdfs_client,
                                                                                               ^
                                                                 const                        &
[ 27%] Building CXX object src/agent/CMakeFiles/Agent.dir/master_info.cpp.o
[ 27%] Building CXX object src/util/CMakeFiles/Util.dir/arrow/starrocks_column_to_arrow.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:254:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FutureRule::~FutureRule() {
            ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:258:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FutureRuleImpl::~FutureRuleImpl() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:505:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
VersionParser::~VersionParser() {
               ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:536:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Version1Parser::~Version1Parser() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:559:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(reinterpret_cast<const char*>(ptr) + offset + 1, length - 2);
               ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:563:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Version2Parser::~Version2Parser() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:627:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Timezone::~Timezone() {
          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:708:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimezoneImpl::~TimezoneImpl() {
              ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:873:16: warning: use '= default' to define a trivial copy constructor [modernize-use-equals-default]
TimezoneError::TimezoneError(const TimezoneError& other) : std::runtime_error(other) {
               ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Timezone.cc:877:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimezoneError::~TimezoneError() ORC_NOEXCEPT {
               ^
[ 27%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/TypeImpl.cc.o
/root/starrocks/gensrc/build/gen_cpp/Data_constants.cpp:13:16: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
DataConstants::DataConstants() {
               ^               ~
                               = default;
[ 27%] Building CXX object src/agent/CMakeFiles/Agent.dir/finish_task.cpp.o
[ 27%] Building CXX object src/service/CMakeFiles/Service.dir/staros_worker.cpp.o
[ 27%] Building CXX object src/service/CMakeFiles/Service.dir/mem_hook.cpp.o
[ 27%] Building CXX object src/udf/CMakeFiles/Udf.dir/java/java_data_converter.cpp.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/orc_mapping.cpp.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/orc_min_max_decoder.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/TypeImpl.cc:29:7: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Type::~Type() {
      ^
[ 27%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Vector.cc.o
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/fixed_length_column_base.cpp.o
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/fixed_length_column.cpp.o
[ 27%] Building CXX object src/connector/CMakeFiles/Connector.dir/mysql_connector.cpp.o
[ 27%] Building CXX object src/fs/CMakeFiles/FileSystem.dir/fs_starlet.cpp.o
[ 27%] Building CXX object src/connector/CMakeFiles/Connector.dir/file_connector.cpp.o
[ 27%] Linking CXX static library ../../../output/tmp/RELEASE/libFileSystem.a
[ 27%] Built target FileSystem
[ 27%] Building CXX object src/connector/CMakeFiles/Connector.dir/binlog_connector.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:52:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnVectorBatch::~ColumnVectorBatch() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:101:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
LongVectorBatch::~LongVectorBatch() {
                 ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:138:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DoubleVectorBatch::~DoubleVectorBatch() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:177:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
EncodedStringVectorBatch::~EncodedStringVectorBatch() {
                          ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:204:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringVectorBatch::~StringVectorBatch() {
                   ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:318:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ListVectorBatch::~ListVectorBatch() {
                 ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:380:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MapVectorBatch::~MapVectorBatch() {
                ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:490:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Decimal64VectorBatch::~Decimal64VectorBatch() {
                      ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:527:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Decimal128VectorBatch::~Decimal128VectorBatch() {
                       ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Vector.cc:589:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimestampVectorBatch::~TimestampVectorBatch() {
                      ^
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/nullable_column.cpp.o
[ 27%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/bit_packing.cc.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/fill_function.cpp.o
[ 27%] Linking CXX static library ../../../output/tmp/RELEASE/libTools.a
[ 27%] Built target Tools
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/orc/utils.cpp.o
[ 27%] Building CXX object src/formats/orc/apache-orc/c++/src/CMakeFiles/orc.dir/Writer.cc.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/column_chunk_reader.cpp.o
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:28:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTFileFormatValues, _kTFileFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:28:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTFileFormatValues, _kTFileFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:31:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:41:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:43:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:59:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSetType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTSetTypeValues, _kTSetTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:59:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSetType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTSetTypeValues, _kTSetTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:62:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSetType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:72:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSetType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:74:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:96:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDdlType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTDdlTypeValues, _kTDdlTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:96:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDdlType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTDdlTypeValues, _kTDdlTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:99:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDdlType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:109:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDdlType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:111:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:123:209: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _FrontendServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kFrontendServiceVersionValues, _kFrontendServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                ^~~~
                                                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:123:215: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _FrontendServiceVersion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kFrontendServiceVersionValues, _kFrontendServiceVersionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                      ^~~~
                                                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:126:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _FrontendServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:136:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _FrontendServiceVersion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:138:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:152:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIndexState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTIndexStateValues, _kTIndexStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:152:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIndexState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTIndexStateValues, _kTIndexStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:155:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIndexState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:165:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIndexState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:167:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:174:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSetSessionParams::~TSetSessionParams() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:266:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAuthenticateParams::~TAuthenticateParams() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:470:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnDesc::~TColumnDesc() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:766:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnDef::~TColumnDef() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:883:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDescribeTableParams::~TDescribeTableParams() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1088:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDescribeTableResult::~TDescribeTableResult() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1200:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TShowVariableRequest::~TShowVariableRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1317:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TShowVariableResult::~TShowVariableResult() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1478:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TVerboseVariableRecord::~TVerboseVariableRecord() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1638:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableRowFormat::~TTableRowFormat() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1776:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionKeyValue::~TPartitionKeyValue() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:1891:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSessionState::~TSessionState() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2029:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TClientRequest::~TClientRequest() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2167:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExplainParams::~TExplainParams() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2259:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSetVar::~TSetVar() noexcept {
         ^                   ~
                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2399:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSetParams::~TSetParams() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2511:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKillParams::~TKillParams() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2626:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCommonDdlParams::~TCommonDdlParams() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2694:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUseDbParams::~TUseDbParams() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2786:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResultSetMetadata::~TResultSetMetadata() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:2898:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TQueryExecRequest::~TQueryExecRequest() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:3235:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDdlExecRequest::~TDdlExecRequest() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:3442:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExplainResult::~TExplainResult() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:3554:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExecRequest::~TExecRequest() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:3807:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetDbsParams::~TGetDbsParams() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:3967:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetDbsResult::~TGetDbsResult() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:4079:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesParams::~TGetTablesParams() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:4307:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableStatus::~TTableStatus() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:4536:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TListTableStatusResult::~TListTableStatusResult() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:4648:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMaterializedViewStatus::~TMaterializedViewStatus() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:5248:36: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TListMaterializedViewStatusResult::~TListMaterializedViewStatusResult() noexcept {
                                   ^                                             ~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:5362:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTasksParams::~TGetTasksParams() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:5478:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTaskInfo::~TTaskInfo() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:5682:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTaskInfoResult::~TGetTaskInfoResult() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:5794:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTaskRunInfo::~TTaskRunInfo() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:6130:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTaskRunInfoResult::~TGetTaskRunInfoResult() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:6244:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetLoadsParams::~TGetLoadsParams() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:6404:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetLoadsResult::~TGetLoadsResult() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:6518:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadInfo::~TLoadInfo() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:7008:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesResult::~TGetTablesResult() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:7120:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBatchReportExecStatusResult::~TBatchReportExecStatusResult() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:7234:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TReportExecStatusResult::~TReportExecStatusResult() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:7328:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBatchReportExecStatusParams::~TBatchReportExecStatusParams() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:7440:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TReportExecStatusParams::~TReportExecStatusParams() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:8081:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFeResult::~TFeResult() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:8198:34: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUpdateMiniEtlTaskStatusRequest::~TUpdateMiniEtlTaskStatusRequest() noexcept {
                                 ^                                           ~
                                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:8338:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMasterOpRequest::~TMasterOpRequest() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:8875:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnDefinition::~TColumnDefinition() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9039:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TShowResultSetMetaData::~TShowResultSetMetaData() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9151:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TShowResultSet::~TShowResultSet() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9306:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMasterOpResult::~TMasterOpResult() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9510:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIsMethodSupportedRequest::~TIsMethodSupportedRequest() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9604:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMiniLoadBeginResult::~TMiniLoadBeginResult() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9721:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUpdateExportTaskStatusRequest::~TUpdateExportTaskStatusRequest() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:9861:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnBeginRequest::~TLoadTxnBeginRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:10180:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnBeginResult::~TLoadTxnBeginResult() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:10319:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamLoadPutRequest::~TStreamLoadPutRequest() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:11219:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamLoadPutResult::~TStreamLoadPutResult() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:11336:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKafkaRLTaskProgress::~TKafkaRLTaskProgress() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:11452:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPulsarRLTaskProgress::~TPulsarRLTaskProgress() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:11568:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRLTaskTxnCommitAttachment::~TRLTaskTxnCommitAttachment() noexcept {
                            ^                                      ~
                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:11909:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMiniLoadTxnCommitAttachment::~TMiniLoadTxnCommitAttachment() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:12049:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TManualLoadTxnCommitAttachment::~TManualLoadTxnCommitAttachment() noexcept {
                                ^                                          ~
                                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:12231:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTxnCommitAttachment::~TTxnCommitAttachment() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:12394:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnCommitRequest::~TLoadTxnCommitRequest() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:12798:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnCommitResult::~TLoadTxnCommitResult() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:12890:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnRollbackRequest::~TLoadTxnRollbackRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13229:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLoadTxnRollbackResult::~TLoadTxnRollbackResult() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13321:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSnapshotLoaderReportRequest::~TSnapshotLoaderReportRequest() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13508:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetUserPrivsParams::~TGetUserPrivsParams() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13602:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUserPrivDesc::~TUserPrivDesc() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13740:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetUserPrivsResult::~TGetUserPrivsResult() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13854:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetDBPrivsParams::~TGetDBPrivsParams() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:13948:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDBPrivDesc::~TDBPrivDesc() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14108:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetDBPrivsResult::~TGetDBPrivsResult() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14222:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablePrivsParams::~TGetTablePrivsParams() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14316:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTablePrivDesc::~TTablePrivDesc() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14498:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablePrivsResult::~TGetTablePrivsResult() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14612:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRefreshTableRequest::~TRefreshTableRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14792:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRefreshTableResponse::~TRefreshTableResponse() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:14884:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTableMetaRequest::~TGetTableMetaRequest() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:15022:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBackendMeta::~TBackendMeta() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:15248:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TReplicaMeta::~TReplicaMeta() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:15672:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletMeta::~TTabletMeta() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:16030:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIndexInfo::~TIndexInfo() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:16210:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnMeta::~TColumnMeta() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:16524:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSchemaMeta::~TSchemaMeta() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:16750:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIndexMeta::~TIndexMeta() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17020:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDataProperty::~TDataProperty() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17138:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBasePartitionDesc::~TBasePartitionDesc() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17348:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSinglePartitionDesc::~TSinglePartitionDesc() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17442:9: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRange::~TRange() noexcept {
        ^                  ~
                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17602:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRangePartitionDesc::~TRangePartitionDesc() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17762:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionInfo::~TPartitionInfo() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:17902:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionMeta::~TPartitionMeta() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:18172:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THashDistributionInfo::~THashDistributionInfo() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:18308:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRandomDistributionInfo::~TRandomDistributionInfo() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:18402:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDistributionDesc::~TDistributionDesc() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:18540:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableMeta::~TTableMeta() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19090:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTableMetaResponse::~TGetTableMetaResponse() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19248:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBeginRemoteTxnRequest::~TBeginRemoteTxnRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19472:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBeginRemoteTxnResponse::~TBeginRemoteTxnResponse() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19610:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCommitRemoteTxnRequest::~TCommitRemoteTxnRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19876:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCommitRemoteTxnResponse::~TCommitRemoteTxnResponse() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:19970:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAbortRemoteTxnRequest::~TAbortRemoteTxnRequest() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20130:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAbortRemoteTxnResponse::~TAbortRemoteTxnResponse() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20224:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSetConfigRequest::~TSetConfigRequest() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20380:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSetConfigResponse::~TSetConfigResponse() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20472:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCreatePartitionRequest::~TCreatePartitionRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20672:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCreatePartitionResult::~TCreatePartitionResult() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:20892:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAuthInfo::~TAuthInfo() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21052:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesConfigRequest::~TGetTablesConfigRequest() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21146:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesConfigResponse::~TGetTablesConfigResponse() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21260:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableConfigInfo::~TTableConfigInfo() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21574:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesInfoRequest::~TGetTablesInfoRequest() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21668:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTablesInfoResponse::~TGetTablesInfoResponse() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:21782:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletSchedule::~TTabletSchedule() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:22184:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTabletScheduleRequest::~TGetTabletScheduleRequest() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:22388:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGetTabletScheduleResponse::~TGetTabletScheduleResponse() noexcept {
                            ^                                      ~
                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:22502:30: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUpdateResourceUsageRequest::~TUpdateResourceUsageRequest() noexcept {
                             ^                                       ~
                                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:22618:31: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUpdateResourceUsageResponse::~TUpdateResourceUsageResponse() noexcept {
                              ^                                        ~
                                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:22712:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableInfo::~TTableInfo() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:23246:32: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAllocateAutoIncrementIdParam::~TAllocateAutoIncrementIdParam() noexcept {
                               ^                                         ~
                                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/FrontendService_types.cpp:23362:33: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAllocateAutoIncrementIdResult::~TAllocateAutoIncrementIdResult() noexcept {
                                ^                                          ~
                                                                           = default;
[ 27%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/column_converter.cpp.o
[ 27%] Building CXX object src/service/CMakeFiles/Service.dir/service.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:17:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRowBatch::~TRowBatch() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:275:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnValue::~TColumnValue() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:457:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResultRow::~TResultRow() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:569:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResultBatch::~TResultBatch() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:752:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TGlobalDict::~TGlobalDict() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:930:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStatisticData::~TStatisticData() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Data_types.cpp:1310:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TVariableData::~TVariableData() noexcept {
               ^                         ~
                                         = default;
[ 27%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/DataSinks_constants.cpp.o
[ 27%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/multi_cast_data_stream_sink.cpp.o
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:65:46: warning: use std::make_unique instead [modernize-make-unique]
WriterOptions::WriterOptions() : privateBits(std::unique_ptr<WriterOptionsPrivate>(new WriterOptionsPrivate())) {
                                             ^~~~~~~~~~~~~~~                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
                                             std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:70:23: warning: use std::make_unique instead [modernize-make-unique]
        : privateBits(std::unique_ptr<WriterOptionsPrivate>(new WriterOptionsPrivate(*(rhs.privateBits.get())))) {
                      ^~~~~~~~~~~~~~~                       ~~~~~~~~~~~~~~~~~~~~~~~~~                        ~
                      std::make_unique
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:81:21: warning: use std::make_unique instead [modernize-make-unique]
        privateBits.reset(new WriterOptionsPrivate(*(rhs.privateBits.get())));
                   ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~                        ~
                    = std::make_unique<WriterOptionsPrivate>
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:86:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
WriterOptions::~WriterOptions() {
               ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:248:9: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Writer::~Writer() {
        ^
/root/starrocks/be/src/formats/orc/apache-orc/c++/src/Writer.cc:310:20: warning: use std::make_unique instead [modernize-make-unique]
    bufferedStream.reset(new BufferedOutputStream(*options.getMemoryPool(), outStream,
                  ~^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~
                   = std::make_unique<BufferedOutputStream>
[ 27%] Linking CXX static library ../../../../../../../output/tmp/RELEASE/liborc.a
[ 27%] Built target orc
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/column_reader.cpp.o
[ 27%] Building CXX object src/column/CMakeFiles/Column.dir/schema.cpp.o
[ 27%] Building CXX object src/udf/CMakeFiles/Udf.dir/java/java_native_method.cpp.o
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/encoding.cpp.o
/root/starrocks/gensrc/build/gen_cpp/DataSinks_constants.cpp:13:21: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
DataSinksConstants::DataSinksConstants() {
                    ^                    ~
                                         = default;
[ 27%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp.o
[ 27%] Linking CXX static library ../../../../output/tmp/RELEASE/libRowset.a
[ 27%] Built target Rowset
[ 27%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/level_codec.cpp.o
[ 28%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/page_reader.cpp.o
[ 29%] Building CXX object src/storage/CMakeFiles/Storage.dir/segment_replicate_executor.cpp.o
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:38:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDataSinkType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kTDataSinkTypeValues, _kTDataSinkTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:38:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDataSinkType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kTDataSinkTypeValues, _kTDataSinkTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:41:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDataSinkType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:51:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDataSinkType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:53:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:71:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TResultSinkType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTResultSinkTypeValues, _kTResultSinkTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:71:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TResultSinkType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTResultSinkTypeValues, _kTResultSinkTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:74:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TResultSinkType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:84:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TResultSinkType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:86:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:93:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TParquetOptions::~TParquetOptions() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:233:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResultFileSinkOptions::~TResultFileSinkOptions() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:637:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMemoryScratchSink::~TMemoryScratchSink() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:705:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlanFragmentDestination::~TPlanFragmentDestination() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:867:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDataStreamSink::~TDataStreamSink() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:1093:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMultiCastDataStreamSink::~TMultiCastDataStreamSink() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:1268:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResultSink::~TResultSink() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:1386:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMysqlTableSink::~TMysqlTableSink() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:1593:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExportSink::~TExportSink() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:1935:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableSink::~TOlapTableSink() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:2574:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSchemaTableSink::~TSchemaTableSink() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:2690:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDataSink::~TDataSink() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:2963:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergColumnStats::~TIcebergColumnStats() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/DataSinks_types.cpp:3311:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergDataFile::~TIcebergDataFile() noexcept {
                  ^                            ~
                                               = default;
[ 30%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Descriptors_constants.cpp.o
[ 30%] Building CXX object src/storage/CMakeFiles/Storage.dir/metadata_util.cpp.o
[ 30%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/snapshot_action.cpp.o
[ 30%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/datetime_value.cpp.o
[ 30%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/schema.cpp.o
[ 30%] Building CXX object src/util/CMakeFiles/Util.dir/arrow/utils.cpp.o
[ 30%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp.o
[ 30%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Exprs_constants.cpp.o
[ 30%] Building CXX object src/agent/CMakeFiles/Agent.dir/report_task.cpp.o
[ 30%] Building CXX object src/column/CMakeFiles/Column.dir/binary_column.cpp.o
[ 30%] Building CXX object src/storage/CMakeFiles/Storage.dir/kv_store.cpp.o
[ 30%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/descriptors.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Exprs_constants.cpp:13:17: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
ExprsConstants::ExprsConstants() {
                ^                ~
                                 = default;
[ 30%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/exec_env.cpp.o
[ 30%] Building CXX object src/util/CMakeFiles/Util.dir/bfd_parser.cpp.o
[ 30%] Building CXX object src/util/CMakeFiles/Util.dir/compression/block_compression.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:34:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _THdfsFileFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTHdfsFileFormatValues, _kTHdfsFileFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:34:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _THdfsFileFormat_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTHdfsFileFormatValues, _kTHdfsFileFormatNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:37:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _THdfsFileFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:47:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _THdfsFileFormat_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:49:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:155:192: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSchemaTableType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(48, _kTSchemaTableTypeValues, _kTSchemaTableTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                               ^~~~
                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:155:198: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TSchemaTableType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(48, _kTSchemaTableTypeValues, _kTSchemaTableTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                     ^~~~
                                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:158:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSchemaTableType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:168:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TSchemaTableType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:170:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:194:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _THdfsCompression_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTHdfsCompressionValues, _kTHdfsCompressionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:194:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _THdfsCompression_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTHdfsCompressionValues, _kTHdfsCompressionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:197:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _THdfsCompression_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:207:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _THdfsCompression_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:209:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:221:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIndexType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTIndexTypeValues, _kTIndexTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:221:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIndexType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(1, _kTIndexTypeValues, _kTIndexTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:224:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIndexType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:234:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIndexType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:236:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:250:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIMTType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTIMTTypeValues, _kTIMTTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:250:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIMTType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTIMTTypeValues, _kTIMTTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:253:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIMTType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:263:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIMTType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:265:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:272:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSlotDescriptor::~TSlotDescriptor() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:571:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTupleDescriptor::~TTupleDescriptor() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:756:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTextFileDesc::~TTextFileDesc() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:1006:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumn::~TColumn() noexcept {
         ^                   ~
                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:1323:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableIndexTablets::~TOlapTableIndexTablets() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:1458:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTablePartition::~TOlapTablePartition() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:1831:27: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTablePartitionParam::~TOlapTablePartitionParam() noexcept {
                          ^                                    ~
                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:2185:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableIndexSchema::~TOlapTableIndexSchema() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:2343:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableSchemaParam::~TOlapTableSchemaParam() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:2590:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableIndex::~TOlapTableIndex() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:2772:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletLocation::~TTabletLocation() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:2907:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableLocationParam::~TOlapTableLocationParam() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3088:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TNodeInfo::~TNodeInfo() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3249:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TNodesInfo::~TNodesInfo() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3384:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTable::~TOlapTable() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3476:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMySQLTable::~TMySQLTable() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3683:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TEsTable::~TEsTable() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3751:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSchemaTable::~TSchemaTable() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3845:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerTable::~TBrokerTable() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:3913:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsPartitionLocation::~THdfsPartitionLocation() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4029:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsPartition::~THdfsPartition() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4189:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsTable::~THdfsTable() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4455:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileTable::~TFileTable() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4591:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergSchema::~TIcebergSchema() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4705:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergSchemaField::~TIcebergSchemaField() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:4863:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergTable::~TIcebergTable() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:5021:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THudiTable::~THudiTable() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:5419:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDeltaLakeTable::~TDeltaLakeTable() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:5685:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TJDBCTable::~TJDBCTable() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:5933:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableDescriptor::~TTableDescriptor() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:6387:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDescriptorTable::~TDescriptorTable() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:6608:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapTableRouteInfo::~TOlapTableRouteInfo() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Descriptors_types.cpp:6858:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIMTDescriptor::~TIMTDescriptor() noexcept {
                ^                          ~
                                           = default;
[ 30%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp.o
/root/starrocks/be/src/udf/java/java_native_method.cpp:62:20: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    auto* column = reinterpret_cast<Column*>(columnAddr);
                   ^
/root/starrocks/be/src/udf/java/java_native_method.cpp:82:20: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    auto* column = reinterpret_cast<Column*>(columnAddr);
                   ^
/root/starrocks/be/src/udf/java/java_native_method.cpp:101:10: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    free(reinterpret_cast<void*>(address));
         ^
[ 31%] Linking CXX static library ../../../output/tmp/RELEASE/libUdf.a
[ 31%] Built target Udf
[ 31%] Building CXX object src/util/CMakeFiles/Util.dir/compression/compression_context_pool_singletons.cpp.o
[ 32%] Linking CXX static library ../../../output/tmp/RELEASE/libService.a
[ 32%] Built target Service
[ 33%] Building CXX object src/agent/CMakeFiles/Agent.dir/agent_task.cpp.o
/root/starrocks/be/src/agent/publish_version.cpp:164:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < publish_version_req.partition_version_infos.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & partition_version : publish_version_req.partition_version_infos)
[ 33%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/user_function_cache.cpp.o
[ 33%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/jdbc_driver_manager.cpp.o
[ 33%] Building CXX object src/exec/CMakeFiles/Exec.dir/select_node.cpp.o
[ 33%] Building CXX object src/exec/CMakeFiles/Exec.dir/sort_exec_exprs.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:92:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExprNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(36, _kTExprNodeTypeValues, _kTExprNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:92:189: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExprNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(36, _kTExprNodeTypeValues, _kTExprNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                            ^~~~
                                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:95:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExprNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:105:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExprNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:107:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:114:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAggregateExpr::~TAggregateExpr() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:206:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBoolLiteral::~TBoolLiteral() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:298:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCaseExpr::~TCaseExpr() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:413:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDateLiteral::~TDateLiteral() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:505:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFloatLiteral::~TFloatLiteral() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:597:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDecimalLiteral::~TDecimalLiteral() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:714:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIntLiteral::~TIntLiteral() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:806:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLargeIntLiteral::~TLargeIntLiteral() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:898:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBinaryLiteral::~TBinaryLiteral() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:990:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TInPredicate::~TInPredicate() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1082:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIsNullPredicate::~TIsNullPredicate() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1174:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLikePredicate::~TLikePredicate() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1266:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLiteralPredicate::~TLiteralPredicate() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1381:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTupleIsNullPredicate::~TTupleIsNullPredicate() noexcept {
                       ^                                 ~
                                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1493:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSlotRef::~TSlotRef() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1608:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlaceHolder::~TPlaceHolder() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1724:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStringLiteral::~TStringLiteral() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1816:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TInfoFunc::~TInfoFunc() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:1931:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFunctionCallExpr::~TFunctionCallExpr() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:2048:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExprNode::~TExprNode() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:2944:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionLiteral::~TPartitionLiteral() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Exprs_types.cpp:3106:8: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExpr::~TExpr() noexcept {
       ^                 ~
                         = default;
[ 33%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/MasterService_constants.cpp.o
[ 34%] Building CXX object src/column/CMakeFiles/Column.dir/object_column.cpp.o
[ 34%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_others.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_sumcount.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_stream.cpp.o
[ 35%] Building CXX object src/column/CMakeFiles/Column.dir/decimalv3_column.cpp.o
[ 35%] Building CXX object src/column/CMakeFiles/Column.dir/column_visitor.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_utility.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_variance.cpp.o
[ 35%] Building CXX object src/util/CMakeFiles/Util.dir/compression/stream_compression.cpp.o
/root/starrocks/gensrc/build/gen_cpp/MasterService_constants.cpp:13:25: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
MasterServiceConstants::MasterServiceConstants() {
                        ^                        ~
                                                 = default;
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/factory/aggregate_resolver_window.cpp.o
[ 35%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp.o
[ 35%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Metrics_constants.cpp.o
[ 35%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp.o
[ 35%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_constants.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Metrics_constants.cpp:13:19: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
MetricsConstants::MetricsConstants() {
                  ^                  ~
                                     = default;
[ 35%] Building CXX object src/agent/CMakeFiles/Agent.dir/task_signatures_manager.cpp.o
[ 35%] Linking CXX static library ../../../../output/tmp/RELEASE/libServiceBE.a
[ 35%] Built target ServiceBE
[ 35%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/reload_tablet_action.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/anyval_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:40:159: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TUnit_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTUnitValues, _kTUnitNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                              ^~~~
                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:40:165: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TUnit_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTUnitValues, _kTUnitNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                    ^~~~
                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:43:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TUnit_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:53:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TUnit_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:55:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:77:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TMetricKind_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTMetricKindValues, _kTMetricKindNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:77:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TMetricKind_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTMetricKindValues, _kTMetricKindNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:80:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TMetricKind_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:90:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TMetricKind_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Metrics_types.cpp:92:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/base64.cpp.o
[ 35%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/stored_column_reader.cpp.o
[ 35%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/restore_tablet_action.cpp.o
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_constants.cpp:13:25: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
MVMaintenanceConstants::MVMaintenanceConstants() {
                        ^                        ~
                                                 = default;
[ 35%] Building CXX object src/storage/CMakeFiles/Storage.dir/local_tablet_reader.cpp.o
[ 35%] Building CXX object src/storage/CMakeFiles/Storage.dir/olap_common.cpp.o
[ 35%] Building CXX object src/storage/CMakeFiles/Storage.dir/olap_server.cpp.o
[ 35%] Building CXX object src/storage/CMakeFiles/Storage.dir/options.cpp.o
[ 35%] Building CXX object src/util/CMakeFiles/Util.dir/coding.cpp.o
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:40:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TResourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTResourceTypeValues, _kTResourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:40:189: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TResourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kTResourceTypeValues, _kTResourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                            ^~~~
                                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:43:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TResourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:53:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TResourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:55:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:62:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletInfo::~TTabletInfo() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:558:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletVersionPair::~TTabletVersionPair() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:674:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFinishTaskRequest::~TFinishTaskRequest() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:1270:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTablet::~TTablet() noexcept {
         ^                   ~
                             = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:1382:8: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDisk::~TDisk() noexcept {
       ^                 ~
                         = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:1614:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPluginInfo::~TPluginInfo() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:1729:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TReportRequest::~TReportRequest() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:2157:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMasterResult::~TMasterResult() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:2294:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResourceGroup::~TResourceGroup() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:2412:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUserResource::~TUserResource() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/MasterService_types.cpp:2551:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFetchResourceResult::~TFetchResourceResult() noexcept {
                      ^                                ~
                                                       = default;
[ 35%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp.o
[ 35%] Building CXX object src/storage/CMakeFiles/Storage.dir/page_cache.cpp.o
[ 35%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/utils.cpp.o
[ 35%] Building CXX object src/column/CMakeFiles/Column.dir/column_visitor_mutable.cpp.o
[ 35%] Building CXX object src/column/CMakeFiles/Column.dir/json_column.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/expr_context.cpp.o
[ 35%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/expr.cpp.o
[ 36%] Building CXX object src/util/CMakeFiles/Util.dir/cpu_info.cpp.o
[ 36%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/function_context.cpp.o
[ 36%] Building CXX object src/storage/CMakeFiles/Storage.dir/persistent_index.cpp.o
[ 36%] Building CXX object src/util/CMakeFiles/Util.dir/cpu_usage_info.cpp.o
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:30:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _MVTaskType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kMVTaskTypeValues, _kMVTaskTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:30:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _MVTaskType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kMVTaskTypeValues, _kMVTaskTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:33:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _MVTaskType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:43:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _MVTaskType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:45:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:52:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVMaintenanceStartTask::~TMVMaintenanceStartTask() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:166:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVMaintenanceStopTask::~TMVMaintenanceStopTask() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:234:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVEpoch::~TMVEpoch() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:394:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVStartEpochTask::~TMVStartEpochTask() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:622:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVCommitEpochTask::~TMVCommitEpochTask() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:802:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVAbortEpochTask::~TMVAbortEpochTask() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:896:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVReportEpochTask::~TMVReportEpochTask() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:1164:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVReportEpochResponse::~TMVReportEpochResponse() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/MVMaintenance_types.cpp:1232:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMVMaintenanceTasks::~TMVMaintenanceTasks() noexcept {
                     ^                               ~
                                                     = default;
[ 37%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Opcodes_constants.cpp.o
[ 37%] Building CXX object src/column/CMakeFiles/Column.dir/map_column.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Opcodes_constants.cpp:13:19: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
OpcodesConstants::OpcodesConstants() {
                  ^                  ~
                                     = default;
[ 37%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp.o
/root/starrocks/be/src/exprs/anyval_util.cpp:110:19: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
        for (auto child : type.children) {
                  ^
             const  &
/root/starrocks/be/src/exprs/anyval_util.cpp:117:19: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
        for (auto name : type.field_names) {
                  ^
             const  &
/root/starrocks/be/src/exprs/anyval_util.cpp:120:19: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
        for (auto child : type.children) {
                  ^
             const  &
[ 37%] Building CXX object src/column/CMakeFiles/Column.dir/struct_column.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:156:177: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExprOpcode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(68, _kTExprOpcodeValues, _kTExprOpcodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                ^~~~
                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:156:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExprOpcode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(68, _kTExprOpcodeValues, _kTExprOpcodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:159:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExprOpcode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:169:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExprOpcode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:171:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:189:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStreamOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTStreamOpTypeValues, _kTStreamOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:189:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStreamOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTStreamOpTypeValues, _kTStreamOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:192:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStreamOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:202:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStreamOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Opcodes_types.cpp:204:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
[ 37%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/PlanNodes_constants.cpp.o
In file included from /root/starrocks/be/src/connector/binlog_connector.cpp:15:
/root/starrocks/be/src/connector/binlog_connector.h:110:13: warning: private field '_rows_read_in_epoch' is not used [-Wunused-private-field]
    int64_t _rows_read_in_epoch = 0;
            ^
/root/starrocks/be/src/connector/binlog_connector.h:111:13: warning: private field '_cpu_time_spent_in_epoch' is not used [-Wunused-private-field]
    int64_t _cpu_time_spent_in_epoch = 0;
            ^
2 warnings generated.
[ 37%] Linking CXX static library ../../../output/tmp/RELEASE/libConnector.a
[ 37%] Built target Connector
[ 37%] Building CXX object src/column/CMakeFiles/Column.dir/stream_chunk.cpp.o
[ 37%] Building CXX object src/util/CMakeFiles/Util.dir/crc32c.cpp.o
[ 37%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/pprof_actions.cpp.o
[ 37%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp.o
/root/starrocks/be/src/util/crc32c.cpp:203:21: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    const auto* x = reinterpret_cast<const uint8_t*>(ALIGN(pval, 4));
                    ^
[ 37%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/metadata.cpp.o
[ 37%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/meta_helper.cpp.o
[ 37%] Building CXX object src/util/CMakeFiles/Util.dir/date_func.cpp.o
[ 37%] Building CXX object src/util/CMakeFiles/Util.dir/dynamic_util.cpp.o
[ 37%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/metrics_action.cpp.o
/root/starrocks/be/src/util/date_func.cpp:52:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return uint24_t(value);
           ^
[ 37%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/stream_load.cpp.o
/root/starrocks/be/src/exprs/expr_context.cpp:153:20: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
            return std::string(fn_ctx->error_msg());
                   ^
[ 37%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/transaction_stream_load.cpp.o
[ 37%] Building CXX object src/util/CMakeFiles/Util.dir/debug_util.cpp.o
[ 37%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/meta_action.cpp.o
[ 38%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/compact_rocksdb_meta_action.cpp.o
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:96:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPlanNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(38, _kTPlanNodeTypeValues, _kTPlanNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:96:189: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPlanNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(38, _kTPlanNodeTypeValues, _kTPlanNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                            ^~~~
                                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:99:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPlanNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:109:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPlanNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:111:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:131:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExecNodePhase_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTExecNodePhaseValues, _kTExecNodePhaseNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:131:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExecNodePhase_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTExecNodePhaseValues, _kTExecNodePhaseNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:134:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExecNodePhase_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:144:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExecNodePhase_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:146:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:160:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDebugAction_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTDebugActionValues, _kTDebugActionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:160:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDebugAction_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTDebugActionValues, _kTDebugActionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:163:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDebugAction_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:173:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDebugAction_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:175:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:211:189: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileFormatType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(13, _kTFileFormatTypeValues, _kTFileFormatTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                            ^~~~
                                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:211:195: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileFormatType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(13, _kTFileFormatTypeValues, _kTFileFormatTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                  ^~~~
                                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:214:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileFormatType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:224:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileFormatType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:226:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:252:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TObjectStoreType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(8, _kTObjectStoreTypeValues, _kTObjectStoreTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:252:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TObjectStoreType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(8, _kTObjectStoreTypeValues, _kTObjectStoreTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:255:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TObjectStoreType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:265:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TObjectStoreType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:267:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:283:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIcebergFileContent_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTIcebergFileContentValues, _kTIcebergFileContentNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:283:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TIcebergFileContent_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTIcebergFileContentValues, _kTIcebergFileContentNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:286:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIcebergFileContent_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:296:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TIcebergFileContent_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:298:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:314:227: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStreamingPreaggregationMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTStreamingPreaggregationModeValues, _kTStreamingPreaggregationModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                  ^~~~
                                                                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:314:233: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStreamingPreaggregationMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTStreamingPreaggregationModeValues, _kTStreamingPreaggregationModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                        ^~~~
                                                                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:317:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStreamingPreaggregationMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:327:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStreamingPreaggregationMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:329:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:361:165: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TJoinOp_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(11, _kTJoinOpValues, _kTJoinOpNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                    ^~~~
                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:361:171: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TJoinOp_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(11, _kTJoinOpValues, _kTJoinOpNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                          ^~~~
                                                                                                                                                                          nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:364:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TJoinOp_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:374:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TJoinOp_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:376:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:400:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TJoinDistributionMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTJoinDistributionModeValues, _kTJoinDistributionModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:400:212: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TJoinDistributionMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTJoinDistributionModeValues, _kTJoinDistributionModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                   ^~~~
                                                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:403:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TJoinDistributionMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:413:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TJoinDistributionMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:415:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:469:186: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAggregationOp_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(22, _kTAggregationOpValues, _kTAggregationOpNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                         ^~~~
                                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:469:192: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAggregationOp_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(22, _kTAggregationOpValues, _kTAggregationOpNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                               ^~~~
                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:472:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAggregationOp_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:482:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAggregationOp_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:484:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:500:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTopNType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTTopNTypeValues, _kTTopNTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:500:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTopNType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTTopNTypeValues, _kTTopNTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:503:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTopNType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:513:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTopNType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:515:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:529:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAnalyticWindowType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTAnalyticWindowTypeValues, _kTAnalyticWindowTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:529:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAnalyticWindowType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTAnalyticWindowTypeValues, _kTAnalyticWindowTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:532:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAnalyticWindowType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:542:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAnalyticWindowType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:544:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:560:224: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAnalyticWindowBoundaryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTAnalyticWindowBoundaryTypeValues, _kTAnalyticWindowBoundaryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                               ^~~~
                                                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:560:230: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAnalyticWindowBoundaryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTAnalyticWindowBoundaryTypeValues, _kTAnalyticWindowBoundaryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                     ^~~~
                                                                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:563:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAnalyticWindowBoundaryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:573:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAnalyticWindowBoundaryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:575:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:597:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAssertion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTAssertionValues, _kTAssertionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:597:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAssertion_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kTAssertionValues, _kTAssertionNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:600:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAssertion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:610:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAssertion_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:612:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:619:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TKeyRange::~TKeyRange() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:782:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TInternalScanRange::~TInternalScanRange() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:1120:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerRangeDesc::~TBrokerRangeDesc() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:1508:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsProperty::~THdfsProperty() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:1623:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsProperties::~THdfsProperties() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:1981:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerScanRangeParams::~TBrokerScanRangeParams() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:2698:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBrokerScanRange::~TBrokerScanRange() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:2901:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TEsScanRange::~TEsScanRange() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:3084:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIcebergDeleteFile::~TIcebergDeleteFile() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:3248:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsScanRange::~THdfsScanRange() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:3626:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBinlogScanRange::~TBinlogScanRange() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:3808:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanRange::~TScanRange() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:4012:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMySQLScanNode::~TMySQLScanNode() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:4260:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFileScanNode::~TFileScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:4461:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TEsScanNode::~TEsScanNode() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:4694:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSchemaScanNode::~TSchemaScanNode() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:5208:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TOlapScanNode::~TOlapScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:5718:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TJDBCScanNode::~TJDBCScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:5940:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TLakeScanNode::~TLakeScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:6406:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TEqJoinCondition::~TEqJoinCondition() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:6548:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THashJoinNode::~THashJoinNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:7012:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMergeJoinNode::~TMergeJoinNode() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:7474:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TNestLoopJoinNode::~TNestLoopJoinNode() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:7676:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAggregationNode::~TAggregationNode() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:8122:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRepeatNode::~TRepeatNode() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:8428:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSortInfo::~TSortInfo() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:8671:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TSortNode::~TSortNode() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:9283:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAnalyticWindowBoundary::~TAnalyticWindowBoundary() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:9424:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAnalyticWindow::~TAnalyticWindow() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:9565:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAnalyticNode::~TAnalyticNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:9988:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMergeNode::~TMergeNode() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:10206:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUnionNode::~TUnionNode() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:10516:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TIntersectNode::~TIntersectNode() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:10757:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExceptNode::~TExceptNode() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:10998:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TExchangeNode::~TExchangeNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:11181:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBackendResourceProfile::~TBackendResourceProfile() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:11343:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAssertNumRowsNode::~TAssertNumRowsNode() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:11483:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
THdfsScanNode::~THdfsScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:11989:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TProjectNode::~TProjectNode() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12153:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TMetaScanNode::~TMetaScanNode() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12271:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDecodeNode::~TDecodeNode() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12435:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCrossJoinNode::~TCrossJoinNode() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12549:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableFunctionNode::~TTableFunctionNode() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12769:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TConnectorScanNode::~TConnectorScanNode() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12863:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBinlogScanNode::~TBinlogScanNode() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:12957:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamScanNode::~TStreamScanNode() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:13075:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamJoinNode::~TStreamJoinNode() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:13431:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStreamAggregationNode::~TStreamAggregationNode() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:13719:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlanNode::~TPlanNode() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/PlanNodes_types.cpp:14889:8: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlan::~TPlan() noexcept {
       ^                 ~
                         = default;
[ 38%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Partitions_constants.cpp.o
[ 38%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp.o
[ 38%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/mem_pool.cpp.o
[ 38%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/group_reader.cpp.o
[ 38%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/file_reader.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Partitions_constants.cpp:13:22: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
PartitionsConstants::PartitionsConstants() {
                     ^                     ~
                                           = default;
[ 38%] Building CXX object src/formats/CMakeFiles/Formats.dir/parquet/file_writer.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:30:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPartitionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTPartitionTypeValues, _kTPartitionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:30:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPartitionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTPartitionTypeValues, _kTPartitionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:33:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPartitionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:43:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPartitionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:45:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:63:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDistributionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTDistributionTypeValues, _kTDistributionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:63:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TDistributionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTDistributionTypeValues, _kTDistributionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:66:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDistributionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:76:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TDistributionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:78:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:85:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionKey::~TPartitionKey() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:226:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPartitionRange::~TPartitionRange() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:387:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRangePartition::~TRangePartition() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Partitions_types.cpp:569:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TDataPartition::~TDataPartition() noexcept {
                ^                          ~
                                           = default;
[ 38%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Planner_constants.cpp.o
[ 38%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Planner_types.cpp.o
[ 39%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/plan_fragment_executor.cpp.o
[ 39%] Building CXX object src/util/CMakeFiles/Util.dir/disk_info.cpp.o
[ 39%] Building CXX object src/util/CMakeFiles/Util.dir/download_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Planner_constants.cpp:13:19: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
PlannerConstants::PlannerConstants() {
                  ^                  ~
                                     = default;
[ 40%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/table_function/table_function_factory.cpp.o
/root/starrocks/be/src/column/stream_chunk.cpp:50:86: warning: the parameter 'ops' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
StreamChunkPtr StreamChunkConverter::make_stream_chunk(ChunkPtr chunk, Int8ColumnPtr ops) {
                                                                                     ^
                                                                       const        &
[ 40%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/table_function/json_each.cpp.o
[ 40%] Linking CXX static library ../../../output/tmp/RELEASE/libColumn.a
[ 40%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_constants.cpp.o
[ 40%] Built target Column
[ 40%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Planner_types.cpp:17:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCacheParam::~TCacheParam() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Planner_types.cpp:380:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TPlanFragment::~TPlanFragment() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Planner_types.cpp:711:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanRangeLocation::~TScanRangeLocation() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Planner_types.cpp:850:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScanRangeLocations::~TScanRangeLocations() noexcept {
                     ^                               ~
                                                     = default;
[ 40%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/table_function/list_rowsets.cpp.o
/root/starrocks/be/src/agent/agent_task.cpp:110:20: warning: use emplace_back instead of push_back [modernize-use-emplace]
        error_msgs.push_back("alter success");
                   ^~~~~~~~~~
                   emplace_back(
/root/starrocks/be/src/agent/agent_task.cpp:119:20: warning: use emplace_back instead of push_back [modernize-use-emplace]
        error_msgs.push_back("alter failed");
                   ^~~~~~~~~~
                   emplace_back(
[ 40%] Linking CXX static library ../../../output/tmp/RELEASE/libAgent.a
[ 40%] Built target Agent
[ 40%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/arithmetic_expr.cpp.o
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Status_constants.cpp.o
[ 41%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/compaction_action.cpp.o
[ 41%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/update_config_action.cpp.o
/root/starrocks/be/src/storage/local_tablet_reader.cpp:30:20: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
LocalTabletReader::LocalTabletReader() {}
                   ^                   ~~
                                       = default;
[ 41%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/array_element_expr.cpp.o
[ 41%] Building CXX object src/exec/CMakeFiles/Exec.dir/olap_common.cpp.o
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Status_types.cpp.o
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_constants.cpp:13:26: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
RuntimeProfileConstants::RuntimeProfileConstants() {
                         ^                         ~
                                                   = default;
[ 41%] Building CXX object src/exec/CMakeFiles/Exec.dir/tablet_info.cpp.o
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/StatusCode_constants.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Status_constants.cpp:13:18: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
StatusConstants::StatusConstants() {
                 ^                 ~
                                   = default;
[ 41%] Building CXX object src/util/CMakeFiles/Util.dir/errno.cpp.o
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:24:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCounterAggregateType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTCounterAggregateTypeValues, _kTCounterAggregateTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:24:212: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCounterAggregateType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTCounterAggregateTypeValues, _kTCounterAggregateTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                   ^~~~
                                                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:27:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCounterAggregateType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:37:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCounterAggregateType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:39:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:57:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCounterMergeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTCounterMergeTypeValues, _kTCounterMergeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:57:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCounterMergeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTCounterMergeTypeValues, _kTCounterMergeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:60:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCounterMergeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:70:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCounterMergeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:72:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:79:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCounterStrategy::~TCounterStrategy() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:221:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCounter::~TCounter() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:386:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeProfileNode::~TRuntimeProfileNode() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeProfile_types.cpp:748:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeProfileTree::~TRuntimeProfileTree() noexcept {
                     ^                               ~
                                                     = default;
[ 41%] Building CXX object src/storage/CMakeFiles/Storage.dir/primary_index.cpp.o
/root/starrocks/gensrc/build/gen_cpp/StatusCode_constants.cpp:13:22: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
StatusCodeConstants::StatusCodeConstants() {
                     ^                     ~
                                           = default;
[ 41%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/array_expr.cpp.o
[ 41%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/array_functions.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Status_types.cpp:17:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStatus::~TStatus() noexcept {
         ^                   ~
                             = default;
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp.o
[ 41%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/binary_predicate.cpp.o
/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp:115:177: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStatusCode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(47, _kTStatusCodeValues, _kTStatusCodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                ^~~~
                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp:115:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStatusCode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(47, _kTStatusCodeValues, _kTStatusCodeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp:118:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStatusCode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp:128:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStatusCode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/StatusCode_types.cpp:130:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Types_constants.cpp.o
[ 41%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp.o
[ 42%] Building CXX object src/util/CMakeFiles/Util.dir/json_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:24:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTStorageTypeValues, _kTStorageTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:24:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTStorageTypeValues, _kTStorageTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:27:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:37:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:39:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:53:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageMedium_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTStorageMediumValues, _kTStorageMediumNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:53:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStorageMedium_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTStorageMediumValues, _kTStorageMediumNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:56:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageMedium_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:66:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStorageMedium_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:68:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:84:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TVarType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTVarTypeValues, _kTVarTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:84:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TVarType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTVarTypeValues, _kTVarTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:87:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TVarType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:97:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TVarType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:99:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:163:186: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPrimitiveType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(27, _kTPrimitiveTypeValues, _kTPrimitiveTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                         ^~~~
                                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:163:192: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPrimitiveType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(27, _kTPrimitiveTypeValues, _kTPrimitiveTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                               ^~~~
                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:166:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPrimitiveType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:176:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPrimitiveType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:178:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:196:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTypeNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTTypeNodeTypeValues, _kTTypeNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:196:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTypeNodeType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTTypeNodeTypeValues, _kTTypeNodeTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:199:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTypeNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:209:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTypeNodeType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:211:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:239:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAggregationType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kTAggregationTypeValues, _kTAggregationTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:239:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TAggregationType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kTAggregationTypeValues, _kTAggregationTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:242:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAggregationType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:252:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TAggregationType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:254:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:274:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPushType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTPushTypeValues, _kTPushTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:274:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPushType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTPushTypeValues, _kTPushTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:277:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPushType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:287:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPushType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:289:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:353:171: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTaskType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(27, _kTTaskTypeValues, _kTTaskTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                          ^~~~
                                                                                                                                                                          nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:353:177: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTaskType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(27, _kTTaskTypeValues, _kTTaskTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                ^~~~
                                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:356:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTaskType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:366:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTaskType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:368:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:386:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStmtType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTStmtTypeValues, _kTStmtTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:386:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TStmtType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTStmtTypeValues, _kTStmtTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:389:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStmtType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:399:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TStmtType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:401:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:417:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExplainLevel_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTExplainLevelValues, _kTExplainLevelNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:417:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExplainLevel_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTExplainLevelValues, _kTExplainLevelNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:420:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExplainLevel_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:430:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExplainLevel_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:432:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:454:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _QueryState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kQueryStateValues, _kQueryStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:454:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _QueryState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kQueryStateValues, _kQueryStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:457:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _QueryState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:467:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _QueryState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:469:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:483:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTFunctionTypeValues, _kTFunctionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:483:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTFunctionTypeValues, _kTFunctionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:486:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:496:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:498:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:518:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionBinaryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTFunctionBinaryTypeValues, _kTFunctionBinaryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:518:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFunctionBinaryType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTFunctionBinaryTypeValues, _kTFunctionBinaryTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:521:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionBinaryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:531:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFunctionBinaryType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:533:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:553:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadJobState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTLoadJobStateValues, _kTLoadJobStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:553:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadJobState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(5, _kTLoadJobStateValues, _kTLoadJobStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:556:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadJobState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:566:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadJobState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:568:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:586:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TEtlState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTEtlStateValues, _kTEtlStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:586:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TEtlState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTEtlStateValues, _kTEtlStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:589:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TEtlState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:599:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TEtlState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:601:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:639:174: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTableType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(14, _kTTableTypeValues, _kTTableTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                             ^~~~
                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:639:180: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TTableType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(14, _kTTableTypeValues, _kTTableTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                   ^~~~
                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:642:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTableType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:652:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TTableType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:654:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:672:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TKeysType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTKeysTypeValues, _kTKeysTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:672:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TKeysType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTKeysTypeValues, _kTKeysTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:675:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TKeysType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:685:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TKeysType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:687:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:701:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPriority_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTPriorityValues, _kTPriorityNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:701:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPriority_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTPriorityValues, _kTPriorityNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:704:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPriority_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:714:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPriority_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:716:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:734:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExportState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTExportStateValues, _kTExportStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:734:185: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TExportState_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kTExportStateValues, _kTExportStateNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                        ^~~~
                                                                                                                                                                                        nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:737:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExportState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:747:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TExportState_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:749:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:765:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTFileTypeValues, _kTFileTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:765:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TFileType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTFileTypeValues, _kTFileTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:768:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:778:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TFileType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:780:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:796:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTLoadTypeValues, _kTLoadTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:796:176: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTLoadTypeValues, _kTLoadTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                               ^~~~
                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:799:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:809:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:811:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:827:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadSourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTLoadSourceTypeValues, _kTLoadSourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:827:194: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TLoadSourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTLoadSourceTypeValues, _kTLoadSourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                 ^~~~
                                                                                                                                                                                                 nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:830:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadSourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:840:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TLoadSourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:842:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:856:164: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTOpTypeValues, _kTOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                   ^~~~
                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:856:170: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TOpType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTOpTypeValues, _kTOpTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                         ^~~~
                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:859:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:869:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TOpType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:871:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:907:192: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCompressionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(13, _kTCompressionTypeValues, _kTCompressionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                               ^~~~
                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:907:198: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCompressionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(13, _kTCompressionTypeValues, _kTCompressionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                     ^~~~
                                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:910:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCompressionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:920:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCompressionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:922:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:938:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWriteQuorumType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTWriteQuorumTypeValues, _kTWriteQuorumTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:938:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TWriteQuorumType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTWriteQuorumTypeValues, _kTWriteQuorumTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:941:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWriteQuorumType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:951:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TWriteQuorumType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:953:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:967:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _StreamSourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kStreamSourceTypeValues, _kStreamSourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:967:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _StreamSourceType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kStreamSourceTypeValues, _kStreamSourceTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:970:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _StreamSourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:980:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _StreamSourceType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:982:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:998:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPartialUpdateMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTPartialUpdateModeValues, _kTPartialUpdateModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:998:203: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TPartialUpdateMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTPartialUpdateModeValues, _kTPartialUpdateModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                          ^~~~
                                                                                                                                                                                                          nullptr
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1001:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPartialUpdateMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1011:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TPartialUpdateMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1013:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1020:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScalarType::~TScalarType() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1183:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TStructField::~TStructField() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1299:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTypeNode::~TTypeNode() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1460:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTypeDesc::~TTypeDesc() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1572:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TColumnType::~TColumnType() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1757:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TNetworkAddress::~TNetworkAddress() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1872:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUniqueId::~TUniqueId() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:1987:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFunctionName::~TFunctionName() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:2104:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TScalarFunction::~TScalarFunction() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:2243:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TAggregateFunction::~TAggregateFunction() noexcept {
                    ^                              ~
                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:2620:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTableFunction::~TTableFunction() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:2757:12: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TFunction::~TFunction() noexcept {
           ^                     ~
                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3208:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBackend::~TBackend() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3346:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TResourceInfo::~TResourceInfo() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3461:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletCommitInfo::~TTabletCommitInfo() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3663:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TTabletFailInfo::~TTabletFailInfo() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3779:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUserIdentity::~TUserIdentity() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:3917:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TUserRoles::~TUserRoles() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/Types_types.cpp:4031:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TBinlogOffset::~TBinlogOffset() noexcept {
               ^                         ~
                                         = default;
[ 42%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp.o
/root/starrocks/be/src/formats/parquet/meta_helper.cpp:81:15: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
    for (auto each : _t_iceberg_schema->fields) {
              ^
         const  &
[ 42%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc.o
[ 42%] Building CXX object src/util/CMakeFiles/Util.dir/json.cpp.o
[ 42%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/result_sink.cpp.o
[ 42%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/bitmap_functions.cpp.o
[ 42%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/case_expr.cpp.o
[ 42%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/result_buffer_mgr.cpp.o
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:36:155: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _Type_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(8, _kTypeValues, _kTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                          ^~~~
                                                                                                                                                          nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:36:161: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _Type_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(8, _kTypeValues, _kTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                ^~~~
                                                                                                                                                                nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:39:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _Type_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:49:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _Type_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:51:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:105:183: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _ConvertedType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(22, _kConvertedTypeValues, _kConvertedTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                      ^~~~
                                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:105:189: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _ConvertedType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(22, _kConvertedTypeValues, _kConvertedTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                            ^~~~
                                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:108:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _ConvertedType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:118:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _ConvertedType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:120:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:136:200: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _FieldRepetitionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kFieldRepetitionTypeValues, _kFieldRepetitionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                       ^~~~
                                                                                                                                                                                                       nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:136:206: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _FieldRepetitionType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kFieldRepetitionTypeValues, _kFieldRepetitionTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                             ^~~~
                                                                                                                                                                                                             nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:139:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _FieldRepetitionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:149:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _FieldRepetitionType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:151:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:179:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _Encoding_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kEncodingValues, _kEncodingNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:179:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _Encoding_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(9, _kEncodingValues, _kEncodingNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:182:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _Encoding_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:192:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _Encoding_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:194:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:218:191: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _CompressionCodec_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kCompressionCodecValues, _kCompressionCodecNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                              ^~~~
                                                                                                                                                                                              nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:218:197: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _CompressionCodec_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kCompressionCodecValues, _kCompressionCodecNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                    ^~~~
                                                                                                                                                                                                    nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:221:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _CompressionCodec_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:231:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _CompressionCodec_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:233:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:251:167: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _PageType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kPageTypeValues, _kPageTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                      ^~~~
                                                                                                                                                                      nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:251:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _PageType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(4, _kPageTypeValues, _kPageTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:254:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _PageType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:264:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _PageType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:266:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:282:182: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _BoundaryOrder_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kBoundaryOrderValues, _kBoundaryOrderNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                     ^~~~
                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:282:188: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _BoundaryOrder_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kBoundaryOrderValues, _kBoundaryOrderNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                           ^~~~
                                                                                                                                                                                           nullptr
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:285:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _BoundaryOrder_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:295:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _BoundaryOrder_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:297:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:304:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Statistics::~Statistics() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:508:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
StringType::~StringType() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:576:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
UUIDType::~UUIDType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:644:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MapType::~MapType() noexcept {
         ^                   ~
                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:712:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ListType::~ListType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:780:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
EnumType::~EnumType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:848:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DateType::~DateType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:916:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
NullType::~NullType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:984:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DecimalType::~DecimalType() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1099:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MilliSeconds::~MilliSeconds() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1167:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MicroSeconds::~MicroSeconds() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1235:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
NanoSeconds::~NanoSeconds() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1303:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimeUnit::~TimeUnit() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1441:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimestampType::~TimestampType() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1556:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TimeType::~TimeType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1671:10: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
IntType::~IntType() noexcept {
         ^                   ~
                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1786:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
JsonType::~JsonType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1854:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BsonType::~BsonType() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:1922:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
LogicalType::~LogicalType() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:2280:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SchemaElement::~SchemaElement() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:2579:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DataPageHeader::~DataPageHeader() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:2771:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
IndexPageHeader::~IndexPageHeader() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:2839:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DictionaryPageHeader::~DictionaryPageHeader() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:2981:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
DataPageHeaderV2::~DataPageHeaderV2() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3237:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SplitBlockAlgorithm::~SplitBlockAlgorithm() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3305:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BloomFilterAlgorithm::~BloomFilterAlgorithm() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3399:9: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
XxHash::~XxHash() noexcept {
        ^                  ~
                           = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3467:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BloomFilterHash::~BloomFilterHash() noexcept {
                 ^                           ~
                                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3561:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
Uncompressed::~Uncompressed() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3629:25: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BloomFilterCompression::~BloomFilterCompression() noexcept {
                        ^                                  ~
                                                           = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3723:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
BloomFilterHeader::~BloomFilterHeader() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:3884:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PageHeader::~PageHeader() noexcept {
            ^                      ~
                                   = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:4137:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
KeyValue::~KeyValue() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:4254:16: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
SortingColumn::~SortingColumn() noexcept {
               ^                         ~
                                         = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:4392:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PageEncodingStats::~PageEncodingStats() noexcept {
                   ^                             ~
                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:4534:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnMetaData::~ColumnMetaData() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5008:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
EncryptionWithFooterKey::~EncryptionWithFooterKey() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5076:26: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
EncryptionWithColumnKey::~EncryptionWithColumnKey() noexcept {
                         ^                                   ~
                                                             = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5213:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnCryptoMetaData::~ColumnCryptoMetaData() noexcept {
                      ^                                ~
                                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5329:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnChunk::~ColumnChunk() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5600:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
RowGroup::~RowGroup() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5869:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TypeDefinedOrder::~TypeDefinedOrder() noexcept {
                  ^                            ~
                                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:5937:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnOrder::~ColumnOrder() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6031:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PageLocation::~PageLocation() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6169:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
OffsetIndex::~OffsetIndex() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6281:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
ColumnIndex::~ColumnIndex() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6549:11: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
AesGcmV1::~AesGcmV1() noexcept {
          ^                    ~
                               = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6687:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
AesGcmCtrV1::~AesGcmCtrV1() noexcept {
             ^                       ~
                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6825:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
EncryptionAlgorithm::~EncryptionAlgorithm() noexcept {
                     ^                               ~
                                                     = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:6941:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FileMetaData::~FileMetaData() noexcept {
              ^                        ~
                                       = default;
/root/starrocks/gensrc/build/gen_cpp/parquet_types.cpp:7295:21: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
FileCryptoMetaData::~FileCryptoMetaData() noexcept {
                    ^                              ~
                                                   = default;
[ 42%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/runtime_state.cpp.o
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:253:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  EditVersionPB* _this = reinterpret_cast< EditVersionPB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:394:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const EditVersionPB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:507:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeltaColumnGroupPB* _this = reinterpret_cast< DeltaColumnGroupPB* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:661:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeltaColumnGroupPB* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:754:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeltaColumnGroupListPB* _this = reinterpret_cast< DeltaColumnGroupListPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:899:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeltaColumnGroupListPB* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:1002:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PagePointerPB* _this = reinterpret_cast< PagePointerPB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:1160:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PagePointerPB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:1285:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PNetworkAddress* _this = reinterpret_cast< PNetworkAddress* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_common.pb.cc:1457:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PNetworkAddress* source =
        ^~~~~~~~~~~~~~~
        auto
[ 42%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc.o
[ 42%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/string_value.cpp.o
[ 42%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/decimalv2_value.cpp.o
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:973:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ZoneMapOfRowset* _this = reinterpret_cast< ZoneMapOfRowset* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:1155:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ZoneMapOfRowset* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:1269:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  FooterPointerPB* _this = reinterpret_cast< FooterPointerPB* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:1410:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const FooterPointerPB* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:1538:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RowsetTxnMetaPB* _this = reinterpret_cast< RowsetTxnMetaPB* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:1803:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RowsetTxnMetaPB* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:2072:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RowsetMetaPB* _this = reinterpret_cast< RowsetMetaPB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:2881:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RowsetMetaPB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:3108:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  AlterTabletPB* _this = reinterpret_cast< AlterTabletPB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:3299:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const AlterTabletPB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:3431:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  CompactionInfoPB* _this = reinterpret_cast< CompactionInfoPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:3611:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const CompactionInfoPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:3757:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  EditVersionMetaPB* _this = reinterpret_cast< EditVersionMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4076:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const EditVersionMetaPB* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4231:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletMetaOpPB* _this = reinterpret_cast< TabletMetaOpPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4405:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletMetaOpPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4509:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletMetaLogPB* _this = reinterpret_cast< TabletMetaLogPB* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4623:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletMetaLogPB* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4742:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletUpdatesPB* _this = reinterpret_cast< TabletUpdatesPB* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:4937:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletUpdatesPB* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:5061:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BinlogConfigPB* _this = reinterpret_cast< BinlogConfigPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:5242:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BinlogConfigPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:5478:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletMetaPB* _this = reinterpret_cast< TabletMetaPB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6059:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletMetaPB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6260:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  OLAPIndexHeaderMessage* _this = reinterpret_cast< OLAPIndexHeaderMessage* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6537:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const OLAPIndexHeaderMessage* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6661:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  OLAPDataHeaderMessage* _this = reinterpret_cast< OLAPDataHeaderMessage* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6772:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const OLAPDataHeaderMessage* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6869:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  OLAPRawDeltaHeaderMessage* _this = reinterpret_cast< OLAPRawDeltaHeaderMessage* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/olap_file.pb.cc:6980:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const OLAPRawDeltaHeaderMessage* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
[ 42%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/data.pb.cc.o
[ 43%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc.o
/root/starrocks/be/src/runtime/string_value.cpp:42:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(ptr, len);
           ^
/root/starrocks/be/src/runtime/string_value.cpp:46:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(ptr, len);
           ^
[ 43%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc.o
/root/starrocks/be/src/util/json.cpp:260:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return Slice(binary_);
           ^
[ 43%] Building CXX object src/util/CMakeFiles/Util.dir/json_converter.cpp.o
[ 43%] Building CXX object src/util/CMakeFiles/Util.dir/starrocks_metrics.cpp.o
/root/starrocks/be/src/runtime/decimalv2_value.cpp:287:29: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    if (_value == 0) return std::string(1, '0');
                            ^
[ 43%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/doris_internal_service.pb.cc.o
/root/starrocks/be/src/exprs/table_function/table_function_factory.cpp:71:5: warning: deleted member function should be public [modernize-use-equals-delete]
    TableFunctionResolver(const TableFunctionResolver&) = delete;
    ^
/root/starrocks/be/src/exprs/table_function/table_function_factory.cpp:72:34: warning: deleted member function should be public [modernize-use-equals-delete]
    const TableFunctionResolver& operator=(const TableFunctionResolver&) = delete;
                                 ^
[ 44%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/cast_expr.cpp.o
[ 44%] Building CXX object src/exec/CMakeFiles/Exec.dir/tablet_sink.cpp.o
[ 44%] Building CXX object src/exec/CMakeFiles/Exec.dir/mysql_scanner.cpp.o
[ 45%] Building CXX object src/storage/CMakeFiles/Storage.dir/primary_key_encoder.cpp.o
/root/starrocks/be/src/runtime/result_buffer_mgr.cpp:61:52: warning: prefer a lambda to std::bind [modernize-avoid-bind]
    _cancel_thread = std::make_unique<std::thread>(std::bind<void>(std::mem_fn(&ResultBufferMgr::cancel_thread), this));
                                                   ^
[ 45%] Building CXX object src/storage/CMakeFiles/Storage.dir/protobuf_file.cpp.o
/root/starrocks/be/src/exprs/array_functions.cpp:136:57: warning: the const qualified parameter 'array' is copied for each invocation; consider making it a reference [performance-unnecessary-value-param]
    static StatusOr<ColumnPtr> evaluate(const ColumnPtr array, const ColumnPtr element) {
                                                        ^
                                                       &
/root/starrocks/be/src/exprs/array_functions.cpp:136:80: warning: the const qualified parameter 'element' is copied for each invocation; consider making it a reference [performance-unnecessary-value-param]
    static StatusOr<ColumnPtr> evaluate(const ColumnPtr array, const ColumnPtr element) {
                                                                               ^
                                                                              &
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:326:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PSlotDescriptor* _this = reinterpret_cast< PSlotDescriptor* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:745:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PSlotDescriptor* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:904:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTupleDescriptor* _this = reinterpret_cast< PTupleDescriptor* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:1131:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTupleDescriptor* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:1260:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  POlapTableIndexSchema* _this = reinterpret_cast< POlapTableIndexSchema* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:1453:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const POlapTableIndexSchema* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:1594:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  POlapTableSchemaParam* _this = reinterpret_cast< POlapTableSchemaParam* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/descriptors.pb.cc:1865:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const POlapTableSchemaParam* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
[ 45%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset_update_state.cpp.o
[ 45%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset_column_update_state.cpp.o
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:386:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PQueryStatistics* _this = reinterpret_cast< PQueryStatistics* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:618:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PQueryStatistics* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:745:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  QueryStatisticsItemPB* _this = reinterpret_cast< QueryStatisticsItemPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:907:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const QueryStatisticsItemPB* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:1041:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PRowBatch* _this = reinterpret_cast< PRowBatch* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:1286:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PRowBatch* source =
        ^~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:1427:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ChunkExtraColumnsMetaPB* _this = reinterpret_cast< ChunkExtraColumnsMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:1588:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ChunkExtraColumnsMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:1736:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ChunkPB* _this = reinterpret_cast< ChunkPB* >(object);
  ^~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:2040:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    unsigned int count = static_cast<unsigned int>(this->_internal_is_nulls_size());
    ^~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:2049:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    unsigned int count = static_cast<unsigned int>(this->_internal_is_consts_size());
    ^~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:2130:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ChunkPB* source =
        ^~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:2340:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  SegmentPB* _this = reinterpret_cast< SegmentPB* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/data.pb.cc:2839:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const SegmentPB* source =
        ^~~~~~~~~
        auto
[ 45%] Building CXX object src/util/CMakeFiles/Util.dir/mem_info.cpp.o
[ 45%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/large_int_value.cpp.o
[ 45%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/fragment_mgr.cpp.o
[ 45%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/runtime_filter_cache_action.cpp.o
[ 45%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/query_cache_action.cpp.o
/root/starrocks/gensrc/build/gen_cpp/doris_internal_service.pb.cc:113:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PBackendService::~PBackendService() {}
                 ^                  ~~
                                    = default;
[ 45%] Building CXX object src/http/CMakeFiles/Webserver.dir/action/pipeline_blocking_drivers_action.cpp.o
[ 45%] Building CXX object src/storage/CMakeFiles/Storage.dir/update_compaction_state.cpp.o
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:2625:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitDataParams* _this = reinterpret_cast< PTransmitDataParams* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:2945:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitDataParams* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3068:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PHttpRequest* _this = reinterpret_cast< PHttpRequest* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3149:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PHttpRequest* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3304:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitChunkParams* _this = reinterpret_cast< PTransmitChunkParams* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3658:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitChunkParams* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3807:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitDataResult* _this = reinterpret_cast< PTransmitDataResult* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:3925:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitDataResult* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4043:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitChunkResult* _this = reinterpret_cast< PTransmitChunkResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4185:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitChunkResult* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4309:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitRuntimeFilterForwardTarget* _this = reinterpret_cast< PTransmitRuntimeFilterForwardTarget* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4484:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitRuntimeFilterForwardTarget* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4659:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitRuntimeFilterParams* _this = reinterpret_cast< PTransmitRuntimeFilterParams* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:4993:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitRuntimeFilterParams* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5144:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTransmitRuntimeFilterResult* _this = reinterpret_cast< PTransmitRuntimeFilterResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5262:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTransmitRuntimeFilterResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5375:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWithPartition* _this = reinterpret_cast< PTabletWithPartition* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5561:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWithPartition* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5688:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletInfo* _this = reinterpret_cast< PTabletInfo* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:5938:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletInfo* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:6166:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterOpenRequest* _this = reinterpret_cast< PTabletWriterOpenRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:6814:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterOpenRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:7019:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterOpenResult* _this = reinterpret_cast< PTabletWriterOpenResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:7156:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterOpenResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:7323:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddBatchRequest* _this = reinterpret_cast< PTabletWriterAddBatchRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:7648:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddBatchRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:7840:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddChunkRequest* _this = reinterpret_cast< PTabletWriterAddChunkRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:8199:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddChunkRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:8359:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddChunksRequest* _this = reinterpret_cast< PTabletWriterAddChunksRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:8527:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddChunksRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:8672:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddBatchResult* _this = reinterpret_cast< PTabletWriterAddBatchResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:8894:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddBatchResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:9066:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddSegmentRequest* _this = reinterpret_cast< PTabletWriterAddSegmentRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:9322:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddSegmentRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:9471:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterAddSegmentResult* _this = reinterpret_cast< PTabletWriterAddSegmentResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:9669:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterAddSegmentResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:9821:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterCancelRequest* _this = reinterpret_cast< PTabletWriterCancelRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10086:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterCancelRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10199:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletWriterCancelResult* _this = reinterpret_cast< PTabletWriterCancelResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10280:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletWriterCancelResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10361:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PExecPlanFragmentRequest* _this = reinterpret_cast< PExecPlanFragmentRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10442:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PExecPlanFragmentRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10557:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderOpenRequest* _this = reinterpret_cast< PTabletReaderOpenRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10724:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderOpenRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10850:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderOpenResult* _this = reinterpret_cast< PTabletReaderOpenResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:10968:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderOpenResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11079:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderCloseRequest* _this = reinterpret_cast< PTabletReaderCloseRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11197:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderCloseRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11308:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderCloseResult* _this = reinterpret_cast< PTabletReaderCloseResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11426:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderCloseResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11551:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderMultiGetRequest* _this = reinterpret_cast< PTabletReaderMultiGetRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11753:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderMultiGetRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:11904:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderMultiGetResult* _this = reinterpret_cast< PTabletReaderMultiGetResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12047:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    unsigned int count = static_cast<unsigned int>(this->_internal_found_size());
    ^~~~~~~~~~~~
    auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12083:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderMultiGetResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12219:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderScanOpenRequest* _this = reinterpret_cast< PTabletReaderScanOpenRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12396:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderScanOpenRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12551:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderScanOpenResult* _this = reinterpret_cast< PTabletReaderScanOpenResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12746:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderScanOpenResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:12890:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderScanGetNextRequest* _this = reinterpret_cast< PTabletReaderScanGetNextRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13057:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderScanGetNextRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13213:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTabletReaderScanGetNextResult* _this = reinterpret_cast< PTabletReaderScanGetNextResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13408:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTabletReaderScanGetNextResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13543:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PExecPlanFragmentResult* _this = reinterpret_cast< PExecPlanFragmentResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13659:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PExecPlanFragmentResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13749:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PExecBatchPlanFragmentsRequest* _this = reinterpret_cast< PExecBatchPlanFragmentsRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13830:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PExecBatchPlanFragmentsRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:13933:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PExecBatchPlanFragmentsResult* _this = reinterpret_cast< PExecBatchPlanFragmentsResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14051:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PExecBatchPlanFragmentsResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14196:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PCancelPlanFragmentRequest* _this = reinterpret_cast< PCancelPlanFragmentRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14391:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PCancelPlanFragmentRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14528:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PCancelPlanFragmentResult* _this = reinterpret_cast< PCancelPlanFragmentResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14644:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PCancelPlanFragmentResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14759:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PFetchDataRequest* _this = reinterpret_cast< PFetchDataRequest* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:14875:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PFetchDataRequest* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15020:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PFetchDataResult* _this = reinterpret_cast< PFetchDataResult* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15212:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PFetchDataResult* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15326:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTriggerProfileReportRequest* _this = reinterpret_cast< PTriggerProfileReportRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15440:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTriggerProfileReportRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15549:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTriggerProfileReportResult* _this = reinterpret_cast< PTriggerProfileReportResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15665:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTriggerProfileReportResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15761:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PCollectQueryStatisticsRequest* _this = reinterpret_cast< PCollectQueryStatisticsRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15875:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PCollectQueryStatisticsRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:15999:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PCollectQueryStatistics* _this = reinterpret_cast< PCollectQueryStatistics* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16208:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PCollectQueryStatistics* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16321:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PCollectQueryStatisticsResult* _this = reinterpret_cast< PCollectQueryStatisticsResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16435:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PCollectQueryStatisticsResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16545:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PStringPair* _this = reinterpret_cast< PStringPair* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16720:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PStringPair* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:16842:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaLoadInfo* _this = reinterpret_cast< PKafkaLoadInfo* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17045:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaLoadInfo* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17160:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaMetaProxyRequest* _this = reinterpret_cast< PKafkaMetaProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17278:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaMetaProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17387:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaOffsetProxyRequest* _this = reinterpret_cast< PKafkaOffsetProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17536:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaOffsetProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17630:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaOffsetBatchProxyRequest* _this = reinterpret_cast< PKafkaOffsetBatchProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17744:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaOffsetBatchProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:17881:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PProxyRequest* _this = reinterpret_cast< PProxyRequest* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18077:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PProxyRequest* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18192:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaMetaProxyResult* _this = reinterpret_cast< PKafkaMetaProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18309:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaMetaProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18398:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaOffsetProxyResult* _this = reinterpret_cast< PKafkaOffsetProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18577:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaOffsetProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18667:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PKafkaOffsetBatchProxyResult* _this = reinterpret_cast< PKafkaOffsetBatchProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18781:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PKafkaOffsetBatchProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:18934:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PProxyResult* _this = reinterpret_cast< PProxyResult* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19133:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PProxyResult* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19278:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarLoadInfo* _this = reinterpret_cast< PPulsarLoadInfo* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19517:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarLoadInfo* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19636:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarMetaProxyRequest* _this = reinterpret_cast< PPulsarMetaProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19754:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarMetaProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:19863:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarBacklogProxyRequest* _this = reinterpret_cast< PPulsarBacklogProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20016:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarBacklogProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20110:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarBacklogBatchProxyRequest* _this = reinterpret_cast< PPulsarBacklogBatchProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20224:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarBacklogBatchProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20361:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarProxyRequest* _this = reinterpret_cast< PPulsarProxyRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20557:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarProxyRequest* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20673:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarMetaProxyResult* _this = reinterpret_cast< PPulsarMetaProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20794:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarMetaProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:20882:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarBacklogProxyResult* _this = reinterpret_cast< PPulsarBacklogProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21034:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarBacklogProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21122:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarBacklogBatchProxyResult* _this = reinterpret_cast< PPulsarBacklogBatchProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21236:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarBacklogBatchProxyResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21389:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PPulsarProxyResult* _this = reinterpret_cast< PPulsarProxyResult* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21588:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PPulsarProxyResult* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21695:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PMVMaintenanceTaskRequest* _this = reinterpret_cast< PMVMaintenanceTaskRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21776:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PMVMaintenanceTaskRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21882:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PMVMaintenanceTaskResult* _this = reinterpret_cast< PMVMaintenanceTaskResult* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:21998:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PMVMaintenanceTaskResult* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:22111:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ExecuteCommandRequestPB* _this = reinterpret_cast< ExecuteCommandRequestPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:22269:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ExecuteCommandRequestPB* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:22394:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ExecuteCommandResultPB* _this = reinterpret_cast< ExecuteCommandResultPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:22547:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ExecuteCommandResultPB* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/internal_service.pb.cc:22613:19: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
PInternalService::~PInternalService() {}
                  ^                   ~~
                                      = default;
[ 45%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/types.pb.cc.o
[ 45%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/snapshot.pb.cc.o
[ 45%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/status.pb.cc.o
[ 45%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc.o
/root/starrocks/gensrc/build/gen_cpp/snapshot.pb.cc:186:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  SnapshotMetaFooterPB* _this = reinterpret_cast< SnapshotMetaFooterPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/snapshot.pb.cc:559:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const SnapshotMetaFooterPB* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:489:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PScalarType* _this = reinterpret_cast< PScalarType* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:671:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PScalarType* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:802:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PStructField* _this = reinterpret_cast< PStructField* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:957:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PStructField* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1081:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTypeNode* _this = reinterpret_cast< PTypeNode* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1248:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTypeNode* source =
        ^~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1356:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PTypeDesc* _this = reinterpret_cast< PTypeDesc* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1470:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PTypeDesc* source =
        ^~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1572:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PUniqueId* _this = reinterpret_cast< PUniqueId* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1730:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PUniqueId* source =
        ^~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1833:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TxnFinishStatePB* _this = reinterpret_cast< TxnFinishStatePB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:1981:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TxnFinishStatePB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2085:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeletePredicatePB* _this = reinterpret_cast< DeletePredicatePB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2315:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeletePredicatePB* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2430:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  InPredicatePB* _this = reinterpret_cast< InPredicatePB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2610:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const InPredicatePB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2739:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BinaryPredicatePB* _this = reinterpret_cast< BinaryPredicatePB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:2928:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BinaryPredicatePB* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:3043:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  IsNullPredicatePB* _this = reinterpret_cast< IsNullPredicatePB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/types.pb.cc:3188:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const IsNullPredicatePB* source =
        ^~~~~~~~~~~~~~~~~
        auto
[ 45%] Building CXX object src/exec/CMakeFiles/Exec.dir/es/es_predicate.cpp.o
[ 45%] Building CXX object src/util/CMakeFiles/Util.dir/metrics.cpp.o
/root/starrocks/be/src/formats/parquet/file_writer.cpp:183:32: warning: pass by value and use std::move [modernize-pass-by-value]
                               const std::vector<ExprContext*>& output_expr_ctxs)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               std::vector<ExprContext*> 
/root/starrocks/be/src/formats/parquet/file_writer.cpp:372:79: warning: pass by value and use std::move [modernize-pass-by-value]
AsyncFileWriter::AsyncFileWriter(std::unique_ptr<WritableFile> writable_file, std::string file_name,
                                                                              ^
/root/starrocks/be/src/formats/parquet/file_writer.cpp:378:22: warning: parameter 'file_name' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
          _file_name(file_name),
                     ^
                     std::move( )
/root/starrocks/be/src/formats/parquet/file_writer.cpp:413:104: warning: the parameter 'cb' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
                              std::function<void(starrocks::parquet::AsyncFileWriter*, RuntimeState*)> cb) {
                                                                                                       ^
                              const                                                                   &
[ 45%] Linking CXX static library ../../../output/tmp/RELEASE/libFormats.a
/root/starrocks/gensrc/build/gen_cpp/status.pb.cc:126:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  StatusPB* _this = reinterpret_cast< StatusPB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/status.pb.cc:272:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const StatusPB* source =
        ^~~~~~~~
        auto
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/es/es_scan_reader.cpp.o
[ 46%] Built target Formats
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/es/es_scroll_query.cpp.o
[ 46%] Building CXX object src/util/CMakeFiles/Util.dir/murmur_hash3.cpp.o
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/es/es_query_builder.cpp.o
[ 46%] Building CXX object src/storage/CMakeFiles/Storage.dir/version_graph.cpp.o
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:954:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  MetadataPairPB* _this = reinterpret_cast< MetadataPairPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1105:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const MetadataPairPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1225:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DataPageFooterPB* _this = reinterpret_cast< DataPageFooterPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1454:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DataPageFooterPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1579:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  IndexPageFooterPB* _this = reinterpret_cast< IndexPageFooterPB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1724:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const IndexPageFooterPB* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1829:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DictPageFooterPB* _this = reinterpret_cast< DictPageFooterPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:1946:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DictPageFooterPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:2059:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ShortKeyFooterPB* _this = reinterpret_cast< ShortKeyFooterPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:2284:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ShortKeyFooterPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:2466:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PageFooterPB* _this = reinterpret_cast< PageFooterPB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:2717:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PageFooterPB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:2863:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ZoneMapPB* _this = reinterpret_cast< ZoneMapPB* >(object);
  ^~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:3048:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ZoneMapPB* source =
        ^~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:3161:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  JsonMetaPB* _this = reinterpret_cast< JsonMetaPB* >(object);
  ^~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:3274:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const JsonMetaPB* source =
        ^~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:3436:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ColumnMetaPB* _this = reinterpret_cast< ColumnMetaPB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:3866:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ColumnMetaPB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:4058:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  SegmentFooterPB* _this = reinterpret_cast< SegmentFooterPB* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:4371:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const SegmentFooterPB* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:4523:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BTreeMetaPB* _this = reinterpret_cast< BTreeMetaPB* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:4663:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BTreeMetaPB* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:4818:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  IndexedColumnMetaPB* _this = reinterpret_cast< IndexedColumnMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5085:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const IndexedColumnMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5272:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ColumnIndexMetaPB* _this = reinterpret_cast< ColumnIndexMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5498:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ColumnIndexMetaPB* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5635:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  OrdinalIndexPB* _this = reinterpret_cast< OrdinalIndexPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5753:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const OrdinalIndexPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:5877:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ZoneMapIndexPB* _this = reinterpret_cast< ZoneMapIndexPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:6025:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ZoneMapIndexPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:6170:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BitmapIndexPB* _this = reinterpret_cast< BitmapIndexPB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:6366:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BitmapIndexPB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:6507:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BloomFilterIndexPB* _this = reinterpret_cast< BloomFilterIndexPB* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/segment.pb.cc:6682:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BloomFilterIndexPB* source =
        ^~~~~~~~~~~~~~~~~~
        auto
[ 46%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc.o
[ 46%] Building CXX object src/storage/CMakeFiles/Storage.dir/storage_engine.cpp.o
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/es/es_scroll_parser.cpp.o
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/local_file_writer.cpp.o
[ 46%] Building CXX object src/exec/CMakeFiles/Exec.dir/plain_text_builder.cpp.o
[ 46%] Building CXX object src/util/CMakeFiles/Util.dir/network_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:375:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  IndexSnapshotMetaPB* _this = reinterpret_cast< IndexSnapshotMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:548:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const IndexSnapshotMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:685:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  IndexWalMetaPB* _this = reinterpret_cast< IndexWalMetaPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:823:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const IndexWalMetaPB* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:938:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  MutableIndexMetaPB* _this = reinterpret_cast< MutableIndexMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1099:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const MutableIndexMetaPB* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1223:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ImmutableIndexShardMetaPB* _this = reinterpret_cast< ImmutableIndexShardMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1458:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ImmutableIndexShardMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1576:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ShardInfoPB* _this = reinterpret_cast< ShardInfoPB* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1725:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ShardInfoPB* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:1850:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ImmutableIndexMetaPB* _this = reinterpret_cast< ImmutableIndexMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:2061:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ImmutableIndexMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:2215:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PersistentIndexMetaPB* _this = reinterpret_cast< PersistentIndexMetaPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/persistent_index.pb.cc:2462:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PersistentIndexMetaPB* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
[ 46%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/tablet_schema.pb.cc.o
[ 46%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc.o
[ 46%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/cast_expr_array.cpp.o
[ 46%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/cast_expr_json.cpp.o
/root/starrocks/be/src/util/network_util.cpp:64:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(addr_buf);
           ^
[ 46%] Building CXX object src/util/CMakeFiles/Util.dir/parse_util.cpp.o
/root/starrocks/gensrc/build/gen_cpp/tablet_schema.pb.cc:334:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  ColumnPB* _this = reinterpret_cast< ColumnPB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/tablet_schema.pb.cc:881:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const ColumnPB* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/tablet_schema.pb.cc:1079:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletSchemaPB* _this = reinterpret_cast< TabletSchemaPB* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/tablet_schema.pb.cc:1431:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletSchemaPB* source =
        ^~~~~~~~~~~~~~
        auto
[ 46%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/cast_nested.cpp.o
[ 46%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/column_ref.cpp.o
[ 46%] Building CXX object src/util/CMakeFiles/Util.dir/path_builder.cpp.o
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:27:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:460:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:513:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DelvecPagePB* _this = reinterpret_cast< DelvecPagePB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:675:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DelvecPagePB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:801:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DelvecCacheKeyPB* _this = reinterpret_cast< DelvecCacheKeyPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:943:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DelvecCacheKeyPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1011:41: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
DelvecMetadataPB_DelvecsEntry_DoNotUse::DelvecMetadataPB_DelvecsEntry_DoNotUse() {}
                                        ^                                        ~~
                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1061:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DelvecMetadataPB* _this = reinterpret_cast< DelvecMetadataPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1155:7: warning: use range-based for loop instead [modernize-loop-convert]
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::starrocks::lake::DelvecPagePB >::const_iterator
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          (const auto & it : this->_internal_delvecs())
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1182:3: warning: use range-based for loop instead [modernize-loop-convert]
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::starrocks::lake::DelvecPagePB >::const_iterator
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (const auto & it : this->_internal_delvecs())
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1200:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DelvecMetadataPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1325:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RowsetMetadataPB* _this = reinterpret_cast< RowsetMetadataPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1567:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RowsetMetadataPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:1735:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletMetadataPB* _this = reinterpret_cast< TabletMetadataPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2000:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletMetadataPB* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2159:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TxnLogPB_OpWrite* _this = reinterpret_cast< TxnLogPB_OpWrite* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2377:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TxnLogPB_OpWrite* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2501:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TxnLogPB_OpCompaction* _this = reinterpret_cast< TxnLogPB_OpCompaction* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2650:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TxnLogPB_OpCompaction* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2773:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TxnLogPB_OpSchemaChange* _this = reinterpret_cast< TxnLogPB_OpSchemaChange* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:2966:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TxnLogPB_OpSchemaChange* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:3128:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TxnLogPB* _this = reinterpret_cast< TxnLogPB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:3349:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TxnLogPB* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:3465:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletMetadataLockPB* _this = reinterpret_cast< TabletMetadataLockPB* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_types.pb.cc:3546:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletMetadataLockPB* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
[ 47%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc.o
[ 47%] Building CXX object src/storage/CMakeFiles/Storage.dir/data_dir.cpp.o
[ 48%] Building CXX object src/util/CMakeFiles/Util.dir/runtime_profile.cpp.o
[ 48%] Building CXX object src/util/CMakeFiles/Util.dir/static_asserts.cpp.o
[ 48%] Building CXX object src/storage/CMakeFiles/Storage.dir/short_key_index.cpp.o
[ 48%] Building CXX object src/util/CMakeFiles/Util.dir/string_parser.cpp.o
[ 48%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc.o
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:26:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1075:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1129:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PublishVersionRequest* _this = reinterpret_cast< PublishVersionRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1332:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PublishVersionRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1404:56: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
PublishVersionResponse_CompactionScoresEntry_DoNotUse::PublishVersionResponse_CompactionScoresEntry_DoNotUse() {}
                                                       ^                                                       ~~
                                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1456:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PublishVersionResponse* _this = reinterpret_cast< PublishVersionResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1572:7: warning: use range-based for loop instead [modernize-loop-convert]
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, double >::const_iterator
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          (const auto & it : this->_internal_compaction_scores())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1608:3: warning: use range-based for loop instead [modernize-loop-convert]
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, double >::const_iterator
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (const auto & it : this->_internal_compaction_scores())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1626:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PublishVersionResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1715:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  AbortTxnRequest* _this = reinterpret_cast< AbortTxnRequest* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1863:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const AbortTxnRequest* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:1950:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  AbortTxnResponse* _this = reinterpret_cast< AbortTxnResponse* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2067:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const AbortTxnResponse* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2152:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeleteTabletRequest* _this = reinterpret_cast< DeleteTabletRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2269:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeleteTabletRequest* source =
        ^~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2354:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeleteTabletResponse* _this = reinterpret_cast< DeleteTabletResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2471:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeleteTabletResponse* source =
        ^~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2571:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  CompactRequest* _this = reinterpret_cast< CompactRequest* >(object);
  ^~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2743:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const CompactRequest* source =
        ^~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:2869:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  CompactResponse* _this = reinterpret_cast< CompactResponse* >(object);
  ^~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3104:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const CompactResponse* source =
        ^~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3220:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DropTableRequest* _this = reinterpret_cast< DropTableRequest* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3333:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DropTableRequest* source =
        ^~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3426:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DropTableResponse* _this = reinterpret_cast< DropTableResponse* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3539:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DropTableResponse* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3656:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeleteDataRequest* _this = reinterpret_cast< DeleteDataRequest* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3829:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeleteDataRequest* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:3934:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeleteDataResponse* _this = reinterpret_cast< DeleteDataResponse* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4051:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeleteDataResponse* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4149:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletStatRequest_TabletInfo* _this = reinterpret_cast< TabletStatRequest_TabletInfo* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4290:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletStatRequest_TabletInfo* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4391:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletStatRequest* _this = reinterpret_cast< TabletStatRequest* >(object);
  ^~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4505:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletStatRequest* source =
        ^~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4606:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletStatResponse_TabletStat* _this = reinterpret_cast< TabletStatResponse_TabletStat* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4768:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletStatResponse_TabletStat* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4872:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  TabletStatResponse* _this = reinterpret_cast< TabletStatResponse* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:4986:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const TabletStatResponse* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5086:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PublishLogVersionRequest* _this = reinterpret_cast< PublishLogVersionRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5258:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PublishLogVersionRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5360:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PublishLogVersionResponse* _this = reinterpret_cast< PublishLogVersionResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5477:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PublishLogVersionResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5578:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  LockTabletMetadataRequest* _this = reinterpret_cast< LockTabletMetadataRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5740:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const LockTabletMetadataRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5848:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  LockTabletMetadataResponse* _this = reinterpret_cast< LockTabletMetadataResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:5961:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const LockTabletMetadataResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6065:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  UnlockTabletMetadataRequest* _this = reinterpret_cast< UnlockTabletMetadataRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6227:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const UnlockTabletMetadataRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6335:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  UnlockTabletMetadataResponse* _this = reinterpret_cast< UnlockTabletMetadataResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6448:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const UnlockTabletMetadataResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6504:49: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
UploadSnapshotsRequest_SnapshotsEntry_DoNotUse::UploadSnapshotsRequest_SnapshotsEntry_DoNotUse() {}
                                                ^                                                ~~
                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6521:56: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
UploadSnapshotsRequest_BrokerPropertiesEntry_DoNotUse::UploadSnapshotsRequest_BrokerPropertiesEntry_DoNotUse() {}
                                                       ^                                                       ~~
                                                                                                               = default;
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6585:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  UploadSnapshotsRequest* _this = reinterpret_cast< UploadSnapshotsRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6710:7: warning: use range-based for loop instead [modernize-loop-convert]
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::starrocks::lake::Snapshot >::const_iterator
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          (const auto & it : this->_internal_snapshots())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6765:7: warning: use range-based for loop instead [modernize-loop-convert]
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          (const auto & it : this->_internal_broker_properties())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6793:3: warning: use range-based for loop instead [modernize-loop-convert]
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::starrocks::lake::Snapshot >::const_iterator
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (const auto & it : this->_internal_snapshots())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6802:3: warning: use range-based for loop instead [modernize-loop-convert]
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (const auto & it : this->_internal_broker_properties())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6828:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const UploadSnapshotsRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:6925:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  UploadSnapshotsResponse* _this = reinterpret_cast< UploadSnapshotsResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7038:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const UploadSnapshotsResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7142:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  Snapshot* _this = reinterpret_cast< Snapshot* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7289:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const Snapshot* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7401:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RestoreInfo* _this = reinterpret_cast< RestoreInfo* >(object);
  ^~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7548:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RestoreInfo* source =
        ^~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7612:57: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
RestoreSnapshotsRequest_BrokerPropertiesEntry_DoNotUse::RestoreSnapshotsRequest_BrokerPropertiesEntry_DoNotUse() {}
                                                        ^                                                        ~~
                                                                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7676:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RestoreSnapshotsRequest* _this = reinterpret_cast< RestoreSnapshotsRequest* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7833:7: warning: use range-based for loop instead [modernize-loop-convert]
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          (const auto & it : this->_internal_broker_properties())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7868:3: warning: use range-based for loop instead [modernize-loop-convert]
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (const auto & it : this->_internal_broker_properties())
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7894:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RestoreSnapshotsRequest* source =
        ^~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:7991:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  RestoreSnapshotsResponse* _this = reinterpret_cast< RestoreSnapshotsResponse* >(object);
  ^~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:8104:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const RestoreSnapshotsResponse* source =
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/lake_service.pb.cc:8160:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
LakeService::~LakeService() {}
             ^              ~~
                            = default;
[ 48%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/load_path_mgr.cpp.o
[ 48%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/types.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/mem_tracker.cpp.o
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:477:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  FileIdPB* _this = reinterpret_cast< FileIdPB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:618:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const FileIdPB* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:746:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  InsertRangePB* _this = reinterpret_cast< InsertRangePB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:913:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const InsertRangePB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1058:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  UpdatePB* _this = reinterpret_cast< UpdatePB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1253:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const UpdatePB* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1382:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  DeletePB* _this = reinterpret_cast< DeletePB* >(object);
  ^~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1524:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const DeletePB* source =
        ^~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1675:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  LogEntryPB* _this = reinterpret_cast< LogEntryPB* >(object);
  ^~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1875:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const LogEntryPB* source =
        ^~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:1982:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PageContentPB* _this = reinterpret_cast< PageContentPB* >(object);
  ^~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2096:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PageContentPB* source =
        ^~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2223:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  PageHeaderPB* _this = reinterpret_cast< PageHeaderPB* >(object);
  ^~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2597:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const PageHeaderPB* source =
        ^~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2734:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BinlogFileHeaderPB* _this = reinterpret_cast< BinlogFileHeaderPB* >(object);
  ^~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2847:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BinlogFileHeaderPB* source =
        ^~~~~~~~~~~~~~~~~~
        auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:2971:3: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  BinlogFileMetaPB* _this = reinterpret_cast< BinlogFileMetaPB* >(object);
  ^~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/binlog.pb.cc:3291:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
  const BinlogFileMetaPB* source =
        ^~~~~~~~~~~~~~~~
        auto
[ 49%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/opcode/builtin_functions.cpp.o
[ 49%] Building CXX object src/util/CMakeFiles/Util.dir/thrift_util.cpp.o
[ 49%] Building CXX object src/util/CMakeFiles/Util.dir/thrift_client.cpp.o
[ 49%] Building CXX object src/util/CMakeFiles/Util.dir/thrift_server.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/data_stream_recvr.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/export_sink.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/load_channel_mgr.cpp.o
/root/starrocks/be/src/runtime/types.cpp:152:9: warning: use range-based for loop instead [modernize-loop-convert]
        for (size_t i = 0; i < field_names.size(); i++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (const auto & field_name : field_names)
[ 49%] Building CXX object src/util/CMakeFiles/Util.dir/stack_util.cpp.o
/root/starrocks/be/src/storage/rowset_update_state.cpp:434:9: warning: use range-based for loop instead [modernize-loop-convert]
        for (int i = 0; i < idxes.size(); ++i) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (unsigned int & idxe : idxes)
/root/starrocks/be/src/storage/rowset_update_state.cpp:605:9: warning: use range-based for loop instead [modernize-loop-convert]
        for (size_t col_idx = 0; col_idx < _partial_update_states[segment_id].write_columns.size(); col_idx++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (auto & write_column : _partial_update_states[segment_id].write_columns)
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/load_channel.cpp.o
[ 49%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregator.cpp.o
[ 49%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorted_streaming_aggregator.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/local_tablets_channel.cpp.o
[ 49%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/snapshot_loader.cpp.o
[ 49%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/agg_hash_variant.cpp.o
[ 49%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp.o
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:316:55: warning: the parameter 'tschema' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
        Rowset* rowset, std::shared_ptr<TabletSchema> tschema, uint32_t rssid, int64_t ver) {
                                                      ^
                        const                        &
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:330:60: warning: the parameter 'iter' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
static Status read_chunk_from_update_file(ChunkIteratorPtr iter, ChunkPtr result_chunk) {
                                                           ^
                                          const           &
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:330:75: warning: the parameter 'result_chunk' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
static Status read_chunk_from_update_file(ChunkIteratorPtr iter, ChunkPtr result_chunk) {
                                                                          ^
                                                                 const   &
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:429:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            uint32_t rssid = (uint32_t)(each.first >> 32);
            ^~~~~~~~
            auto
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:430:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            uint32_t rowid = (uint32_t)(each.first & ROWID_MASK);
            ^~~~~~~~
            auto
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:106:36: warning: moving a temporary object prevents copy elision [-Wpessimizing-move]
        _update_chunk_cache[idx] = std::move(ChunkHelper::new_chunk(update_schema, DEFAULT_CONTAINER_SIZE));
                                   ^
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:106:36: note: remove std::move call here
        _update_chunk_cache[idx] = std::move(ChunkHelper::new_chunk(update_schema, DEFAULT_CONTAINER_SIZE));
                                   ^~~~~~~~~~                                                             ~
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:110:36: warning: moving a temporary object prevents copy elision [-Wpessimizing-move]
        _update_chunk_cache[idx] = std::move(ChunkHelper::new_chunk(update_schema, 0));
                                   ^
/root/starrocks/be/src/storage/rowset_column_update_state.cpp:110:36: note: remove std::move call here
        _update_chunk_cache[idx] = std::move(ChunkHelper::new_chunk(update_schema, 0));
                                   ^~~~~~~~~~                                        ~
2 warnings generated.
[ 49%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_constants.cpp.o
[ 49%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/version.cpp.o
[ 49%] Building CXX object src/storage/CMakeFiles/Storage.dir/snapshot_manager.cpp.o
[ 49%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/aggregate_base_node.cpp.o
[ 50%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/aggregate_blocking_node.cpp.o
[ 50%] Building CXX object src/util/CMakeFiles/Util.dir/system_metrics.cpp.o
[ 50%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_constants.cpp.o
[ 50%] Building CXX object src/util/CMakeFiles/Util.dir/url_parser.cpp.o
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_constants.cpp:13:25: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
RuntimeFilterConstants::RuntimeFilterConstants() {
                        ^                        ~
                                                 = default;
[ 50%] Building CXX object src/util/CMakeFiles/Util.dir/url_coding.cpp.o
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:34:224: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TRuntimeFilterBuildJoinMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTRuntimeFilterBuildJoinModeValues, _kTRuntimeFilterBuildJoinModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                               ^~~~
                                                                                                                                                                                                                               nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:34:230: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TRuntimeFilterBuildJoinMode_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(7, _kTRuntimeFilterBuildJoinModeValues, _kTRuntimeFilterBuildJoinModeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                                     ^~~~
                                                                                                                                                                                                                                     nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:37:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TRuntimeFilterBuildJoinMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:47:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TRuntimeFilterBuildJoinMode_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:49:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:63:212: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TRuntimeFilterBuildType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTRuntimeFilterBuildTypeValues, _kTRuntimeFilterBuildTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                   ^~~~
                                                                                                                                                                                                                   nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:63:218: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TRuntimeFilterBuildType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(2, _kTRuntimeFilterBuildTypeValues, _kTRuntimeFilterBuildTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                                                         ^~~~
                                                                                                                                                                                                                         nullptr
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:66:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TRuntimeFilterBuildType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:76:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TRuntimeFilterBuildType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:78:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:85:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeFilterDescription::~TRuntimeFilterDescription() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:639:29: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeFilterProberParams::~TRuntimeFilterProberParams() noexcept {
                            ^                                      ~
                                                                   = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:755:28: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeFilterDestination::~TRuntimeFilterDestination() noexcept {
                           ^                                     ~
                                                                 = default;
/root/starrocks/gensrc/build/gen_cpp/RuntimeFilter_types.cpp:891:23: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TRuntimeFilterParams::~TRuntimeFilterParams() noexcept {
                      ^                                ~
                                                       = default;
[ 51%] Building CXX object src/util/CMakeFiles/Util.dir/mysql_row_buffer.cpp.o
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/distinct_blocking_node.cpp.o
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/aggregate_streaming_node.cpp.o
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_constants.cpp:13:30: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
CloudConfigurationConstants::CloudConfigurationConstants() {
                             ^                             ~
                                                           = default;
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/aggregate/distinct_streaming_node.cpp.o
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/partition/chunks_partitioner.cpp.o
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/partition/partition_hash_variant.cpp.o
/root/starrocks/be/src/storage/persistent_index.cpp:2174:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < keys_info.key_infos.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & key_info : keys_info.key_infos)
/root/starrocks/be/src/storage/persistent_index.cpp:3301:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < l1_kvs.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & l1_kv : l1_kvs)
/root/starrocks/be/src/storage/persistent_index.cpp:3333:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < l1_kvs.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & l1_kv : l1_kvs)
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/analytic_node.cpp.o
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/analytor.cpp.o
/root/starrocks/be/src/exprs/cast_expr.cpp:1182:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf, len);
           ^
/root/starrocks/be/src/exprs/cast_expr.cpp:1191:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf, len);
           ^
[ 51%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/placeholder_ref.cpp.o
/root/starrocks/be/src/runtime/fragment_mgr.cpp:173:31: warning: prefer a lambda to std::bind [modernize-avoid-bind]
          _executor(exec_env, std::bind<void>(std::mem_fn(&FragmentExecState::coordinator_callback), this,
                              ^
[ 51%] Building CXX object src/exec/CMakeFiles/Exec.dir/csv_scanner.cpp.o
[ 52%] Building CXX object src/storage/CMakeFiles/Storage.dir/snapshot_meta.cpp.o
[ 52%] Linking CXX static library ../../../output/tmp/RELEASE/libWebserver.a
[ 52%] Built target Webserver
[ 52%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/dictmapping_expr.cpp.o
[ 52%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/compound_predicate.cpp.o
[ 52%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/condition_expr.cpp.o
[ 52%] Building CXX object src/util/CMakeFiles/Util.dir/error_util.cc.o
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/tablet_scanner.cpp.o
[ 53%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/query_statistics.cpp.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/spinlock.cc.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/file_util.cpp.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/filesystem_util.cc.o
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/olap_scan_node.cpp.o
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/olap_scan_prepare.cpp.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/time.cpp.o
[ 53%] Building CXX object src/gen_cpp/CMakeFiles/StarRocksGen.dir/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp.o
/root/starrocks/be/src/util/time.cpp:51:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(buf);
           ^
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/meta_scan_node.cpp.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/cidr.cpp.o
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:26:173: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCloudType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTCloudTypeValues, _kTCloudTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                            ^~~~
                                                                                                                                                                            nullptr
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:26:179: warning: use nullptr [modernize-use-nullptr]
const std::map<int, const char*> _TCloudType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(3, _kTCloudTypeValues, _kTCloudTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));
                                                                                                                                                                                  ^~~~
                                                                                                                                                                                  nullptr
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:29:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCloudType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:39:3: warning: use auto when declaring iterators [modernize-use-auto]
  std::map<int, const char*>::const_iterator it = _TCloudType_VALUES_TO_NAMES.find(val);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:41:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(it->second);
           ^
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:48:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCloudProperty::~TCloudProperty() noexcept {
                ^                          ~
                                           = default;
/root/starrocks/gensrc/build/gen_cpp/CloudConfiguration_types.cpp:163:22: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TCloudConfiguration::~TCloudConfiguration() noexcept {
                     ^                               ~
                                                     = default;
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/core_local.cpp.o
[ 53%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet.cpp.o
[ 53%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/message_body_sink.cpp.o
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/uid_util.cpp.o
/root/starrocks/be/src/exec/tablet_sink.cpp:78:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::stream_load
/root/starrocks/be/src/exec/tablet_sink.cpp:1237:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return Status(result.status);
           ^
[ 53%] Building CXX object src/util/CMakeFiles/Util.dir/aes_util.cpp.o
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/olap_meta_scanner.cpp.o
[ 53%] Building CXX object src/exec/CMakeFiles/Exec.dir/olap_meta_scan_node.cpp.o
[ 54%] Building CXX object src/util/CMakeFiles/Util.dir/string_util.cpp.o
[ 54%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/encryption_functions.cpp.o
[ 55%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/es_functions.cpp.o
[ 55%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_manager.cpp.o
[ 55%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/find_in_set.cpp.o
[ 55%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/stream_load/transaction_mgr.cpp.o
[ 56%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/stream_load/stream_load_context.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/md5.cpp.o
/root/starrocks/be/src/exec/csv_scanner.cpp:170:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        AdaptiveNullableColumn* adaptive_column =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/thrift_rpc_helper.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/faststring.cc.o
[ 56%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/stream_load/stream_load_executor.cpp.o
[ 56%] Building CXX object src/exec/CMakeFiles/Exec.dir/lake_meta_scanner.cpp.o
/root/starrocks/be/src/runtime/local_tablets_channel.cpp:356:94: warning: the parameter 'context' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
                                          std::shared_ptr<LocalTabletsChannel::WriteContext> context) {
                                                                                             ^
                                          const                                             &
[ 56%] Building CXX object src/exec/CMakeFiles/Exec.dir/lake_meta_scan_node.cpp.o
[ 56%] Building CXX object src/exec/CMakeFiles/Exec.dir/hash_joiner.cpp.o
[ 56%] Building CXX object src/exec/CMakeFiles/Exec.dir/hash_join_node.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/function_call_expr.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/function_helper.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/geo_functions.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/slice.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/grouping_sets_functions.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/hyperloglog_functions.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/sm3.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/frame_of_reference_coding.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/in_const_predicate.cpp.o
[ 56%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/info_func.cpp.o
[ 56%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/stream_load/stream_load_pipe.cpp.o
/root/starrocks/be/src/storage/tablet.cpp:990:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return TabletInfo(tablet_id(), schema_hash(), tablet_uid());
           ^
/root/starrocks/be/src/storage/tablet.cpp:1408:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string();
           ^~~~~~~~
           {}
[ 56%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/routine_load/data_consumer.cpp.o
[ 56%] Building CXX object src/util/CMakeFiles/Util.dir/utf8_check.cpp.o
[ 56%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/routine_load/data_consumer_group.cpp.o
[ 57%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/in_predicate.cpp.o
[ 57%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/is_null_predicate.cpp.o
[ 57%] Building CXX object src/util/CMakeFiles/Util.dir/path_util.cpp.o
[ 57%] Building CXX object src/util/CMakeFiles/Util.dir/monotime.cpp.o
[ 58%] Building CXX object src/exec/CMakeFiles/Exec.dir/hash_join_components.cpp.o
[ 58%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/routine_load/data_consumer_pool.cpp.o
/root/starrocks/be/src/util/monotime.cpp:77:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf);
           ^
/root/starrocks/be/src/util/monotime.cpp:196:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf);
           ^
[ 58%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/json_functions.cpp.o
[ 58%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_meta.cpp.o
[ 58%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/routine_load/routine_load_task_executor.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/thread.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/threadpool.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/trace.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/trace_metrics.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/timezone_utils.cpp.o
/root/starrocks/be/src/util/trace.cpp:46:8: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
Trace::Trace()
       ^
[ 59%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/jsonpath.cpp.o
[ 59%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/like_predicate.cpp.o
[ 59%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/literal.cpp.o
[ 59%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_meta_manager.cpp.o
[ 59%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_schema.cpp.o
[ 59%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_schema_map.cpp.o
[ 59%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_updates.cpp.o
[ 59%] Building CXX object src/util/CMakeFiles/Util.dir/easy_json.cc.o
[ 59%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/locate.cpp.o
[ 59%] Building CXX object src/storage/CMakeFiles/Storage.dir/txn_manager.cpp.o
[ 60%] Building CXX object src/storage/CMakeFiles/Storage.dir/types.cpp.o
[ 60%] Building CXX object src/storage/CMakeFiles/Storage.dir/update_manager.cpp.o
[ 60%] Building CXX object src/storage/CMakeFiles/Storage.dir/utils.cpp.o
[ 60%] Building CXX object src/exec/CMakeFiles/Exec.dir/join_hash_map.cpp.o
[ 60%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/small_file_mgr.cpp.o
[ 60%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/record_batch_queue.cpp.o
/root/starrocks/be/src/util/thread.cpp:137:5: warning: deleted member function should be public [modernize-use-equals-delete]
    ThreadMgr(const ThreadMgr&) = delete;
    ^
/root/starrocks/be/src/util/thread.cpp:138:22: warning: deleted member function should be public [modernize-use-equals-delete]
    const ThreadMgr& operator=(const ThreadMgr&) = delete;
                     ^
[ 60%] Building CXX object src/util/CMakeFiles/Util.dir/mustache/mustache.cc.o
[ 60%] Building CXX object src/util/CMakeFiles/Util.dir/int96.cpp.o
[ 60%] Building CXX object src/util/CMakeFiles/Util.dir/hdfs_util.cpp.o
[ 61%] Building CXX object src/util/CMakeFiles/Util.dir/gc_helper.cpp.o
[ 61%] Building CXX object src/util/CMakeFiles/Util.dir/gc_helper_smoothstep.cpp.o
[ 61%] Building CXX object src/exec/CMakeFiles/Exec.dir/topn_node.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/compaction_utils.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/array_column_iterator.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/array_column_writer.cpp.o
[ 61%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/map_element_expr.cpp.o
/root/starrocks/be/src/runtime/routine_load/data_consumer_group.cpp:121:33: warning: use nullptr [modernize-use-nullptr]
        sconf = serdes_conf_new(NULL, 0, "schema.registry.url", ctx->kafka_info->confluent_schema_registry_url.c_str(),
                                ^~~~
                                nullptr
[ 61%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/map_functions.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/binary_plain_page.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bitmap_index_reader.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bitmap_index_writer.cpp.o
[ 61%] Building CXX object src/util/CMakeFiles/Util.dir/sha.cpp.o
/root/starrocks/be/src/storage/types.cpp:256:5: warning: deleted member function should be public [modernize-use-equals-delete]
    ScalarTypeInfoResolver(const ScalarTypeInfoResolver&) = delete;
    ^
/root/starrocks/be/src/storage/types.cpp:257:35: warning: deleted member function should be public [modernize-use-equals-delete]
    const ScalarTypeInfoResolver& operator=(const ScalarTypeInfoResolver&) = delete;
                                  ^
/root/starrocks/be/src/storage/types.cpp:364:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:385:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:402:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:418:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:434:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:520:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:566:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:591:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
/root/starrocks/be/src/storage/types.cpp:838:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return std::string(buf);
               ^
[ 61%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/struct_functions.cpp.o
[ 61%] Building CXX object src/exec/CMakeFiles/Exec.dir/chunks_sorter.cpp.o
[ 61%] Building CXX object src/util/CMakeFiles/Util.dir/lru_cache.cpp.o
/root/starrocks/be/src/exprs/locate.cpp:33:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return SearcherInBigHaystack(needle_data, needle_size, haystack_size_hint);
               ^
/root/starrocks/be/src/exprs/locate.cpp:37:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return SearcherInSmallHaystack(needle_data, needle_size);
               ^
[ 61%] Building CXX object src/exec/CMakeFiles/Exec.dir/chunks_sorter_heap_sort.cpp.o
[ 61%] Building CXX object src/exec/CMakeFiles/Exec.dir/chunks_sorter_topn.cpp.o
[ 61%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bitshuffle_page.cpp.o
[ 62%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bitshuffle_wrapper.cpp.o
[ 62%] Building CXX object src/util/CMakeFiles/Util.dir/tdigest.cpp.o
[ 62%] Building CXX object src/exec/CMakeFiles/Exec.dir/chunks_sorter_full_sort.cpp.o
[ 62%] Building CXX object src/exec/CMakeFiles/Exec.dir/spillable_chunks_sorter_full_sort.cpp.o
[ 62%] Building CXX object src/util/CMakeFiles/Util.dir/debug/query_trace_impl.cpp.o
[ 63%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/result_queue_mgr.cpp.o
[ 63%] Building CXX object src/exec/CMakeFiles/Exec.dir/cross_join_node.cpp.o
[ 63%] Building CXX object src/exec/CMakeFiles/Exec.dir/union_node.cpp.o
[ 64%] Building CXX object src/exec/CMakeFiles/Exec.dir/except_hash_set.cpp.o
/root/starrocks/be/src/exprs/map_functions.cpp:246:83: warning: the const qualified parameter 'raw_filter' is copied for each invocation; consider making it a reference [performance-unnecessary-value-param]
void MapFunctions::_filter_map_items(const MapColumn* src_column, const ColumnPtr raw_filter, MapColumn* dest_column,
                                                                                  ^
                                                                                 &
[ 64%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/memory_scratch_sink.cpp.o
[ 64%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/external_scan_context_mgr.cpp.o
[ 64%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/mysql_result_writer.cpp.o
[ 64%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/file_result_writer.cpp.o
/root/starrocks/be/src/storage/tablet_meta_manager.cpp:459:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf.GetString());
           ^
[ 64%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/statistic_result_writer.cpp.o
[ 65%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/math_functions.cpp.o
[ 65%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/percentile_functions.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/except_node.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/file_scanner.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/orc_scanner.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/jni_scanner.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/arrow_to_starrocks_converter.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/arrow_to_json_converter.cpp.o
[ 65%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/variable_result_writer.cpp.o
/root/starrocks/be/src/storage/tablet_updates.cpp:1373:16: warning: constness of 'status' prevents automatic move [performance-no-automatic-move]
        return status;
               ^
/root/starrocks/be/src/storage/tablet_updates.cpp:3557:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        AutoIncrementPartialUpdateState* auto_increment_state = (AutoIncrementPartialUpdateState*)state;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/column_iterator.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/column_reader.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/column_writer.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/parquet_scanner.cpp.o
[ 65%] Building CXX object src/exec/CMakeFiles/Exec.dir/parquet_reader.cpp.o
/root/starrocks/be/src/exprs/math_functions.cpp:224:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(result + index, max_bits - index);
           ^
/root/starrocks/be/src/exprs/math_functions.cpp:428:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(buf + max_digits - result_len, result_len);
           ^
/root/starrocks/be/src/exprs/math_functions.cpp:718:44: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        context->set_function_state(scope, reinterpret_cast<void*>(seed));
                                           ^
/root/starrocks/be/src/exprs/math_functions.cpp:733:13: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
    state = reinterpret_cast<void*>(res);
            ^
[ 65%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/runtime_filter_bank.cpp.o
[ 65%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/runtime_filter.cpp.o
[ 65%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/split.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/column_decoder.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/default_value_column_iterator.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/dictcode_column_iterator.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/encoding_info.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/scalar_column_iterator.cpp.o
[ 65%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/index_page.cpp.o
[ 66%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/indexed_column_reader.cpp.o
[ 66%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/memory/system_allocator.cpp.o
[ 66%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/split_part.cpp.o
[ 66%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/string_functions.cpp.o
[ 66%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/time_functions.cpp.o
[ 66%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/utility_functions.cpp.o
[ 66%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/memory/mem_chunk_allocator.cpp.o
[ 66%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/chunk_cursor.cpp.o
[ 67%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/sorted_chunks_merger.cpp.o
[ 67%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/time_types.cpp.o
[ 67%] Linking CXX static library ../../../output/tmp/RELEASE/libUtil.a
[ 67%] Built target Util
[ 67%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/runtime_filter_worker.cpp.o
/root/starrocks/be/src/exec/chunks_sorter_heap_sort.cpp:75:43: warning: prefer a lambda to std::bind [modernize-avoid-bind]
                APPLY_FOR_ALL_SCALAR_TYPE(M)
                                          ^
[ 67%] Building CXX object src/exec/CMakeFiles/Exec.dir/parquet_writer.cpp.o
[ 67%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/java_udaf_function.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/agg/java_window_function.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/table_function/java_udtf_function.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/java_function_call_expr.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/lambda_function.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/array_map_expr.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/subfield_expr.cpp.o
[ 68%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/map_apply_expr.cpp.o
In file included from /root/starrocks/be/src/exec/spillable_chunks_sorter_full_sort.cpp:18:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
In file included from /root/starrocks/be/src/exec/spillable_chunks_sorter_full_sort.cpp:18:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:155:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, starrocks::spill::MemTrackerGuard &>' requested here
    RETURN_IF_ERROR(trigger_restore(state, std::forward<TaskExecutor>(executor), std::forward<MemGuard>(guard)));
                    ^
/root/starrocks/be/src/exec/spill/spiller.hpp:88:43: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::restore<starrocks::spill::IOTaskExecutor &, starrocks::spill::MemTrackerGuard &>' requested here
    ASSIGN_OR_RETURN(auto chunk, _reader->restore(state, executor, guard));
                                          ^
/root/starrocks/be/src/exec/spillable_chunks_sorter_full_sort.cpp:148:31: note: in instantiation of function template specialization 'starrocks::spill::Spiller::restore<starrocks::spill::IOTaskExecutor &, starrocks::spill::MemTrackerGuard>' requested here
    auto chunk_st = _spiller->restore(_state, io_executor(), spill::MemTrackerGuard(tls_mem_tracker));
                              ^
2 warnings generated.
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/parquet_builder.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/file_scan_node.cpp.o
/root/starrocks/be/src/runtime/external_scan_context_mgr.cpp:54:13: warning: prefer a lambda to std::bind [modernize-avoid-bind]
            std::bind<void>(std::mem_fn(&ExternalScanContextMgr::gc_expired_context), this));
            ^
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/assert_num_rows_node.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/intersect_hash_set.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/intersect_node.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/hdfs_scanner.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/hdfs_scanner_orc.cpp.o
[ 69%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/indexed_column_writer.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/hdfs_scanner_parquet.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/hdfs_scanner_text.cpp.o
[ 69%] Building CXX object src/exec/CMakeFiles/Exec.dir/json_scanner.cpp.o
/root/starrocks/be/src/exprs/string_functions.cpp:2071:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(result.data(), result_len);
           ^
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/json_parser.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/project_node.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/dict_decode_node.cpp.o
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/global_dict/decoder.cpp.o
/root/starrocks/be/src/exprs/lambda_function.cpp:69:13: warning: use range-based for loop instead [modernize-loop-convert]
            for (int arg_id = 0; arg_id < _arguments_ids.size(); ++arg_id) {
            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                (int _arguments_id : _arguments_ids)
/root/starrocks/be/src/exprs/lambda_function.cpp:75:17: warning: use range-based for loop instead [modernize-loop-convert]
                for (int arg_id = 0; arg_id < _common_sub_expr_ids.size(); ++arg_id) {
                ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    (int _common_sub_expr_id : _common_sub_expr_ids)
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/global_dict/parser.cpp.o
[ 70%] Building CXX object src/exprs/CMakeFiles/Exprs.dir/map_expr.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/map_column_writer.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/repeat_node.cpp.o
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/global_dict/miscs.cpp.o
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/global_dict/types.cpp.o
/root/starrocks/be/src/exprs/time_functions.cpp:1684:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(to, 8);
           ^
/root/starrocks/be/src/exprs/time_functions.cpp:1723:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(to, 7);
           ^
/root/starrocks/be/src/exprs/time_functions.cpp:1744:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(to, 6);
           ^
/root/starrocks/be/src/exprs/time_functions.cpp:1762:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(to, 4);
           ^
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/current_thread.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/table_function_node.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner.cpp.o
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/runtime_filter_cache.cpp.o
/root/starrocks/be/src/exec/json_parser.cpp:93:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(reinterpret_cast<char*>(_data) + off, _len - off);
           ^
/root/starrocks/be/src/exec/json_parser.cpp:177:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(reinterpret_cast<const char*>(_data) + off, _len - off);
           ^
[ 70%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/lake_tablets_channel.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/map_column_iterator.cpp.o
[ 70%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scan_node.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/struct_column_writer.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/struct_column_iterator.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/ordinal_page_index.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/page_io.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/binary_dict_page.cpp.o
[ 70%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/binary_prefix_page.cpp.o
[ 70%] Linking CXX static library ../../../output/tmp/RELEASE/libExprs.a
[ 71%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment.cpp.o
[ 71%] Built target Exprs
[ 71%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_writer.cpp.o
[ 71%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_rewriter.cpp.o
/root/starrocks/be/src/exec/json_scanner.cpp:292:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        AdaptiveNullableColumn* adaptive_column =
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
[ 71%] Building CXX object src/exec/CMakeFiles/Exec.dir/iceberg/iceberg_delete_builder.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/lake_snapshot_loader.cpp.o
[ 72%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_tables_scanner.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/profile_report_worker.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/schema_table_sink.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/command_executor.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/mysql_table_writer.cpp.o
[ 72%] Building CXX object src/runtime/CMakeFiles/Runtime.dir/mysql_table_sink.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_dummy_scanner.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_group.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/storage_page_decoder.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/block_split_bloom_filter.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_schemata_scanner.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_variables_scanner.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bloom_filter_index_reader.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bloom_filter_index_writer.cpp.o
/root/starrocks/be/src/exec/parquet_writer.cpp:27:54: warning: pass by value and use std::move [modernize-pass-by-value]
                                                     const std::vector<ExprContext*>& output_expr_ctxs,
                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                     std::vector<ExprContext*> 
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_columns_scanner.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_charsets_scanner.cpp.o
[ 73%] Linking CXX static library ../../../output/tmp/RELEASE/libStarRocksGen.a
[ 73%] Built target StarRocksGen
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_collations_scanner.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_statistics_scanner.cpp.o
[ 73%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/bloom_filter.cpp.o
[ 73%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_triggers_scanner.cpp.o
[ 74%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/parsed_page.cpp.o
[ 74%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_events_scanner.cpp.o
[ 74%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/zone_map_index.cpp.o
[ 74%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_chunk_iterator_adapter.cpp.o
[ 74%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_iterator.cpp.o
[ 74%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/segment_options.cpp.o
[ 74%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_views_scanner.cpp.o
[ 75%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_materialized_views_scanner.cpp.o
[ 75%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/rowid_range_option.cpp.o
[ 75%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_tasks_scanner.cpp.o
[ 75%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_task_runs_scanner.cpp.o
[ 75%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset/rowset_meta.cpp.o
[ 75%] Building CXX object src/storage/CMakeFiles/Storage.dir/task/engine_batch_load_task.cpp.o
[ 75%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_loads_scanner.cpp.o
[ 75%] Building CXX object src/storage/CMakeFiles/Storage.dir/task/engine_checksum_task.cpp.o
[ 75%] Building CXX object src/storage/CMakeFiles/Storage.dir/task/engine_clone_task.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/task/engine_storage_migration_task.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/task/engine_alter_tablet_task.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/aggregate_iterator.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/async_delta_writer.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/chunk_helper.cpp.o
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_load_tracking_logs_scanner.cpp.o
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_user_privileges_scanner.cpp.o
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_schema_privileges_scanner.cpp.o
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_table_privileges_scanner.cpp.o
/root/starrocks/be/src/runtime/schema_table_sink.cpp:81:44: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
    request.set_params(strings::Substitute("{\"name\":\"$0\",\"value\":\"$1\"}", name, value));
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                           R"({"name":"$0","value":"$1"})"
/root/starrocks/be/src/runtime/schema_table_sink.cpp:82:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    RefCountClosure<ExecuteCommandResultPB>* closure = new RefCountClosure<ExecuteCommandResultPB>();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
In file included from /root/starrocks/be/src/runtime/schema_table_sink.cpp:15:
/root/starrocks/be/src/runtime/schema_table_sink.h:59:9: warning: private field '_chunk_size' is not used [-Wunused-private-field]
    int _chunk_size;
        ^
1 warning generated.
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_tables_config_scanner.cpp.o
[ 76%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_metrics_scanner.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/chunk_iterator.cpp.o
[ 76%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_predicate_cmp.cpp.o
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_tablets_scanner.cpp.o
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_txns_scanner.cpp.o
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_configs_scanner.cpp.o
[ 77%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_in_predicate.cpp.o
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_threads_scanner.cpp.o
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_fe_tablet_schedules_scanner.cpp.o
[ 77%] Linking CXX static library ../../../output/tmp/RELEASE/libRuntime.a
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_be_compactions_scanner.cpp.o
[ 77%] Built target Runtime
[ 77%] Building CXX object src/exec/CMakeFiles/Exec.dir/schema_scanner/schema_helper.cpp.o
[ 77%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_not_in_predicate.cpp.o
[ 77%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_null_predicate.cpp.o
[ 78%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_or_predicate.cpp.o
[ 78%] Building CXX object src/exec/CMakeFiles/Exec.dir/jdbc_scanner.cpp.o
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:91:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice label = Slice(info.label);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:97:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice db = Slice(info.db);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:103:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice state = Slice(info.state);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:109:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice progress = Slice(info.progress);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:115:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice type = Slice(info.type);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:121:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice priority = Slice(info.priority);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:128:21: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                    Slice etl_info = Slice(info.etl_info);
                    ^~~~~
                    auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:137:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice task_info = Slice(info.task_info);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:203:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice job_details = Slice(info.job_details);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:210:21: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                    Slice error_msg = Slice(info.error_msg);
                    ^~~~~
                    auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:220:21: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                    Slice url = Slice(info.url);
                    ^~~~~
                    auto
/root/starrocks/be/src/exec/schema_scanner/schema_loads_scanner.cpp:230:21: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                    Slice sql = Slice(info.tracking_sql);
                    ^~~~~
                    auto
[ 78%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorting/compare_column.cpp.o
[ 78%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_expr_predicate.cpp.o
[ 78%] Building CXX object src/storage/CMakeFiles/Storage.dir/conjunctive_predicates.cpp.o
[ 78%] Building CXX object src/storage/CMakeFiles/Storage.dir/convert_helper.cpp.o
[ 78%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorting/merge_column.cpp.o
[ 78%] Building CXX object src/storage/CMakeFiles/Storage.dir/delete_predicates.cpp.o
[ 79%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorting/merge_cascade.cpp.o
[ 79%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorting/sort_column.cpp.o
/root/starrocks/be/src/exec/schema_scanner/schema_load_tracking_logs_scanner.cpp:84:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice label = Slice(info.label);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_load_tracking_logs_scanner.cpp:90:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice db = Slice(info.db);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_load_tracking_logs_scanner.cpp:112:21: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                    Slice msg = Slice(tracking_msg);
                    ^~~~~
                    auto
[ 79%] Building CXX object src/storage/CMakeFiles/Storage.dir/disjunctive_predicates.cpp.o
[ 79%] Building CXX object src/storage/CMakeFiles/Storage.dir/empty_iterator.cpp.o
[ 79%] Building CXX object src/storage/CMakeFiles/Storage.dir/merge_iterator.cpp.o
[ 79%] Building CXX object src/storage/CMakeFiles/Storage.dir/predicate_parser.cpp.o
[ 79%] Building CXX object src/storage/CMakeFiles/Storage.dir/projection_iterator.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/push_handler.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/sorting/sort_permute.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/connector_scan_node.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/row_source_mask.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/exchange_merge_sort_source_operator.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/exchange_sink_operator.cpp.o
/root/starrocks/be/src/exec/schema_scanner/schema_be_tablets_scanner.cpp:161:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice state = Slice(tablet_state_to_string((TabletState)info.state));
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_be_tablets_scanner.cpp:167:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice type = Slice(keys_type_to_string((KeysType)info.type));
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_be_tablets_scanner.cpp:172:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice type = Slice(info.data_dir);
                ^~~~~
                auto
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/schema_change.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/schema_change_utils.cpp.o
/root/starrocks/be/src/exec/schema_scanner/schema_helper.cpp:86:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return std::string(full_name.c_str() + found, full_name.size() - found);
           ^
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/exchange_source_operator.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/local_exchange.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_reader.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/tablet_reader_params.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/table_reader.cpp.o
[ 80%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/local_exchange_sink_operator.cpp.o
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:102:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice v = Slice(info.type);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:107:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice v = Slice(info.priority);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:112:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice v = Slice(info.state);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:117:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice v = Slice(info.tablet_status);
                ^~~~~
                auto
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:150:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                Slice v = Slice(info.error_msg);
                ^~~~~
                auto
In file included from /root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.cpp:15:
/root/starrocks/be/src/exec/schema_scanner/schema_fe_tablet_schedules_scanner.h:35:13: warning: private field '_be_id' is not used [-Wunused-private-field]
    int64_t _be_id{0};
            ^
1 warning generated.
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/meta_reader.cpp.o
[ 80%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake_meta_reader.cpp.o
[ 81%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/local_exchange_source_operator.cpp.o
[ 81%] Building CXX object src/storage/CMakeFiles/Storage.dir/olap_meta_reader.cpp.o
/root/starrocks/be/src/storage/task/engine_clone_task.cpp:436:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
        return Status(result.status);
               ^
/root/starrocks/be/src/storage/task/engine_clone_task.cpp:462:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return Status(result.status);
           ^
[ 82%] Building CXX object src/storage/CMakeFiles/Storage.dir/seek_tuple.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/multi_cast_local_exchange.cpp.o
[ 82%] Building CXX object src/storage/CMakeFiles/Storage.dir/union_iterator.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exchange/sink_buffer.cpp.o
[ 82%] Building CXX object src/storage/CMakeFiles/Storage.dir/unique_iterator.cpp.o
[ 82%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_aggregate_func.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/fragment_executor.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/operator.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/source_operator.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/limit_operator.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline_builder.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/project_operator.cpp.o
[ 82%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/dict_decode_operator.cpp.o
[ 83%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/result_sink_operator.cpp.o
[ 83%] Building CXX object src/storage/CMakeFiles/Storage.dir/chunk_aggregator.cpp.o
[ 83%] Building CXX object src/storage/CMakeFiles/Storage.dir/delta_writer.cpp.o
/root/starrocks/be/src/storage/tablet_reader.cpp:48:28: warning: pass by value and use std::move [modernize-pass-by-value]
                           const std::vector<RowsetSharedPtr>& captured_rowsets)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           std::vector<RowsetSharedPtr> 
[ 83%] Building CXX object src/storage/CMakeFiles/Storage.dir/memtable.cpp.o
[ 83%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/olap_table_sink_operator.cpp.o
[ 83%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/balanced_chunk_buffer.cpp.o
/root/starrocks/be/src/storage/olap_meta_reader.cpp:138:19: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
        for (auto seg : rowset->segments()) {
                  ^
             const  &
[ 83%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/chunk_source.cpp.o
[ 83%] Building CXX object src/storage/CMakeFiles/Storage.dir/base_compaction.cpp.o
[ 83%] Building CXX object src/storage/CMakeFiles/Storage.dir/cumulative_compaction.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/compaction.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/rowset_merger.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_predicate_rewriter.cpp.o
/root/starrocks/be/src/exec/pipeline/exchange/local_exchange.cpp:78:40: warning: pass by value and use std::move [modernize-pass-by-value]
                                       const std::vector<ExprContext*>& partition_expr_ctxs)
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                       std::vector<ExprContext*> 
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/column_predicate_dict_conjuct.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/compaction_task.cpp.o
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/morsel.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/compaction_manager.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/horizontal_compaction_task.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/vertical_compaction_task.cpp.o
/root/starrocks/be/src/storage/table_reader.cpp:32:14: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
TableReader::TableReader() {}
             ^             ~~
                           = default;
/root/starrocks/be/src/storage/table_reader.cpp:34:14: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
TableReader::~TableReader() {}
             ^              ~~
                            = default;
/root/starrocks/be/src/storage/table_reader.cpp:248:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < value_columns.size(); ++i) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & value_column : value_columns)
/root/starrocks/be/src/storage/table_reader.cpp:255:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    RefCountClosure<PTabletReaderMultiGetResult>* closure = new RefCountClosure<PTabletReaderMultiGetResult>();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/scan_operator.cpp.o
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_chunk_source.cpp.o
[ 84%] Building CXX object src/storage/CMakeFiles/Storage.dir/compaction_task_factory.cpp.o
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_scan_operator.cpp.o
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_scan_prepare_operator.cpp.o
[ 84%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_scan_context.cpp.o
[ 85%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/connector_scan_operator.cpp.o
[ 85%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/scan/stream_scan_operator.cpp.o
[ 85%] Building CXX object src/storage/CMakeFiles/Storage.dir/default_compaction_policy.cpp.o
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/size_tiered_compaction_policy.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/meta_chunk_source.cpp.o
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/cluster_id_mgr.cpp.o
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/push_utils.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/meta_scan_operator.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/meta_scan_prepare_operator.cpp.o
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/async_delta_writer.cpp.o
/root/starrocks/be/src/storage/compaction_manager.cpp:303:61: warning: the parameter 'tablet' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void CompactionManager::update_tablet_async(TabletSharedPtr tablet) {
                                                            ^
                                            const          &
/root/starrocks/be/src/storage/compaction_manager.cpp:317:55: warning: the parameter 'tablet' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void CompactionManager::update_tablet(TabletSharedPtr tablet) {
                                                      ^
                                      const          &
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_meta_scan_prepare_operator.cpp.o
/root/starrocks/be/src/exec/pipeline/exchange/sink_buffer.cpp:418:62: warning: use nullptr [modernize-use-nullptr]
        res.value()->transmit_chunk_via_http(&closure->cntl, NULL, &closure->result, closure);
                                                             ^~~~
                                                             nullptr
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/lake_meta_scan_prepare_operator.cpp.o
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/compaction_policy.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_schema_chunk_source.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_schema_scan_operator.cpp.o
[ 86%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/olap_schema_scan_context.cpp.o
/root/starrocks/be/src/storage/delta_writer.cpp:611:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (uint32_t i = 0; i < rss_rowids.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (unsigned long v : rss_rowids)
[ 86%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/horizontal_compaction_task.cpp.o
[ 87%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/scan/chunk_buffer_limiter.cpp.o
[ 87%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/delta_writer.cpp.o
[ 87%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sink/file_sink_operator.cpp.o
[ 87%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sink/export_sink_operator.cpp.o
[ 87%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/gc.cpp.o
/root/starrocks/be/src/storage/default_compaction_policy.cpp:123:15: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
    for (auto rowset : candidate_rowsets) {
              ^
         const  &
[ 87%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sink/mysql_table_sink_operator.cpp.o
/root/starrocks/be/src/storage/size_tiered_compaction_policy.cpp:180:15: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
    for (auto rowset : candidate_rowsets) {
              ^
         const  &
[ 87%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/general_tablet_writer.cpp.o
[ 87%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/pk_tablet_writer.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/rowset.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/schema_change.cpp.o
[ 88%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sink/memory_scratch_sink_operator.cpp.o
[ 88%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/select_operator.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/starlet_location_provider.cpp.o
[ 88%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/nljoin/nljoin_context.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/tablet.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/tablet_manager.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/tablet_reader.cpp.o
/root/starrocks/be/src/exec/stream/scan/stream_scan_operator.cpp:61:5: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
    StreamChunkSource* chunk_source = down_cast<StreamChunkSource*>(_chunk_sources[chunk_source_index].get());
    ^~~~~~~~~~~~~~~~~
    auto
/root/starrocks/be/src/exec/stream/scan/stream_scan_operator.cpp:213:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        StreamChunkSource* chunk_source = down_cast<StreamChunkSource*>(chunk_source_ptr.get());
        ^~~~~~~~~~~~~~~~~
        auto
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/metadata_iterator.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/spark_load.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/update_manager.cpp.o
[ 88%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/rowset_update_state.cpp.o
[ 89%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/meta_file.cpp.o
[ 89%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/lake_primary_index.cpp.o
[ 89%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/nljoin/nljoin_build_operator.cpp.o
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_operator.cpp:23:50: warning: pass by value and use std::move [modernize-pass-by-value]
                                                 std::shared_ptr<MetaScanContextFactory> ctx_factory)
                                                 ^
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_operator.cpp:24:65: warning: parameter 'ctx_factory' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : ScanOperatorFactory(id, meta_scan_node), _ctx_factory(ctx_factory) {}
                                                                ^
                                                                std::move( )
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_operator.cpp:38:62: warning: pass by value and use std::move [modernize-pass-by-value]
                                   ScanNode* meta_scan_node, MetaScanContextPtr ctx)
                                                             ^
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_operator.cpp:39:81: warning: parameter 'ctx' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : ScanOperator(factory, id, driver_sequence, dop, meta_scan_node), _ctx(ctx) {}
                                                                                ^
                                                                                std::move( )
[ 89%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_util.cpp.o
[ 89%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/nljoin/nljoin_probe_operator.cpp.o
[ 90%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/partition_sort_sink_operator.cpp.o
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_prepare_operator.cpp:29:50: warning: pass by value and use std::move [modernize-pass-by-value]
                                                 MetaScanContextPtr scan_ctx)
                                                 ^
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_prepare_operator.cpp:30:96: warning: parameter 'scan_ctx' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : SourceOperator(factory, id, operator_name, plan_node_id, driver_sequence), _scan_ctx(scan_ctx) {}
                                                                                               ^
                                                                                               std::move( )
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_prepare_operator.cpp:57:64: warning: pass by value and use std::move [modernize-pass-by-value]
                                                               std::shared_ptr<MetaScanContextFactory> scan_ctx_factory)
                                                               ^
/root/starrocks/be/src/exec/pipeline/scan/meta_scan_prepare_operator.cpp:58:85: warning: parameter 'scan_ctx_factory' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : SourceOperatorFactory(id, operator_name, plan_node_id), _scan_ctx_factory(scan_ctx_factory) {}
                                                                                    ^
                                                                                    std::move(      )
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_file_writer.cpp.o
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_file_reader.cpp.o
/root/starrocks/be/src/exec/pipeline/scan/olap_meta_scan_prepare_operator.cpp:28:35: warning: parameter 'scan_ctx' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
                                  scan_ctx),
                                  ^
                                  std::move( )
/root/starrocks/be/src/exec/pipeline/scan/olap_meta_scan_prepare_operator.cpp:47:86: warning: parameter 'scan_ctx_factory' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : MetaScanPrepareOperatorFactory(id, plan_node_id, "olap_meta_scan_prepare", scan_ctx_factory),
                                                                                     ^
                                                                                     std::move(      )
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_builder.cpp.o
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_manager.cpp.o
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/binlog_reader.cpp.o
/root/starrocks/be/src/exec/pipeline/scan/meta_chunk_source.cpp:23:53: warning: the parameter 'scan_ctx' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
                                 MetaScanContextPtr scan_ctx)
                                                    ^
                                 const             &
/root/starrocks/be/src/exec/pipeline/scan/meta_chunk_source.cpp:27:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
MetaChunkSource::~MetaChunkSource() {}
                 ^                  ~~
                                    = default;
[ 90%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/update_compaction_state.cpp.o
/root/starrocks/be/src/exec/pipeline/scan/lake_meta_scan_prepare_operator.cpp:28:35: warning: parameter 'scan_ctx' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
                                  scan_ctx),
                                  ^
                                  std::move( )
/root/starrocks/be/src/exec/pipeline/scan/lake_meta_scan_prepare_operator.cpp:47:86: warning: parameter 'scan_ctx_factory' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
        : MetaScanPrepareOperatorFactory(id, plan_node_id, "lake_meta_scan_prepare", scan_ctx_factory),
                                                                                     ^
                                                                                     std::move(      )
[ 91%] Building CXX object src/storage/CMakeFiles/Storage.dir/lake/txn_log_applier.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/local_partition_topn_sink.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/local_partition_topn_source.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/local_partition_topn_context.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/local_merge_sort_source_operator.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/spillable_partition_sort_sink_operator.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/sort/sort_context.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline_driver_executor.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline_driver_queue.cpp.o
[ 91%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline_driver_poller.cpp.o
/root/starrocks/be/src/storage/binlog_file_reader.cpp:27:59: warning: pass by value and use std::move [modernize-pass-by-value]
BinlogFileReader::BinlogFileReader(std::string file_name, std::shared_ptr<BinlogFileMetaPB> file_meta)
                                                          ^
/root/starrocks/be/src/storage/binlog_file_reader.cpp:29:22: warning: parameter 'file_meta' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
          _file_meta(file_meta),
                     ^
                     std::move( )
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline_driver.cpp.o
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/exec_state_reporter.cpp.o
/root/starrocks/be/src/storage/lake/meta_file.cpp:28:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/be/src/storage/lake/meta_file.cpp:43:50: warning: the parameter 'delvec' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void MetaFileBuilder::append_delvec(DelVectorPtr delvec, uint32_t segment_id) {
                                                 ^
                                    const       &
/root/starrocks/be/src/storage/lake/meta_file.cpp:78:37: warning: use emplace_back instead of push_back [modernize-use-emplace]
            delete_delvec_sid_range.push_back(std::make_pair(it->id(), it->id() + it->segments_size() - 1));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~                                             ~
                                    emplace_back
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/driver_limiter.cpp.o
/root/starrocks/be/src/storage/lake/lake_primary_index.cpp:21:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/fragment_context.cpp.o
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/query_context.cpp.o
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/stream_epoch_manager.cpp.o
/root/starrocks/be/src/storage/lake/rowset_update_state.cpp:31:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/be/src/storage/lake/rowset_update_state.cpp:332:14: warning: the variable 'dest_path' is copy-constructed from a const reference but is only used as const reference; consider making it a const reference [performance-unnecessary-copy-initialization]
        auto dest_path = op_write.rewrite_segments(i);
             ^
        const  &
/root/starrocks/be/src/storage/lake/rowset_update_state.cpp:335:25: warning: the variable 'partial_rowset_footer' is copy-constructed from a const reference but is only used as const reference; consider making it a const reference [performance-unnecessary-copy-initialization]
        FooterPointerPB partial_rowset_footer = txn_meta.partial_rowset_footers(i);
                        ^
        const          &
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/stream_pipeline_driver.cpp.o
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_blocking_sink_operator.cpp.o
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_blocking_source_operator.cpp.o
/root/starrocks/be/src/storage/lake/update_manager.cpp:30:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::lake
/root/starrocks/be/src/storage/lake/update_manager.cpp:187:10: warning: the variable 'tablet_column' is copy-constructed from a const reference but is only used as const reference; consider making it a const reference [performance-unnecessary-copy-initialization]
    auto tablet_column = tablet_schema.column(condition_column);
         ^
    const  &
[ 92%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_streaming_sink_operator.cpp.o
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_streaming_source_operator.cpp.o
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_distinct_blocking_sink_operator.cpp.o
/root/starrocks/be/src/storage/lake/update_compaction_state.cpp:32:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
CompactionState::~CompactionState() {}
                 ^                  ~~
                                    = default;
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_distinct_blocking_source_operator.cpp.o
/root/starrocks/be/src/storage/binlog_manager.cpp:29:66: warning: pass by value and use std::move [modernize-pass-by-value]
                             CompressionTypePB compression_type, std::shared_ptr<RowsetFetcher> rowset_fetcher)
                                                                 ^
/root/starrocks/be/src/storage/binlog_manager.cpp:35:27: warning: parameter 'rowset_fetcher' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
          _rowset_fetcher(rowset_fetcher),
                          ^
                          std::move(    )
/root/starrocks/be/src/storage/binlog_manager.cpp:79:21: warning: parameter 'result' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    _build_result = result;
                    ^
                    std::move( )
/root/starrocks/be/src/storage/binlog_manager.cpp:82:75: warning: the parameter 'result' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void BinlogManager::abort_ingestion(int64_t version, BinlogBuildResultPtr result) {
                                                                          ^
                                                     const               &
/root/starrocks/be/src/storage/binlog_manager.cpp:313:9: warning: use range-based for loop instead [modernize-loop-convert]
        for (auto it = _alive_binlog_files.begin(); it != _alive_binlog_files.end(); it++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (auto & _alive_binlog_file : _alive_binlog_files)
/root/starrocks/be/src/storage/binlog_manager.cpp:332:80: warning: the parameter 'reader' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
StatusOr<int64_t> BinlogManager::register_reader(std::shared_ptr<BinlogReader> reader) {
                                                                               ^
                                                 const                        &
/root/starrocks/be/src/storage/binlog_manager.cpp:377:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return BinlogRange(start->file_meta()->start_version(), start->file_meta()->start_seq_id(),
           ^~~~~~~~~~~~
           {
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_distinct_streaming_sink_operator.cpp.o
/root/starrocks/be/src/exec/pipeline/nljoin/nljoin_probe_operator.cpp:231:93: warning: the parameter 'call' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
                                                  std::function<void(bool, size_t, size_t)> call) {
                                                                                            ^
                                                  const                                    &
/root/starrocks/be/src/exec/pipeline/nljoin/nljoin_probe_operator.cpp:244:66: warning: the parameter 'chunk' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
Status NLJoinProbeOperator::_probe(RuntimeState* state, ChunkPtr chunk) {
                                                                 ^
                                                        const   &
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/aggregate_distinct_streaming_source_operator.cpp.o
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/sorted_aggregate_streaming_sink_operator.cpp.o
/root/starrocks/be/src/storage/lake/txn_log_applier.cpp:140:10: warning: use default member initializer for '_inited' [modernize-use-default-member-init]
    bool _inited;
         ^
                {false}
/root/starrocks/be/src/storage/lake/txn_log_applier.cpp:141:10: warning: use default member initializer for '_check_meta_version_succ' [modernize-use-default-member-init]
    bool _check_meta_version_succ;
         ^
                                 {false}
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/sorted_aggregate_streaming_source_operator.cpp.o
[ 93%] Linking CXX static library ../../../output/tmp/RELEASE/libStorage.a
[ 93%] Built target Storage
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/spillable_aggregate_blocking_sink_operator.cpp.o
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/spillable_aggregate_blocking_source_operator.cpp.o
[ 93%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/aggregate/repeat/repeat_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/analysis/analytic_sink_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/analysis/analytic_source_operator.cpp.o
/root/starrocks/be/src/exec/pipeline/pipeline_driver_executor.cpp:286:5: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
    StreamPipelineDriver* stream_driver = down_cast<StreamPipelineDriver*>(driver);
    ^~~~~~~~~~~~~~~~~~~~
    auto
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/table_function_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/assert_num_rows_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/union_passthrough_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/union_const_source_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hashjoin/hash_join_build_operator.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hashjoin/hash_join_probe_operator.cpp.o
In file included from /root/starrocks/be/src/exec/pipeline/sort/spillable_partition_sort_sink_operator.cpp:23:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
1 warning generated.
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hashjoin/hash_joiner_factory.cpp.o
[ 94%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/except_context.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/except_build_sink_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/except_probe_sink_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/except_output_source_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/intersect_context.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/intersect_build_sink_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/intersect_probe_sink_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/set/intersect_output_source_operator.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hash_partition_context.cpp.o
[ 95%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hash_partition_sink_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/hash_partition_source_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/adaptive/collect_stats_sink_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/adaptive/collect_stats_source_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/adaptive/collect_stats_context.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/adaptive/lazy_instantiate_drivers_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/adaptive/utils.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/chunk_accumulate_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/pipeline.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/spill_process_operator.cpp.o
[ 96%] Building CXX object src/exec/CMakeFiles/Exec.dir/pipeline/spill_process_channel.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/workgroup/work_group.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/workgroup/scan_executor.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/workgroup/scan_task_queue.cpp.o
In file included from /root/starrocks/be/src/exec/pipeline/aggregate/spillable_aggregate_blocking_sink_operator.cpp:24:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
1 warning generated.
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/multilane_operator.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/cache_operator.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/cache_manager.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/lane_arbiter.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/conjugate_operator.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/query_cache/ticket_checker.cpp.o
[ 97%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/spiller.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/spiller_factory.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/spill_components.cpp.o
In file included from /root/starrocks/be/src/exec/pipeline/set/except_output_source_operator.cpp:15:
/root/starrocks/be/src/exec/pipeline/set/except_output_source_operator.h:47:19: warning: private field '_dependency_index' is not used [-Wunused-private-field]
    const int32_t _dependency_index;
                  ^
1 warning generated.
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/mem_table.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/dir_manager.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/serde.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/input_stream.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/spill/log_block_manager.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/state/mem_state_table.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/aggregate/agg_state_data.cpp.o
[ 98%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/aggregate/agg_group_state.cpp.o
[ 99%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/aggregate/stream_aggregator.cpp.o
[ 99%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/aggregate/stream_aggregate_operator.cpp.o
[ 99%] Building CXX object src/exec/CMakeFiles/Exec.dir/stream/stream_aggregate_node.cpp.o
/root/starrocks/be/src/exec/spill/log_block_manager.cpp:152:78: warning: the parameter 'query_id' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
StatusOr<LogBlockContainerPtr> LogBlockContainer::create(Dir* dir, TUniqueId query_id, int32_t plan_node_id,
                                                                             ^
                                                                   const    &
/root/starrocks/be/src/exec/spill/log_block_manager.cpp:197:44: warning: the parameter 'query_id' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
LogBlockManager::LogBlockManager(TUniqueId query_id) : _query_id(std::move(query_id)) {
                                           ^
                                 const    &
/root/starrocks/be/src/exec/pipeline/adaptive/lazy_instantiate_drivers_operator.cpp:113:24: warning: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Wpotentially-evaluated-expression]
            if (typeid(*pipeline->sink_operator_factory()) != typeid(ResultSinkOperatorFactory)) {
                       ^
1 warning generated.
/root/starrocks/be/src/exec/spill/input_stream.cpp:242:42: warning: the parameter 'serde' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
Status OrderedInputStream::init(SerdePtr serde, const SortExecExprs* sort_exprs, const SortDescs* descs) {
                                         ^
                                const   &
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:72:28: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
    found.resize(num_rows, 0);
                           ^
                           false
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:77:24: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
            found[i] = 1;
                       ^
                       true
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:107:28: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
    found.resize(num_rows, 0);
                           ^
                           false
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:116:28: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
                found[i] = 1;
                           ^
                           true
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:138:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto iter = _kv_mapping.begin(); iter != _kv_mapping.end(); iter++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & iter : _kv_mapping)
/root/starrocks/be/src/exec/stream/state/mem_state_table.cpp:199:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < cols.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & col : cols)
In file included from /root/starrocks/be/src/exec/pipeline/spill_process_operator.cpp:21:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
1 warning generated.
In file included from /root/starrocks/be/src/exec/spill/spiller.cpp:35:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
1 warning generated.
/root/starrocks/be/src/exec/spill/spiller_factory.cpp:23:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace starrocks {
^~~~~~~~~~~~~~~~~~~~~
namespace starrocks::spill
In file included from /root/starrocks/be/src/exec/spill/spill_components.cpp:19:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spiller.hpp:99:21: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
    return _reader->trigger_restore(state, executor, guard);
                    ^
/root/starrocks/be/src/exec/spill/spiller.h:109:33: note: in instantiation of function template specialization 'starrocks::spill::Spiller::trigger_restore<starrocks::spill::IOTaskExecutor &, const starrocks::spill::MemTrackerGuard &>' requested here
                RETURN_IF_ERROR(trigger_restore(state, executor, guard));
                                ^
In file included from /root/starrocks/be/src/exec/spill/spill_components.cpp:19:
/root/starrocks/be/src/exec/spill/spiller.hpp:168:36: warning: lambda capture 'state' is not used [-Wunused-lambda-capture]
        auto restore_task = [this, state, guard]() {
                                   ^
/root/starrocks/be/src/exec/spill/spill_components.cpp:157:33: note: in instantiation of function template specialization 'starrocks::spill::SpillerReader::trigger_restore<starrocks::spill::SyncTaskExecutor, const starrocks::spill::MemTrackerGuard &>' requested here
        RETURN_IF_ERROR(reader->trigger_restore(_runtime_state, SyncTaskExecutor{}, guard));
                                ^
2 warnings generated.
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:129:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _detail_state_tables.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & detail_state_table : _detail_state_tables)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:240:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < _agg_states.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & agg_state : _agg_states)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:267:13: warning: use range-based for loop instead [modernize-loop-convert]
            for (size_t j = 0; j < group_by_columns.size(); j++) {
            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                (const auto & group_by_column : group_by_columns)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:302:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < group_by_columns.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & group_by_column : group_by_columns)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:305:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (size_t i = 0; i < agg_intermediate_columns.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (const auto & agg_intermediate_column : agg_intermediate_columns)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:319:15: warning: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy]
    for (auto col : (*result_chunk)->columns()) {
              ^
         const  &
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:353:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _detail_state_tables.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & detail_state_table : _detail_state_tables)
/root/starrocks/be/src/exec/stream/aggregate/agg_group_state.cpp:371:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (auto i = 0; i < _detail_state_tables.size(); i++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & detail_state_table : _detail_state_tables)
/root/starrocks/be/src/exec/stream/aggregate/stream_aggregator.cpp:29:34: warning: the parameter 'result_chunk' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void append_prev_result(ChunkPtr result_chunk, const Columns& group_by_columns, size_t row_idx, ChunkPtr prev_result,
                                 ^
                        const   &
/root/starrocks/be/src/exec/stream/aggregate/stream_aggregator.cpp:29:106: warning: the parameter 'prev_result' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
void append_prev_result(ChunkPtr result_chunk, const Columns& group_by_columns, size_t row_idx, ChunkPtr prev_result,
                                                                                                         ^
                                                                                                const   &
[ 99%] Linking CXX static library ../../../output/tmp/RELEASE/libExec.a
[ 99%] Built target Exec
make[2]: *** No rule to make target '/var/local/thirdparty/installed//lib64/libjemalloc.a', needed by '../output/lib/starrocks_be'.  Stop.
make[2]: *** Waiting for unfinished jobs....
[ 99%] Building CXX object src/service/CMakeFiles/starrocks_be.dir/starrocks_main.cpp.o
/root/starrocks/be/src/service/starrocks_main.cpp:102:5: warning: use range-based for loop instead [modernize-loop-convert]
    for (int idx = 0; idx < sizeof(levels) / sizeof(levels[0]); idx++) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & idx : levels)
make[1]: *** [CMakeFiles/Makefile2:1162: src/service/CMakeFiles/starrocks_be.dir/all] Error 2
make: *** [Makefile:156: all] Error 2

real	7m32.201s
user	174m35.721s
sys	8m29.744s
